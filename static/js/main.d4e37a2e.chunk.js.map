{"version":3,"sources":["Header.tsx","PrettoSlider.tsx","InputParams.tsx","CurveDesignInputParams.tsx","SimulationInputParams.tsx","utils.ts","math.ts","SupplyVsDemandChart.tsx","ResultParams.tsx","PriceSimulationChart.tsx","HelpText.tsx","App.tsx","theme.tsx","index.tsx"],"names":["cadCadLink","useStyles","makeStyles","theme","createStyles","title","subtitle","color","palette","text","secondary","margin","spacing","subsubtitle","opacity","lightBulb","verticalAlign","marginRight","link","primary","main","logoContainer","display","alignItems","justifyContent","marginBottom","logo","width","logoText","fontSize","fontWeight","Header","classes","react_default","a","createElement","Fragment","className","src","alt","Typography","variant","Link","href","withStyles","root","height","thumb","backgroundColor","border","marginTop","marginLeft","&:focus,&:hover,&$active","boxShadow","active","valueLabel","left","track","borderRadius","rail","markLabel","top","Slider","leftContainer","centerContainer","listBoxContainer","& > div:not(:last-child)","paddingBottom","borderBottom","listBox","& > div","& p","paddingRight","slider","secondaryColor","light","NumberFormatCustom","props","inputRef","onChange","prefix","suffix","other","Object","objectWithoutProperties","number_format_default","assign","getInputRef","onValueChange","values","target","value","thousandSeparator","InputParams","_ref","inputFields","onChangeCommited","map","_ref2","label","setter","min","max","step","format","toText","toNum","sanitizeInput","num","arguments","length","undefined","isNaN","Grid","key","container","item","xs","id","gutterBottom","TextField","e","parseFloat","InputProps","inputComponent","disableUnderline","inputProps","PrettoSlider","concat","valueLabelDisplay","aria-label","defaultValue","_","newValue","Number","onChangeCommitted","valueLabelFormat","replace","CurveDesignInputParams","curveParams","setCurveParams","_useState","useState","_useState2","slicedToArray","theta","setTheta","_useState3","_useState4","p0","setP0","_useState5","_useState6","p1","setP1","_useState7","_useState8","wFee","setWFee","useEffect","maxReturnRate","n","Math","round","String","toFixed","newP0","params","objectSpread","d0","setD0","floor","linspace","_ref$from","from","to","steps","arr","x","push","getLinspaceTicks","data","desiredPoints","getLast","getAvg","reduce","t","c","abs","pause","ms","Promise","r","setTimeout","getInitialParams","k","R0","S0","V0","pow","getR","S","getS","_ref3","R","getMinPrice","_ref4","H","myP","getPriceR","_ref5","getSlippage","_ref6","deltaR","realizedPrice","spotPrice","getDeltaR_priceGrowth","_ref7","priceGrowth","getTxDistribution","_ref8","sum","mean","off","spread","i","randn_bm","vest_tokens","_ref9","week","halflife","cliff","rv_U","random","u","v","sqrt","log","cos","PI","getMedian","mid","nums","toConsumableArray","sort","b","keyHorizontal","keyVertical","tooltip","padding","SupplyVsDemandChart","_getInitialParams","R0_round","f","biggest","scaling","unit","_data$push","defineProperty","useTheme","formatter","toPrecision","toLocaleString","es6","debounce","right","bottom","strokeDasharray","interval","dataKey","tickFormatter","tick","fill","stroke","ticks","d","domain","content","payload","supply","reserve","price","toolTipData","name","isAnimationActive","type","fillOpacity","strokeWidth","textAnchor","viewBox","y","style","ResultParams","resultFields","keyVerticalLeft","keyVerticalRight","keyVerticalLeft2","PriceSimulationChart","priceTimeseries","withdrawFeeTimeseries","floorpriceTimeseries","ReferenceLabel","yAxisId","apply","slice","orientation","exit","weekNum","dark","cursor","transition","&:hover","popoverContainer","paper","maxWidth","breakpoints","md","SimplePopover","_React$useState","React","_React$useState2","anchorEl","setAnchorEl","handleClose","open","Boolean","HelpOutline_default","onClick","currentTarget","Popover","PaperProps","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Box","mainContainer","paddingTop","simulationContainer","minHeight","box","boxButton","boxHeader","boxBorderBottom","initialRaise","boxChart","maxHeight","paddingLeft","boxPlaceholder","header","textAlign","button","background","descriptionContainer","& td","descriptionTitle","typography","fontWeightBold","descriptionName","descriptionPadding","parameterDescriptions","simulationParameterDescriptions","resultParameterDescriptions","createMuiTheme","error","red","A400","default","h6","console","ReactDOM","render","ThemeProvider","CssBaseline","setCurveParamsThrottle","useMemo","throttle","setPriceTimeseries","setWithdrawFeeTimeseries","setFloorpriceTimeseries","_useState9","_useState10","totalReserve","setTotalReserve","_useState11","_useState12","withdrawCount","setWithdrawCount","_useState13","_useState14","avgSlippage","setAvgSlippage","_useState15","_useState16","avgTxSize","setAvgTxSize","_useState17","_useState18","simulationActive","setSimulationActive","_useState19","_useState20","simulationRunning","setSimulationRunning","_startSimulation","asyncToGenerator","regenerator_default","mark","_callee2","wrap","_context2","prev","next","stop","this","canContinueSimulation","_simulateRandomDelta","_callee","R_t","S_t","p_t","wFee_t","slippage_t","avgTxSize_t","H_t","floorprice_t","numSteps","_loop","_context","txsWeek","u_lower","R_ratio","R_next","txs","slippage","txR","txsWithdraw","filter","tx","wFees","H_next","S_next","floorprice_next","_avgTxSize","abrupt","simulateRandomDelta","Container","fixed","sm","lg","Paper","SimulationInputParams_CurveDesignInputParams","src_SupplyVsDemandChart","direction","justify","Button","disabled","src_PriceSimulationChart","document","querySelector"],"mappings":"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","file":"static/js/main.d4e37a2e.chunk.js","sourcesContent":["import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst cadCadLink =\n  \"https://medium.com/block-science/cadcad-filling-a-critical-gap-in-open-source-data-science-fcd0d3faa8ed\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      // color: theme.palette.text.secondary,\n    },\n    subtitle: {\n      color: theme.palette.text.secondary,\n      margin: theme.spacing(3, 0, 0)\n    },\n    subsubtitle: {\n      color: theme.palette.text.secondary,\n      opacity: 0.6\n    },\n    lightBulb: {\n      verticalAlign: \"middle\",\n      marginRight: theme.spacing(1)\n    },\n    link: {\n      color: theme.palette.primary.main\n    },\n    logoContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      marginBottom: theme.spacing(4)\n    },\n    logo: {\n      width: \"25px\",\n      marginRight: \"4px\"\n    },\n    logoText: {\n      display: \"inline\",\n      fontSize: \"1.1rem\",\n      fontWeight: 500\n    }\n  })\n);\n\nexport default function Header() {\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.logoContainer}>\n        <img src=\"./favicon.ico\" className={classes.logo} alt=\"logo\" />\n        <Typography className={classes.logoText}>Commons Stack</Typography>\n      </div>\n\n      <Typography className={classes.title} variant=\"h4\">\n        Augmented Token Bonding Curve Design\n      </Typography>\n\n      <Typography className={classes.subtitle}>\n        Experiment and test augmented token bonding curves\n      </Typography>\n      <Typography className={classes.subsubtitle}>\n        A narrative showcase of <Link href={cadCadLink}>cadCAD</Link>\n        's capabilities\n      </Typography>\n    </>\n  );\n}\n","import { withStyles } from \"@material-ui/core/styles\";\nimport Slider from \"@material-ui/core/Slider\";\n\nexport default withStyles({\n  root: {\n    height: 8\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: \"#fff\",\n    border: \"2px solid currentColor\",\n    marginTop: -8,\n    marginLeft: -12,\n    \"&:focus,&:hover,&$active\": {\n      boxShadow: \"inherit\"\n    }\n  },\n  active: {},\n  valueLabel: {\n    left: \"calc(-50% + 4px)\"\n  },\n  track: {\n    height: 8,\n    borderRadius: 4\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4\n  },\n  markLabel: {\n    top: 30\n  }\n})(Slider);\n","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport NumberFormat from \"react-number-format\";\nimport { InputFieldInterface } from \"./types\";\nimport PrettoSlider from \"./PrettoSlider\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: theme.spacing(6, 0, 3)\n    },\n    lightBulb: {\n      verticalAlign: \"middle\",\n      marginRight: theme.spacing(1)\n    },\n    leftContainer: {\n      color: theme.palette.text.secondary\n    },\n    centerContainer: {\n      // color: blackColor\n    },\n    listBoxContainer: {\n      \"& > div:not(:last-child)\": {\n        paddingBottom: \"12px\",\n        marginBottom: \"12px\",\n        borderBottom: \"1px solid #313d47\"\n      }\n    },\n    listBox: {\n      \"& > div\": {\n        display: \"flex\",\n        alignItems: \"center\",\n        \"& p\": {\n          marginBottom: 0\n        }\n      },\n      \"& > div:not(:last-child)\": {\n        paddingRight: \"12px\"\n      }\n    },\n    slider: {\n      color: theme.palette.primary.main\n    },\n    secondaryColor: {\n      color: theme.palette.secondary.light\n    }\n  })\n);\n\nfunction NumberFormatCustom(props: any) {\n  const { inputRef, onChange, prefix, suffix, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({ target: { value: values.value } });\n      }}\n      thousandSeparator\n      prefix={prefix}\n      suffix={suffix}\n    />\n  );\n}\n\nexport default function InputParams({\n  inputFields,\n  onChangeCommited\n}: {\n  inputFields: InputFieldInterface[];\n  onChangeCommited(): void;\n}) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.listBoxContainer}>\n      {inputFields.map(\n        ({\n          label,\n          value,\n          setter,\n          min,\n          max,\n          step,\n          prefix,\n          suffix,\n          secondaryColor,\n          format,\n          toText,\n          toNum\n        }) => {\n          function sanitizeInput(num: number = 0) {\n            if (isNaN(num)) num = 0;\n            if (num > max) num = max;\n            else if (num < min) num = min;\n            setter(num);\n          }\n\n          return (\n            <Grid key={label} container spacing={0} className={classes.listBox}>\n              <Grid item xs={6} className={classes.leftContainer}>\n                <Typography id={label} gutterBottom>\n                  {label}\n                </Typography>\n              </Grid>\n\n              <Grid item xs={2} className={classes.centerContainer}>\n                {/* <Typography gutterBottom>{display(value)}</Typography> */}\n                <TextField\n                  onChange={e => {\n                    sanitizeInput(\n                      toNum ? toNum(e.target.value) : parseFloat(e.target.value)\n                    );\n                    onChangeCommited();\n                  }}\n                  InputProps={{\n                    inputComponent: NumberFormatCustom,\n                    disableUnderline: true,\n                    inputProps: {\n                      prefix,\n                      suffix\n                    }\n                  }}\n                  value={toText ? toText(value) : value}\n                />\n              </Grid>\n\n              <Grid item xs={4}>\n                <PrettoSlider\n                  className={`${classes.slider} ${\n                    secondaryColor ? classes.secondaryColor : \"\"\n                  }`}\n                  valueLabelDisplay=\"auto\"\n                  aria-label={label}\n                  defaultValue={value}\n                  onChange={(_, newValue) => sanitizeInput(Number(newValue))}\n                  onChangeCommitted={onChangeCommited}\n                  value={value}\n                  min={min}\n                  max={max}\n                  step={step}\n                  valueLabelFormat={value => format(value).replace(\"$\", \"\")}\n                />\n              </Grid>\n            </Grid>\n          );\n        }\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { InputFieldInterface, CurveParamsInterface } from \"./types\";\nimport InputParams from \"./InputParams\";\n\nexport default function CurveDesignInputParams({\n  curveParams,\n  setCurveParams\n}: {\n  curveParams: CurveParamsInterface;\n  setCurveParams(newCurveParams: any): void;\n}) {\n  const [theta, setTheta] = useState(0.35); // fraction allocated to reserve (.)\n  const [p0, setP0] = useState(0.1); // Hatch sale Price p0 (DAI / token)\n  const [p1, setP1] = useState(0.3); // Return factor (.)\n  const [wFee, setWFee] = useState(0.05); // friction coefficient (.)\n\n  useEffect(() => {\n    setTheta(curveParams.theta);\n    setP0(curveParams.p0);\n    setP1(curveParams.p1);\n    setWFee(curveParams.wFee);\n  }, [curveParams]);\n\n  function _setP0(newP0: number) {\n    setP0(newP0);\n    if (p1 < newP0) setP1(newP0);\n    else if (p1 > newP0 * maxReturnRate) setP1(newP0 * maxReturnRate);\n  }\n\n  function setParentCurveParams() {\n    setCurveParams((params: CurveParamsInterface) => ({\n      ...params,\n      theta,\n      p0,\n      p1,\n      wFee\n    }));\n  }\n\n  const maxReturnRate = 10;\n\n  const inputFields: InputFieldInterface[] = [\n    {\n      label: \"Allocation to funding pool\",\n      value: theta,\n      setter: setTheta,\n      min: 0,\n      max: 0.9,\n      step: 0.01,\n      suffix: \"%\",\n      format: (n: number) => `${Math.round(100 * n)}%`,\n      toText: (n: number) => String(+(n * 1e2).toFixed(0)),\n      toNum: (n: string) => parseFloat(n) * 1e-2\n    },\n    {\n      label: \"Hatch price (DAI/token)\",\n      value: p0,\n      setter: _setP0,\n      min: 0.01,\n      max: 1,\n      step: 0.01,\n      toText: (n: number) => String(+n.toFixed(2)),\n      toNum: (n: string) => parseFloat(n),\n      format: (n: number) => `$${n}`\n    },\n    {\n      label: \"Post-hatch price (DAI/token)\",\n      value: p1,\n      setter: setP1,\n      min: p0 || 0.1,\n      max: Number((maxReturnRate * p0).toFixed(2)),\n      step: 0.01,\n      toText: (n: number) => String(+n.toFixed(2)),\n      toNum: (n: string) => parseFloat(n),\n      format: (n: number) => `$${n}`\n    },\n    {\n      label: \"Exit tribute\",\n      value: wFee,\n      setter: setWFee,\n      min: 0,\n      max: 0.1,\n      step: 0.001,\n      suffix: \"%\",\n      format: (n: number) => `${+(100 * n).toFixed(1)}%`,\n      toText: (n: number) => String(+(n * 1e2).toFixed(1)),\n      toNum: (n: string) => parseFloat(n) * 1e-2\n    }\n  ];\n\n  return (\n    <InputParams\n      inputFields={inputFields}\n      onChangeCommited={setParentCurveParams}\n    />\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { InputFieldInterface, CurveParamsInterface } from \"./types\";\nimport InputParams from \"./InputParams\";\n\nexport default function CurveDesignInputParams({\n  curveParams,\n  setCurveParams\n}: {\n  curveParams: CurveParamsInterface;\n  setCurveParams(newCurveParams: any): void;\n}) {\n  const [d0, setD0] = useState(3e6); // Initial raise, d0 (DAI)\n\n  useEffect(() => {\n    setD0(curveParams.d0);\n  }, [curveParams]);\n\n  function setParentCurveParams() {\n    setCurveParams((params: CurveParamsInterface) => ({\n      ...params,\n      d0\n    }));\n  }\n\n  const inputFields: InputFieldInterface[] = [\n    {\n      label: \"Initial raise (DAI)\",\n      value: d0,\n      setter: setD0,\n      min: 0.1e6,\n      max: 10e6,\n      step: 0.1e6,\n      suffix: \"M\",\n      format: (n: number) => `$${+(n * 1e-6).toFixed(1)}M`,\n      toText: (n: number) => String(+(n * 1e-6).toFixed(1)),\n      toNum: (n: string) => Math.floor(parseFloat(n) * 1e6),\n      secondaryColor: true\n    }\n  ];\n\n  return (\n    <InputParams\n      inputFields={inputFields}\n      onChangeCommited={setParentCurveParams}\n    />\n  );\n}\n","/**\n * Returns an equally spaced array of numbers `from`, `to` with `steps`.\n */\nexport function linspace({\n  from = 0,\n  to,\n  steps\n}: {\n  from?: number;\n  to: number;\n  steps: number;\n}) {\n  const arr = [];\n  for (let x = from; x <= to; x += (to - from) / steps) arr.push(x);\n  return arr;\n}\n\n/**\n * Returns a uniform distribution of `num` ticks\n */\nexport function getLinspaceTicks(data: number[], num: number) {\n  const desiredPoints = [];\n  const step = (data[data.length - 1] - data[0]) / num;\n  for (let x = data[0]; x < data[data.length - 1]; x += step) {\n    desiredPoints.push(x);\n  }\n  if (desiredPoints.length < num + 1) desiredPoints.push(data[data.length - 1]);\n\n  return desiredPoints;\n}\n\n/**\n * Returns the last element of an array\n */\nexport function getLast(a: number[]) {\n  return a[a.length - 1];\n}\n\n/**\n * Returns the average of an array\n */\nexport function getAvg(a: number[]) {\n  return a.reduce((t, c) => t + Math.abs(c), 0) / a.length;\n}\n\n/**\n * Waits `ms` miliseconds and resolves\n */\nexport function pause(ms: number) {\n  return new Promise(r => setTimeout(r, ms));\n}\n","/**\n * Computes the initial params given the \"user friendly\" params:\n * - Initial raise, `d0` (DAI)\n * - fraction allocated to reserve, `theta`\n * - Hatch sale price, `p0` (DAI / token)\n * - Return factor, `returnF`\n */\nexport function getInitialParams({\n  d0,\n  theta,\n  p0,\n  p1\n}: {\n  d0: number;\n  theta: number;\n  p0: number;\n  p1: number;\n}) {\n  const k = p1 / p0 / (1 - theta); // Invariant power kappa (.)\n  const R0 = (1 - theta) * d0; // Initial reserve (DAI)\n  const S0 = d0 / p0; // initial supply of tokens (token)\n  const V0 = S0 ** k / R0; // invariant coef\n  return { k, R0, S0, V0 };\n}\n\nexport function getR({ S, V0, k }: { S: number; V0: number; k: number }) {\n  return S ** k / V0;\n}\n\nexport function getS({ R, V0, k }: { R: number; V0: number; k: number }) {\n  return (V0 * R) ** (1 / k);\n}\n\n// compute the price if all that supply is burned\nexport function getMinPrice({\n  S,\n  H,\n  V0,\n  k\n}: {\n  S: number;\n  H: number;\n  V0: number;\n  k: number;\n}) {\n  if (S === H) {\n    const myR = getR({ S, V0, k });\n    const myP = getPriceR({ R: myR, V0, k }); // numerical precision make complex numbers just suppress it\n    return Math.abs(myP);\n  } else {\n    // compute the reserve if all that supply is burned\n    const minR = getR({ S: S - H, V0, k });\n    return getPriceR({ R: minR, V0, k });\n  }\n}\n\n/**\n * Computes the price at a specific reserve `R`\n */\nexport function getPriceR({ R, V0, k }: { R: number; V0: number; k: number }) {\n  return (k * R ** ((k - 1) / k)) / V0 ** (1 / k);\n}\n\n/**\n * Compute slippage at a point `R`, given a `deltaR`\n */\nexport function getSlippage({\n  R,\n  deltaR,\n  V0,\n  k\n}: {\n  R: number;\n  deltaR: number;\n  V0: number;\n  k: number;\n}) {\n  const S = (V0 * R) ** (1 / k);\n  const deltaS = (V0 * (R + deltaR)) ** (1 / k) - S;\n  const realizedPrice = deltaR / deltaS;\n  const spotPrice = getPriceR({ R, V0, k });\n  return Math.abs(realizedPrice - spotPrice) / spotPrice;\n}\n\n// Price walk utils\n\n/**\n * Get deltaR for a given price growth factor\n */\nexport function getDeltaR_priceGrowth({\n  R,\n  k,\n  priceGrowth\n}: {\n  R: number;\n  k: number;\n  priceGrowth: number;\n}) {\n  return -R + (priceGrowth * R ** (1 - 1 / k)) ** (k / (-1 + k));\n}\n\n/**\n * Computes a tx distribution using a normal distribution,\n * Given a sum of tx value and a number of transactions\n *\n * Demo: https://codepen.io/anon/pen/mNqJjv?editors=0010#0\n * Very quick: < 10ms for 10000 txs\n */\nexport function getTxDistribution({\n  sum,\n  num,\n  spread\n}: {\n  sum: number;\n  num: number;\n  spread: number;\n}) {\n  const mean = sum / num;\n  const off = mean * spread;\n  const x: number[] = [];\n  for (let i = 0; i < num; i++) {\n    x.push(randn_bm(mean - off, mean + off));\n  }\n  return x;\n}\n\nexport function vest_tokens({\n  week,\n  H, // unvested_hatch_tokens\n  halflife,\n  cliff\n}: {\n  week: number;\n  H: number;\n  halflife: number;\n  cliff: number;\n}) {\n  // check cliff\n  if (week < cliff) {\n    return 0;\n  } else {\n    // rate of release given half - life\n    const vest_fraction = 0.5 ** (1 / halflife);\n    // number of tokens that vest in this week\n    return H * (1 - vest_fraction);\n  }\n}\n\n// Statistics utils\n\n/**\n * Random variable uniformly distributed\n */\nexport function rv_U(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\n/**\n * Standard Normal variate using Box-Muller transform.\n * by https://stackoverflow.com/questions/25582882/javascript-math-random-normal-distribution-gaussian-bell-curve/36481059#36481059\n */\nfunction randn_bm(min: number, max: number) {\n  var u = 0,\n    v = 0;\n  while (u === 0) u = Math.random(); //Converting [0,1) to (0,1)\n  while (v === 0) v = Math.random();\n  let num = Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI * v);\n\n  num = num / 10.0 + 0.5; // Translate to 0 -> 1\n  if (num > 1 || num < 0) num = randn_bm(min, max); // resample between 0 and 1 if out of range\n  num *= max - min; // Stretch to fill range\n  num += min; // offset to min\n  return num;\n}\n\n// Array utils\n\nexport function getMedian(arr: number[]) {\n  const mid = Math.floor(arr.length / 2);\n  const nums = [...arr].sort((a, b) => a - b);\n  return arr.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2;\n}\n\nexport function getSum(arr: number[]) {\n  return arr.reduce((a, b) => a + b, 0);\n}\n","import React from \"react\";\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Legend,\n  ReferenceLine,\n  ResponsiveContainer,\n  Tooltip\n} from \"recharts\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { getLinspaceTicks } from \"./utils\";\nimport { getInitialParams, getPriceR } from \"./math\";\nimport { useTheme } from \"@material-ui/styles\";\n\nconst keyHorizontal = \"x\";\nconst keyVertical = \"Supply (tokens) / Reserve (DAI)\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    tooltip: {\n      border: \"1px solid #313d47\",\n      backgroundColor: \"#384b59\",\n      padding: theme.spacing(1),\n      color: \"#c7ccd2\"\n    }\n  })\n);\n\nfunction SupplyVsDemandChart({\n  theta,\n  d0,\n  p0,\n  p1\n}: {\n  theta: number;\n  d0: number;\n  p0: number;\n  p1: number;\n}) {\n  // d0      - Initial raise, d0 (DAI)\n  // theta   - fraction allocated to reserve (.)\n  // p0      - Hatch sale Price p0 (DAI / token)\n  // returnF - Return factor (.)\n  // wFee    - friction coefficient (.)\n\n  // Hatch parameters\n  const {\n    k, // Invariant power kappa (.)\n    R0, // Initial reserve (DAI)\n    S0, // initial supply of tokens (token)\n    V0 // invariant coef\n  } = getInitialParams({\n    d0,\n    theta,\n    p0,\n    p1\n  });\n  const R0_round = Math.round(R0);\n  const S_of_R = (R: number) => S0 * (R / R0_round) ** (1 / k);\n\n  // Function setup\n  const f = S_of_R;\n  const from = 0;\n  const to = 4 * R0_round;\n  const steps = 100 + 1; // Add 1 for the ticks to match\n  const step = Math.round((to - from) / (steps - 1));\n\n  /**\n   * Prettify the result converting 1000000 to 1M\n   */\n  const biggest = Math.max(to, f(to));\n  const [scaling, unit] =\n    // Billion\n    biggest > 0.5e9\n      ? [1e9, \"B\"]\n      : // Million\n      biggest > 0.5e6\n      ? [1e6, \"M\"]\n      : // 1 thousand\n      biggest > 0.5e3\n      ? [1e3, \"K\"]\n      : // No scale\n        [1, \"\"];\n\n  const data = [];\n  for (let i = 0; i < steps; i++) {\n    const x = Math.round(from + step * i);\n    data.push({\n      [keyHorizontal]: x,\n      [keyVertical]: f(x)\n    });\n  }\n\n  // Chart components\n\n  const theme: any = useTheme();\n  const classes = useStyles();\n\n  const formatter = (n: number) =>\n    (+(n / scaling).toPrecision(2)).toLocaleString();\n\n  function renderColorfulLegendText(value: string) {\n    return <span style={{ color: theme.palette.text.secondary }}>{value}</span>;\n  }\n\n  function ReferenceLabel(props: any) {\n    const { textAnchor, viewBox } = props;\n    return (\n      <text\n        x={viewBox.x + 10}\n        y={30}\n        fill={theme.palette.text.secondary}\n        textAnchor={textAnchor}\n      >\n        Initial value\n      </text>\n    );\n  }\n\n  function CustomTooltip({ active, payload, label }: any) {\n    if (active) {\n      const supply = payload[0].value;\n      const reserve = label;\n      const price = getPriceR({ R: reserve, V0, k });\n      const toolTipData: string[][] = [\n        [\"Supply\", formatter(supply) + unit, \"tokens\"],\n        [\"Reserve\", formatter(reserve) + unit, \"DAI\"],\n        [\"Price\", price.toFixed(2), \"DAI/token\"]\n      ];\n      return (\n        <div className={classes.tooltip}>\n          <table>\n            <tbody>\n              {toolTipData.map(([name, value, unit]) => (\n                <tr key={name}>\n                  <td>{name}</td>\n                  <td>{value}</td>\n                  <td>{unit}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      );\n    } else return null;\n  }\n\n  return (\n    <ResponsiveContainer debounce={1}>\n      <AreaChart\n        width={0}\n        height={400}\n        data={data}\n        margin={{\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          interval={24}\n          dataKey={keyHorizontal}\n          tickFormatter={formatter}\n          unit={unit}\n          tick={{ fill: theme.palette.text.secondary }}\n          stroke={theme.palette.text.secondary}\n        />\n        <YAxis\n          interval={\"preserveStartEnd\"}\n          ticks={getLinspaceTicks(data.map(d => d[keyVertical]), 3)}\n          tickFormatter={formatter}\n          unit={unit}\n          tick={{ fill: theme.palette.text.secondary }}\n          domain={[0, f(to)]}\n          stroke={theme.palette.text.secondary}\n        />\n        <Tooltip content={<CustomTooltip />} />\n        <Area\n          isAnimationActive={false}\n          type=\"monotone\"\n          dataKey={keyVertical}\n          stroke={theme.palette.primary.main}\n          fill={theme.palette.primary.main}\n          fillOpacity={0.3}\n          strokeWidth={2}\n        />\n        <ReferenceLine\n          x={R0_round}\n          stroke={theme.palette.primary.main}\n          strokeDasharray=\"9 0\"\n          label={<ReferenceLabel />}\n        />\n        <Legend formatter={renderColorfulLegendText} />\n      </AreaChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport default SupplyVsDemandChart;\n","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: theme.spacing(6, 0, 3)\n    },\n    lightBulb: {\n      verticalAlign: \"middle\",\n      marginRight: theme.spacing(1)\n    },\n    leftContainer: {\n      color: theme.palette.text.secondary\n    },\n    centerContainer: {\n      // color: blackColor\n    },\n    listBoxContainer: {\n      \"& > div:not(:last-child)\": {\n        marginBottom: \"12px\",\n        borderBottom: \"1px solid #313d47\"\n      }\n    },\n    listBox: {\n      paddingBottom: \"12px\",\n      \"& > div\": {\n        display: \"flex\",\n        alignItems: \"center\",\n        \"& p\": {\n          marginBottom: 0\n        }\n      },\n      \"& > div:not(:last-child)\": {\n        paddingRight: \"12px\"\n      }\n    }\n  })\n);\n\nexport default function ResultParams({\n  resultFields\n}: {\n  resultFields: {\n    label: string;\n    value: number | string;\n  }[];\n}) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.listBoxContainer}>\n      {resultFields.map(({ label, value }) => (\n        <Grid key={label} container spacing={0} className={classes.listBox}>\n          <Grid item xs={8} className={classes.leftContainer}>\n            <Typography id={label} gutterBottom>\n              {label}\n            </Typography>\n          </Grid>\n\n          <Grid item xs={4} className={classes.centerContainer}>\n            <Typography gutterBottom>{value}</Typography>\n          </Grid>\n        </Grid>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Legend,\n  ReferenceLine,\n  ResponsiveContainer,\n  Tooltip\n} from \"recharts\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { linspace } from \"./utils\";\n\nconst keyHorizontal = \"x\";\nconst keyVerticalLeft = \"Price (DAI/token)\";\nconst keyVerticalRight = \"Total exit tributes (DAI)\";\nconst keyVerticalLeft2 = \"Floor price (DAI/token)\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    tooltip: {\n      border: \"1px solid #313d47\",\n      backgroundColor: \"#384b59\",\n      padding: theme.spacing(1),\n      color: \"#c7ccd2\"\n    }\n  })\n);\n\nfunction PriceSimulationChart({\n  priceTimeseries,\n  withdrawFeeTimeseries,\n  floorpriceTimeseries,\n  p0,\n  p1\n}: {\n  priceTimeseries: number[];\n  withdrawFeeTimeseries: number[];\n  floorpriceTimeseries: number[];\n  p0: number;\n  p1: number;\n}) {\n  // d0      - Initial raise, d0 (DAI)\n  // theta   - fraction allocated to reserve (.)\n  // p0      - Hatch sale Price p0 (DAI / token)\n  // returnF - Return factor (.)\n  // wFee    - friction coefficient (.)\n\n  const data = [];\n  for (let t = 0; t < priceTimeseries.length; t++) {\n    data.push({\n      [keyHorizontal]: t,\n      [keyVerticalLeft]: priceTimeseries[t] || 0,\n      [keyVerticalLeft2]: floorpriceTimeseries[t] || 0,\n      [keyVerticalRight]: withdrawFeeTimeseries[t] || 0\n    });\n  }\n\n  // Chart components\n\n  const theme: any = useTheme();\n  const classes = useStyles();\n\n  function renderColorfulLegendText(value: string) {\n    return <span style={{ color: theme.palette.text.secondary }}>{value}</span>;\n  }\n\n  const formatter = (n: number) => (+n.toPrecision(3)).toLocaleString();\n\n  function ReferenceLabel(props: any) {\n    const { textAnchor, viewBox, text } = props;\n    return (\n      <text\n        x={viewBox.x + 8}\n        y={viewBox.y + 17}\n        fill={theme.palette.text.secondary}\n        textAnchor={textAnchor}\n      >\n        {text}\n      </text>\n    );\n  }\n\n  function CustomTooltip({ active, payload, label }: any) {\n    if (active) {\n      const price = payload[0].value;\n      const floor = payload[1].value;\n      const exit = payload[2].value;\n      const weekNum = label;\n      const toolTipData: string[][] = [\n        [\"Price\", price.toFixed(2), \"DAI/tk\"],\n        [\"Floor\", floor.toFixed(2), \"DAI/tk\"],\n        [\"Exit t.\", formatter(exit), \"DAI\"],\n        [\"Week\", weekNum, \"\"]\n      ];\n\n      return (\n        <div className={classes.tooltip}>\n          <table>\n            <tbody>\n              {toolTipData.map(([name, value, unit]) => (\n                <tr key={name}>\n                  <td>{name}</td>\n                  <td>{value}</td>\n                  <td>{unit}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      );\n    } else return null;\n  }\n\n  return (\n    <ResponsiveContainer debounce={1}>\n      <AreaChart\n        width={0}\n        height={400}\n        data={data}\n        margin={{\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          dataKey={keyHorizontal}\n          tick={{ fill: theme.palette.text.secondary }}\n          stroke={theme.palette.text.secondary}\n          ticks={[\n            ...linspace({\n              to: priceTimeseries.length,\n              steps: 4\n            }).map(Math.floor),\n            priceTimeseries.length - 1\n          ]}\n        />\n\n        {/* Price time evolution */}\n        <YAxis\n          yAxisId=\"left\"\n          domain={[0, Math.max(...priceTimeseries, p1 * 1.25)]}\n          tickFormatter={formatter}\n          tick={{ fill: theme.palette.text.secondary }}\n          stroke={theme.palette.text.secondary}\n        />\n\n        {/* Capital collected from withdraw fees - AXIS */}\n        <YAxis\n          yAxisId=\"right\"\n          domain={[0, +(2 * withdrawFeeTimeseries.slice(-1)[0]).toPrecision(1)]}\n          orientation=\"right\"\n          tick={{ fill: theme.palette.text.secondary }}\n          tickFormatter={formatter}\n          stroke={theme.palette.text.secondary}\n        />\n\n        <Tooltip content={<CustomTooltip />} />\n\n        <Area\n          isAnimationActive={false}\n          yAxisId=\"left\"\n          type=\"monotone\"\n          dataKey={keyVerticalLeft}\n          stroke={theme.palette.primary.main}\n          fill={theme.palette.primary.main}\n          fillOpacity={0.3}\n          strokeWidth={2}\n        />\n        <Area\n          isAnimationActive={false}\n          yAxisId=\"left\"\n          type=\"monotone\"\n          dataKey={keyVerticalLeft2}\n          stroke={\"#adcd2e\"}\n          fill={\"#adcd2e\"}\n          fillOpacity={0.05}\n          strokeWidth={2}\n        />\n\n        <ReferenceLine\n          y={p0}\n          yAxisId=\"left\"\n          stroke={theme.palette.primary.main}\n          strokeDasharray=\"9 0\"\n          label={<ReferenceLabel text=\"Hatch sale price\" />}\n        />\n        <ReferenceLine\n          y={p1}\n          yAxisId=\"left\"\n          stroke={theme.palette.primary.main}\n          strokeDasharray=\"9 0\"\n          label={<ReferenceLabel text=\"After hatch price\" />}\n        />\n\n        {/* Capital collected from withdraw fees - AREA */}\n        <Area\n          isAnimationActive={false}\n          yAxisId=\"right\"\n          type=\"monotone\"\n          dataKey={keyVerticalRight}\n          stroke={\"#0085ff\"}\n          fill={theme.palette.secondary.dark}\n          fillOpacity={0.5}\n          strokeWidth={2}\n        />\n\n        {/* <ReferenceLine\n          x={R0}\n          stroke=\"#90a4ae\"\n          strokeDasharray=\"6 3\"\n          label={<ReferenceLabel />}\n        /> */}\n        <Legend formatter={renderColorfulLegendText} />\n      </AreaChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport default PriceSimulationChart;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Box from \"@material-ui/core/Box\";\nimport HelpIcon from \"@material-ui/icons/HelpOutline\";\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    marginLeft: \"6px\",\n    fontSize: \"0.9rem\",\n    cursor: \"pointer\",\n    transition: \"opacity ease 150ms\",\n    opacity: 0.2,\n    \"&:hover\": {\n      opacity: 0.85\n    }\n  },\n  popoverContainer: {\n    padding: theme.spacing(2)\n  },\n  paper: {\n    backgroundColor: \"#384b59\",\n    maxWidth: theme.breakpoints.values.md * 0.9,\n    [`@media screen and (max-width: ${theme.breakpoints.values.md}px)`]: {\n      maxWidth: \"90vw\"\n    }\n  }\n}));\n\nexport default function SimplePopover({ text }: { text: any }) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  function handleClick(e: any) {\n    setAnchorEl(e.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  return (\n    <div className={classes.container}>\n      <HelpIcon onClick={handleClick} />\n\n      <Popover\n        PaperProps={{\n          className: classes.paper\n        }}\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        onClick={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\"\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\"\n        }}\n      >\n        <Box className={classes.popoverContainer}>{text}</Box>\n      </Popover>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useMemo } from \"react\";\n// Material UI\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\n// Components\nimport Header from \"./Header\";\nimport CurveDesignInputParams from \"./CurveDesignInputParams\";\nimport SimulationInputParams from \"./SimulationInputParams\";\nimport SupplyVsDemandChart from \"./SupplyVsDemandChart\";\nimport ResultParams from \"./ResultParams\";\nimport PriceSimulationChart from \"./PriceSimulationChart\";\nimport HelpText from \"./HelpText\";\n// Utils\nimport { getLast, getAvg, pause } from \"./utils\";\nimport {\n  getInitialParams,\n  getPriceR,\n  getMinPrice,\n  getS,\n  vest_tokens,\n  getR,\n  getSlippage,\n  getTxDistribution,\n  getDeltaR_priceGrowth,\n  rv_U,\n  getMedian,\n  getSum\n} from \"./math\";\nimport { throttle } from \"lodash\";\n// General styles\nimport \"./app.css\";\n\nconst headerOffset = 10;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    mainContainer: {\n      \"& > div:not(:last-child)\": {\n        paddingBottom: theme.spacing(3)\n      },\n      \"& > div\": {\n        \"& > div\": {\n          paddingTop: \"0 !important\"\n        }\n      },\n      paddingBottom: theme.spacing(9)\n    },\n    simulationContainer: {\n      minHeight: \"442px\"\n    },\n    paper: {\n      width: \"100%\",\n      height: \"100%\",\n      minHeight: 310,\n      backgroundColor: \"#293640\"\n    },\n    box: {\n      padding: theme.spacing(3, 3)\n    },\n    boxButton: {\n      padding: theme.spacing(3, 3)\n    },\n    boxHeader: {\n      padding: theme.spacing(3, 3),\n      height: theme.spacing(headerOffset),\n      display: \"flex\",\n      alignItems: \"center\",\n      borderBottom: \"1px solid #313d47\"\n    },\n    boxBorderBottom: {\n      borderBottom: \"1px solid #313d47\"\n    },\n    initialRaise: {\n      justifyContent: \"space-between\"\n    },\n    boxChart: {\n      width: \"100%\",\n      height: \"100%\",\n      minHeight: 310,\n      maxHeight: 350,\n      padding: theme.spacing(3, 3),\n      // Correct the chart excessive margins\n      paddingRight: \"5px\",\n      paddingLeft: \"5px\"\n    },\n    boxPlaceholder: {\n      padding: theme.spacing(3, 3),\n      display: \"flex\",\n      height: \"100%\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      color: theme.palette.text.secondary,\n      opacity: 0.4\n    },\n    header: {\n      backgroundColor: \"#0b1216\",\n      color: \"#f8f8f8\",\n      textAlign: \"center\",\n      padding: theme.spacing(3, 0, 6 + headerOffset),\n      marginBottom: -theme.spacing(headerOffset)\n    },\n    button: {\n      // background: \"linear-gradient(290deg, #2ad179, #4ab47c)\", // Green gradient\n      background: \"linear-gradient(290deg, #1880e0, #3873d8)\", // blue gradient\n      color: \"white\"\n    },\n    // Descriptions\n    descriptionContainer: {\n      \"& > div:not(:last-child)\": {\n        paddingBottom: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n        borderBottom: \"1px solid #3f5463\"\n      },\n      \"& td\": {\n        verticalAlign: \"top\",\n        padding: theme.spacing(0.5)\n      }\n    },\n    descriptionTitle: {\n      fontWeight: theme.typography.fontWeightBold,\n      padding: theme.spacing(0.5)\n    },\n    descriptionName: {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    descriptionPadding: {\n      padding: theme.spacing(0.5)\n    }\n  })\n);\n\nconst parameterDescriptions = [\n  {\n    name: \"Initial raise\",\n    text: \"Total funds raised in the hatch period of the ABC launch\"\n  },\n  {\n    name: \"Allocation to funding pool\",\n    text:\n      \"The percentage of the funds raised in the Hatch sale that go directly into the project funding pool to compensate future work done in the project\"\n  },\n  {\n    name: \"Hatch price\",\n    text:\n      \"The price paid per 'ABC token' by community members involved in hatching the project\"\n  },\n  {\n    name: \"Post-hatch price\",\n    text:\n      \"The price of the 'ABC token' when the curve enters the open phase and is live for public participation\"\n  },\n  {\n    name: \"Exit tribute\",\n    text:\n      \"The percentage of funds that are diverted to the project funding pool from community members who exit funds from the project by burning 'ABC tokens' in exchange for collateral\"\n  }\n];\n\nconst simulationParameterDescriptions = [\n  {\n    name: \"Price\",\n    text: \"Price of the token over time.\"\n  },\n  {\n    name: \"Floor price\",\n    text:\n      \"Lower bound of the price guaranteed by the vesting of hatch tokens. It decreases over time as more hatch tokens are allowed to be traded\"\n  },\n  {\n    name: \"Total exit tributes\",\n    text:\n      \"Cumulative sum of exit tributes collected from only exit /sell transactions\"\n  }\n];\n\nconst resultParameterDescriptions = [\n  {\n    name: \"Total reserve\",\n    text:\n      \"Total DAI in the smart contract reserve at the end of the simulated period\"\n  },\n  {\n    name: \"Funds generated from initial hatch\",\n    text:\n      \"Fraction of the funds (theta) raised during the hatch that go directly to the cause (analytic result)\"\n  },\n  {\n    name: \"Funds generated from exit tributes\",\n    text:\n      \"Cumulative sum of exit tributes collected from only exit /sell transactions\"\n  },\n  {\n    name: \"Average slippage\",\n    text:\n      \"Average of the slippage of each transaction occured during the simulation period\"\n  }\n];\n\nexport default function App() {\n  const [curveParams, setCurveParams] = useState({\n    theta: 0.35, // fraction allocated to reserve (.)\n    p0: 0.1, // Hatch sale price p0 (DAI / token)\n    p1: 0.3, // Return factor (.)\n    wFee: 0.05, // friction coefficient (.)\n    d0: 3e6 // Initial raise, d0 (DAI)\n  });\n\n  const { d0, theta, p0, p1, wFee } = curveParams;\n\n  /**\n   * Throttle the curve update to prevent the expensive chart\n   * to re-render too often\n   */\n  const setCurveParamsThrottle = useMemo(\n    () => throttle(setCurveParams, 250),\n    []\n  );\n\n  // Simulation results\n  const {\n    k, // Invariant power kappa (.)\n    R0, // Initial reserve (DAI)\n    S0, // initial supply of tokens (token)\n    V0 // invariant coef\n  } = getInitialParams({\n    d0,\n    theta,\n    p0,\n    p1\n  });\n\n  const [priceTimeseries, setPriceTimeseries] = useState([0]);\n  const [withdrawFeeTimeseries, setWithdrawFeeTimeseries] = useState([0]);\n  const [floorpriceTimeseries, setFloorpriceTimeseries] = useState([0]);\n  const [totalReserve, setTotalReserve] = useState(R0);\n  const [withdrawCount, setWithdrawCount] = useState(0);\n  const [avgSlippage, setAvgSlippage] = useState(0);\n  const [avgTxSize, setAvgTxSize] = useState(0);\n  // Simulation state variables\n  const [simulationActive, setSimulationActive] = useState(false);\n  const [simulationRunning, setSimulationRunning] = useState(false);\n\n  useEffect(() => {\n    setSimulationActive(false);\n  }, [curveParams]);\n\n  // #### TEST: Immediate simulation\n\n  async function startSimulation() {\n    // If there's a simulation already active, clear it\n    clearSimulation();\n    await pause(0);\n\n    // Start simulation by setting it to active\n    setSimulationActive(true);\n  }\n\n  function clearSimulation() {\n    // Stop simulation\n    setSimulationActive(false);\n    // Clear simulation variables\n    setWithdrawCount(0);\n    setPriceTimeseries([0]);\n    setWithdrawFeeTimeseries([0]);\n    setAvgSlippage(0);\n  }\n\n  useEffect(() => {\n    let canContinueSimulation = true;\n\n    async function simulateRandomDelta() {\n      const R_t: number[] = [R0];\n      const S_t: number[] = [S0];\n      const p_t: number[] = [getPriceR({ R: R0, V0, k })];\n      const wFee_t: number[] = [0];\n      const slippage_t: number[] = [];\n      const avgTxSize_t: number[] = [];\n\n      // hatchers tokens = S0[section added by Z]\n      const H_t: number[] = [S0]; // total hatcher tokens not vested\n      const floorprice_t: number[] = []; // initially the price is the floor as all tokens are hatcher tokens\n\n      // Random walk\n      const numSteps = 52;\n      const u_min = 0.97;\n      const u_max = 1.04;\n      const tx_spread = 10;\n      // vesting(should this be exposed in the app ?)\n      const cliff = 8; // weeks before vesting starts ~2 months\n      const halflife = 52; // 26 weeks, half life is ~6 months\n      // percentage of the hatch tokens which vest per week(since that is our timescale in the sim)\n\n      // numSteps = 52 take 8ms to run\n      setSimulationRunning(true);\n      for (let t = 0; t < numSteps; t++) {\n        const txsWeek = rv_U(5, 2 * t + 5);\n\n        const R = getLast(R_t);\n        const S = getLast(S_t);\n        const H = getLast(H_t);\n\n        // enforce the effects of the unvested tokens not being burnable\n        let u_lower;\n        if (H > S) {\n          u_lower = 1;\n        } else {\n          // compute the reserve if all that supply is burned\n          const R_ratio = getR({ S: S - H, V0, k }) / R;\n          u_lower = Math.max(1 - R_ratio, u_min);\n        }\n        const priceGrowth = rv_U(u_lower, u_max);\n\n        const deltaR = getDeltaR_priceGrowth({ R, k, priceGrowth });\n        const R_next = R + deltaR;\n\n        const txs = getTxDistribution({\n          sum: deltaR,\n          num: txsWeek,\n          spread: tx_spread\n        });\n        // Compute slippage\n        const slippage_txs = txs.map(txR =>\n          getSlippage({ R, deltaR: txR, V0, k })\n        );\n        const slippage = getMedian(slippage_txs);\n\n        const txsWithdraw = txs.filter(tx => tx < 0);\n        const wFees = -wFee * getSum(txsWithdraw);\n        //  txsWithdraw.reduce((t, c) => t + c, 0);\n\n        // Vest\n        const delta_H = vest_tokens({ week: t, H, halflife, cliff });\n        const H_next = H - delta_H;\n\n        // find floor price\n        const S_next = getS({ R, V0, k });\n        const floorprice_next = getMinPrice({\n          S: S_next,\n          H: S0 - H_next,\n          V0,\n          k\n        });\n\n        const _avgTxSize = getMedian(txsWithdraw);\n\n        R_t.push(R_next);\n        S_t.push(S_next);\n        H_t.push(H_next);\n        p_t.push(getPriceR({ R: R_next, V0, k }));\n        slippage_t.push(slippage);\n        avgTxSize_t.push(_avgTxSize);\n        wFee_t.push(getLast(wFee_t) + wFees);\n\n        floorprice_t.push(floorprice_next);\n        setWithdrawCount(c => c + txsWithdraw.length);\n\n        // Stop the simulation if it's no longer active\n        if (!simulationActive || !canContinueSimulation) break;\n      }\n\n      // floorprice_t is missing one data point\n      floorprice_t[floorprice_t.length] = floorprice_t[floorprice_t.length - 1];\n\n      setPriceTimeseries(p_t);\n      setWithdrawFeeTimeseries(wFee_t);\n      setFloorpriceTimeseries(floorprice_t);\n      setAvgSlippage(getAvg(slippage_t));\n      setAvgTxSize(getAvg(avgTxSize_t));\n      setTotalReserve(getLast(R_t));\n\n      setSimulationRunning(false);\n    }\n\n    if (simulationActive) simulateRandomDelta();\n    // Return an \"unsubscribe\" function that halts the run\n    return () => {\n      canContinueSimulation = false;\n    };\n  }, [simulationActive]);\n\n  const resultFields = [\n    {\n      label: `Total reserve`,\n      value: (+totalReserve.toPrecision(3)).toLocaleString() + \" DAI\"\n    },\n    {\n      label: `Funds generated from initial hatch`,\n      value: Math.round(d0 * theta).toLocaleString() + \" DAI\"\n    },\n    {\n      label: `Funds generated from exit tributes (${withdrawCount} txs)`,\n      value:\n        (+getLast(withdrawFeeTimeseries).toPrecision(3)).toLocaleString() +\n        \" DAI\"\n    },\n    {\n      label: `Average slippage (avg tx size ${Math.round(\n        avgTxSize\n      ).toLocaleString()} DAI)`,\n      value: +(100 * avgSlippage).toFixed(3) + \"%\"\n    }\n  ];\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <header className={classes.header}>\n        <Container fixed>\n          <Header />\n        </Container>\n      </header>\n\n      <Container fixed className={classes.mainContainer}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12} md={6} lg={4}>\n            <Paper className={classes.paper}>\n              <Box className={classes.boxHeader}>\n                <Typography variant=\"h6\">Curve Design</Typography>\n                <HelpText\n                  text={\n                    <div className={classes.descriptionContainer}>\n                      <div>\n                        <Typography className={classes.descriptionTitle}>\n                          Parameters description:\n                        </Typography>\n                      </div>\n                      <table>\n                        <tbody>\n                          {parameterDescriptions.map(({ name, text }) => (\n                            <tr key={name}>\n                              <td>\n                                <Typography className={classes.descriptionName}>\n                                  {name}\n                                </Typography>\n                              </td>\n                              <td>\n                                <Typography>{text}</Typography>\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  }\n                />\n              </Box>\n\n              <Box className={`${classes.box} ${classes.boxBorderBottom}`}>\n                <CurveDesignInputParams\n                  curveParams={curveParams}\n                  setCurveParams={setCurveParamsThrottle}\n                />\n              </Box>\n\n              <Box className={`${classes.boxHeader} ${classes.initialRaise}`}>\n                <Typography variant=\"h6\">Run parameters</Typography>\n              </Box>\n\n              <Box className={classes.box}>\n                <SimulationInputParams\n                  curveParams={curveParams}\n                  setCurveParams={setCurveParamsThrottle}\n                />\n              </Box>\n            </Paper>\n          </Grid>\n\n          <Grid item xs={12} sm={12} md={6} lg={8}>\n            <Paper className={classes.paper}>\n              <Box className={classes.boxHeader}>\n                <Typography variant=\"h6\">Preview</Typography>\n                <HelpText\n                  text={\n                    <div className={classes.descriptionPadding}>\n                      <Typography>\n                        Visualization of the token bonding curve analytic\n                        function on a specific range of reserve [0, 4 * R0].\n                        This result is deterministic given the current set of\n                        parameters and will never change regardes of the\n                        campaign performance, it only shows how the price will\n                        react to reserve changes.\n                      </Typography>\n                    </div>\n                  }\n                />\n              </Box>\n\n              <Box className={classes.boxChart}>\n                <SupplyVsDemandChart theta={theta} d0={d0} p0={p0} p1={p1} />\n              </Box>\n            </Paper>\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={12}>\n            <Paper>\n              <Box className={classes.boxHeader}>\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                >\n                  <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    onClick={startSimulation}\n                    disabled={simulationRunning}\n                  >\n                    Run simulation\n                  </Button>\n                </Grid>\n              </Box>\n            </Paper>\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3} className={classes.simulationContainer}>\n          {simulationActive ? (\n            <>\n              <Grid item xs={12} sm={12} md={6} lg={8}>\n                <Paper className={classes.paper}>\n                  <Box className={classes.boxHeader}>\n                    <Typography variant=\"h6\">Simulation</Typography>\n                    <HelpText\n                      text={\n                        <div className={classes.descriptionContainer}>\n                          <div className={classes.descriptionPadding}>\n                            <Typography>\n                              This chart shows a 52 week simulation of discrete\n                              transactions interacting with the token bonding\n                              curve. Each transaction adds or substract reserve\n                              to the system, modifying the price over time. The\n                              frequency, size and direction of each transaction\n                              is computed from a set of bounded random\n                              functions.\n                            </Typography>\n                          </div>\n\n                          <table>\n                            <tbody>\n                              {simulationParameterDescriptions.map(\n                                ({ name, text }) => (\n                                  <tr key={name}>\n                                    <td>\n                                      <Typography\n                                        className={classes.descriptionName}\n                                      >\n                                        {name}\n                                      </Typography>\n                                    </td>\n                                    <td>\n                                      <Typography>{text}</Typography>\n                                    </td>\n                                  </tr>\n                                )\n                              )}\n                            </tbody>\n                          </table>\n                        </div>\n                      }\n                    />\n                  </Box>\n\n                  <Box className={classes.boxChart}>\n                    <PriceSimulationChart\n                      priceTimeseries={priceTimeseries}\n                      withdrawFeeTimeseries={withdrawFeeTimeseries}\n                      floorpriceTimeseries={floorpriceTimeseries}\n                      p0={p0}\n                      p1={p1}\n                    />\n                  </Box>\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} sm={12} md={6} lg={4}>\n                <Paper className={classes.paper}>\n                  <Box className={classes.boxHeader}>\n                    <Typography variant=\"h6\">Results</Typography>\n                    <HelpText\n                      text={\n                        <div className={classes.descriptionContainer}>\n                          <div>\n                            <Typography className={classes.descriptionTitle}>\n                              Result parameters description:\n                            </Typography>\n                          </div>\n                          <table>\n                            <tbody>\n                              {resultParameterDescriptions.map(\n                                ({ name, text }) => (\n                                  <tr key={name}>\n                                    <td>\n                                      <Typography\n                                        className={classes.descriptionName}\n                                      >\n                                        {name}\n                                      </Typography>\n                                    </td>\n                                    <td>\n                                      <Typography>{text}</Typography>\n                                    </td>\n                                  </tr>\n                                )\n                              )}\n                            </tbody>\n                          </table>\n                        </div>\n                      }\n                    />\n                  </Box>\n\n                  <Box className={classes.box}>\n                    <ResultParams resultFields={resultFields} />\n                  </Box>\n                </Paper>\n              </Grid>\n            </>\n          ) : (\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Box className={classes.boxPlaceholder}>\n                  <Typography variant=\"h6\">\n                    Run a simulation to see results\n                  </Typography>\n                </Box>\n              </Paper>\n            </Grid>\n          )}\n        </Grid>\n      </Container>\n    </>\n  );\n}\n","import red from \"@material-ui/core/colors/red\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: {\n      main: \"#2ecd79\"\n    },\n    secondary: {\n      main: \"#116be0\",\n      light: \"#0f8bff\",\n      dark: \"#116be0\"\n    },\n    error: {\n      main: red.A400\n    },\n    background: {\n      default: \"#fff\",\n      paper: \"#293640\"\n    },\n    text: {\n      primary: \"#fff\",\n      secondary: \"#9aa3ad\"\n    }\n  },\n  typography: {\n    h6: {\n      fontWeight: 400\n    }\n  }\n});\n\nconsole.log(theme);\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}