{"version":3,"sources":["Header.tsx","InputParams.tsx","utils.ts","SupplyVsDemandChart.tsx","ResultParams.tsx","PriceSimulationChart.tsx","App.tsx","theme.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","margin","spacing","lightBulb","verticalAlign","marginRight","link","color","Header","classes","react_default","a","createElement","Fragment","Typography","variant","component","gutterBottom","className","Link","href","PrettoSlider","withStyles","height","thumb","width","backgroundColor","border","marginTop","marginLeft","&:focus,&:hover,&$active","boxShadow","active","valueLabel","left","track","borderRadius","rail","markLabel","top","Slider","leftContainer","centerContainer","listBoxContainer","& > div:not(:last-child)","paddingBottom","marginBottom","borderBottom","listBox","& > div","display","alignItems","& p","paddingRight","InputParams","_ref","inputFields","map","_ref2","label","value","setter","min","max","step","Grid","key","container","item","xs","id","valueLabelDisplay","aria-label","defaultValue","onChange","_","newValue","Number","valueLabelFormat","replace","linspace","_ref$from","from","to","steps","arr","x","push","getLast","length","getAvg","reduce","t","c","Math","abs","pause","ms","Promise","r","setTimeout","grayColor","strongColor","softColor","ReferenceLabel","props","textAnchor","viewBox","y","fill","SupplyVsDemandChart","returnF","theta","d0","p0","k","R0","S0","f","R","pow","biggest","_ref3","Object","slicedToArray","scaling","unit","data","_data$push","defineProperty","formatter","n","toPrecision","toLocaleString","es6","debounce","right","bottom","strokeDasharray","interval","ticks","dataKey","tickFormatter","tick","stroke","domain","isAnimationActive","type","style","ResultParams","resultFields","strongOpositeColor","PriceSimulationChart","priceTimeseries","withdrawFeeTimeseries","yAxisId","apply","toConsumableArray","orientation","mainContainer","paddingTop","paper","minHeight","box","padding","boxHeader","boxChart","maxHeight","paddingLeft","header","button","background","createMuiTheme","palette","primary","main","secondary","error","red","A400","default","ReactDOM","render","ThemeProvider","CssBaseline","_useState","useState","_useState2","setD0","_useState3","_useState4","setTheta","_useState5","_useState6","setP0","_useState7","_useState8","setReturnF","_useState9","_useState10","wFee","setWFee","V0","_useState11","_useState12","setPriceTimeseries","_useState13","_useState14","setWithdrawFeeTimeseries","_useState15","_useState16","totalReserve","setTotalReserve","_useState17","_useState18","withdrawCount","setWithdrawCount","_useState19","_useState20","avgSlippage","setAvgSlippage","_useState21","avgTxSize","_useState23","_useState24","simulationActive","setSimulationActive","_useState25","_useState26","simulationRunning","setSimulationRunning","_startSimulation","asyncToGenerator","regenerator_default","mark","_callee2","wrap","_context2","prev","next","clearSimulation","stop","this","arguments","useEffect","canContinueSimulation","_simulateRandomDelta","_callee","R_t","S_t","p_t","wFee_t","slippage_t","numSteps","updateEveryNth","deltaR_t","i","rand","sin","ascending","deltaR","deltaR_avg","deltaR_t_normalized","_i","_deltaR","S","p","R_next","deltaS","S_next","p_next","spotPrice","slippage","_context","random","PI","abrupt","simulateRandomDelta","concat","toFixed","round","Container","fixed","md","Paper","Box","direction","justify","Fade","in","Button","onClick","disabled","src_PriceSimulationChart","src_SupplyVsDemandChart","document","querySelector"],"mappings":"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","file":"static/js/main.58438057.chunk.js","sourcesContent":["import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst strongColor = \"#4ab47c\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: theme.spacing(3, 0, 0)\n    },\n    lightBulb: {\n      verticalAlign: \"middle\",\n      marginRight: theme.spacing(1)\n    },\n    link: {\n      color: strongColor\n    }\n  })\n);\n\nexport default function Header() {\n  const classes = useStyles();\n  return (\n    <>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        Augmented Token Bonding Curve Design\n      </Typography>\n      <Typography className={classes.root}>\n        Experiment and test augmented token bonding curves, part of the{\" \"}\n        <Link className={classes.link} href=\"https://commonsstack.org/\">\n          Commons Stack\n        </Link>\n      </Typography>\n    </>\n  );\n}\n","import React from \"react\";\nimport {\n  createStyles,\n  makeStyles,\n  withStyles,\n  Theme\n} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst grayColor = \"#90a4ae\";\nconst blackColor = \"#141e27\";\n// const commonsGradient = \"#67de69 #1c709c\";\nconst strongColor = \"#4ab47c\";\n\nconst PrettoSlider = withStyles({\n  root: {\n    color: strongColor,\n    height: 8\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: \"#fff\",\n    border: \"2px solid currentColor\",\n    marginTop: -8,\n    marginLeft: -12,\n    \"&:focus,&:hover,&$active\": {\n      boxShadow: \"inherit\"\n    }\n  },\n  active: {},\n  valueLabel: {\n    left: \"calc(-50% + 4px)\"\n  },\n  track: {\n    height: 8,\n    borderRadius: 4\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4\n  },\n  markLabel: {\n    color: grayColor,\n    top: 30\n  }\n})(Slider);\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: theme.spacing(6, 0, 3)\n    },\n    lightBulb: {\n      verticalAlign: \"middle\",\n      marginRight: theme.spacing(1)\n    },\n    leftContainer: {\n      color: grayColor\n    },\n    centerContainer: {\n      color: blackColor\n    },\n    listBoxContainer: {\n      \"& > div:not(:last-child)\": {\n        paddingBottom: \"12px\",\n        marginBottom: \"12px\",\n        borderBottom: \"1px solid #e0e0e0\"\n      }\n    },\n    listBox: {\n      height: \"48px\",\n      \"& > div\": {\n        display: \"flex\",\n        alignItems: \"center\",\n        \"& p\": {\n          marginBottom: 0\n        }\n      },\n      \"& > div:not(:last-child)\": {\n        paddingRight: \"12px\"\n      }\n    }\n  })\n);\n\nexport default function InputParams({\n  inputFields\n}: {\n  inputFields: {\n    label: string;\n    value: number;\n    setter(newValue: any): void;\n    min: number;\n    max: number;\n    step: number;\n    display(value: number): string;\n  }[];\n}) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.listBoxContainer}>\n      {inputFields.map(({ label, value, setter, min, max, step, display }) => (\n        <Grid key={label} container spacing={0} className={classes.listBox}>\n          <Grid item xs={6} className={classes.leftContainer}>\n            <Typography id={label} gutterBottom>\n              {label}\n            </Typography>\n          </Grid>\n\n          <Grid item xs={2} className={classes.centerContainer}>\n            <Typography gutterBottom>{display(value)}</Typography>\n          </Grid>\n\n          <Grid item xs={4}>\n            <PrettoSlider\n              valueLabelDisplay=\"auto\"\n              aria-label={label}\n              defaultValue={value}\n              onChange={(_, newValue) => setter(Number(newValue))}\n              min={min}\n              max={max}\n              step={step}\n              valueLabelFormat={value => display(value).replace(\"$\", \"\")}\n              // marks={[\n              //   { value: 0, label: \"0%\" },\n              //   { value: 50, label: \"50%\" },\n              //   { value: 100, label: \"100%\" }\n              // ]}\n            />\n          </Grid>\n        </Grid>\n      ))}\n    </div>\n  );\n}\n","/**\n * Returns an equally spaced array of numbers `from`, `to` with `steps`.\n */\nexport function linspace({\n  from = 0,\n  to,\n  steps\n}: {\n  from?: number;\n  to: number;\n  steps: number;\n}) {\n  const arr = [];\n  for (let x = from; x <= to; x += (to - from) / steps) arr.push(x);\n  return arr;\n}\n\n/**\n * Returns the last element of an array\n */\nexport function getLast(a: number[]) {\n  return a[a.length - 1];\n}\n\n/**\n * Returns the average of an array\n */\nexport function getAvg(a: number[]) {\n  return a.reduce((t, c) => t + Math.abs(c), 0) / a.length;\n}\n\n/**\n * Waits `ms` miliseconds and resolves\n */\nexport function pause(ms: number) {\n  return new Promise(r => setTimeout(r, ms));\n}\n","import React from \"react\";\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Legend,\n  ReferenceLine,\n  ResponsiveContainer,\n  Tooltip\n} from \"recharts\";\nimport { linspace } from \"./utils\";\n\nconst grayColor = \"#90a4ae\";\n// const blackColor = \"#141e27\";\nconst strongColor = \"#4ab47c\";\nconst softColor = \"#bbe3cd\";\n\nfunction SupplyVsDemandChart({\n  returnF,\n  theta,\n  d0,\n  p0\n}: {\n  returnF: number;\n  theta: number;\n  d0: number;\n  p0: number;\n}) {\n  // d0      - Initial raise, d0 (DAI)\n  // theta   - fraction allocated to reserve (.)\n  // p0      - Hatch sale Price p0 (DAI / token)\n  // returnF - Return factor (.)\n  // wFee    - friction coefficient (.)\n\n  // Hatch parameters\n  const k = returnF / (1 - theta); // Invariant power kappa (.)\n  const R0 = (1 - theta / 100) * d0; // Initial reserve (DAI)\n  const S0 = d0 / p0; // initial supply of tokens (token)\n  const S_of_R = (R: number) => S0 * (R / R0) ** (1 / k);\n\n  // Function setup\n  const f = S_of_R;\n  const from = 0;\n  const to = 4 * R0;\n  const steps = 100;\n  const step = (to - from) / steps;\n\n  /**\n   * Prettify the result converting 1000000 to 1M\n   */\n  const biggest = Math.max(to, f(to));\n  const [scaling, unit] =\n    // Billion\n    biggest > 0.5e9\n      ? [1e9, \"B\"]\n      : // Million\n      biggest > 0.5e6\n      ? [1e6, \"M\"]\n      : // 1 thousand\n      biggest > 0.5e3\n      ? [1e3, \"K\"]\n      : // No scale\n        [1, \"\"];\n\n  const keyHorizontal = \"x\";\n  const keyVertical = \"Supply (tokens) / Reserve (DAI)\";\n\n  const data = [];\n  for (let x = from; x <= to; x += step) {\n    data.push({\n      [keyHorizontal]: x,\n      [keyVertical]: f(x)\n    });\n  }\n\n  const formatter = (n: number) =>\n    (+(n / scaling).toPrecision(2)).toLocaleString();\n\n  function renderColorfulLegendText(value: string) {\n    return <span style={{ color: grayColor }}>{value}</span>;\n  }\n\n  return (\n    <ResponsiveContainer debounce={1}>\n      <AreaChart\n        width={0}\n        height={400}\n        data={data}\n        margin={{\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          interval={\"preserveStartEnd\"}\n          ticks={linspace({ to: to, steps: 4 })}\n          dataKey={keyHorizontal}\n          tickFormatter={formatter}\n          unit={unit}\n          tick={{ fill: grayColor }}\n          stroke={grayColor}\n        />\n        <YAxis\n          interval={\"preserveStartEnd\"}\n          ticks={linspace({ to: f(to), steps: 3 })}\n          tickFormatter={formatter}\n          unit={unit}\n          tick={{ fill: grayColor }}\n          domain={[0, f(to)]}\n          stroke={grayColor}\n        />\n        <Tooltip formatter={value => formatter(Number(value))} />\n        <Area\n          isAnimationActive={false}\n          type=\"monotone\"\n          dataKey={keyVertical}\n          stroke={strongColor}\n          fill={softColor}\n        />\n        <ReferenceLine\n          x={R0}\n          stroke=\"#90a4ae\"\n          strokeDasharray=\"6 3\"\n          label={<ReferenceLabel />}\n        />\n        <Legend formatter={renderColorfulLegendText} />\n      </AreaChart>\n    </ResponsiveContainer>\n  );\n}\n\nfunction ReferenceLabel(props: any) {\n  const { textAnchor, viewBox } = props;\n  return (\n    <text x={viewBox.x + 10} y={30} fill={grayColor} textAnchor={textAnchor}>\n      Initial value\n    </text>\n  );\n}\n\nexport default SupplyVsDemandChart;\n","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst grayColor = \"#90a4ae\";\nconst blackColor = \"#141e27\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: theme.spacing(6, 0, 3)\n    },\n    lightBulb: {\n      verticalAlign: \"middle\",\n      marginRight: theme.spacing(1)\n    },\n    leftContainer: {\n      color: grayColor\n    },\n    centerContainer: {\n      color: blackColor\n    },\n    listBoxContainer: {\n      \"& > div:not(:last-child)\": {\n        marginBottom: \"12px\",\n        borderBottom: \"1px solid #e0e0e0\"\n      }\n    },\n    listBox: {\n      height: \"48px\",\n      paddingBottom: \"12px\",\n      \"& > div\": {\n        display: \"flex\",\n        alignItems: \"center\",\n        \"& p\": {\n          marginBottom: 0\n        }\n      },\n      \"& > div:not(:last-child)\": {\n        paddingRight: \"12px\"\n      }\n    }\n  })\n);\n\nexport default function ResultParams({\n  resultFields\n}: {\n  resultFields: {\n    label: string;\n    value: number | string;\n  }[];\n}) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.listBoxContainer}>\n      {resultFields.map(({ label, value }) => (\n        <Grid key={label} container spacing={0} className={classes.listBox}>\n          <Grid item xs={8} className={classes.leftContainer}>\n            <Typography id={label} gutterBottom>\n              {label}\n            </Typography>\n          </Grid>\n\n          <Grid item xs={4} className={classes.centerContainer}>\n            <Typography gutterBottom>{value}</Typography>\n          </Grid>\n        </Grid>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Legend,\n  ResponsiveContainer,\n  Tooltip\n} from \"recharts\";\n\nconst grayColor = \"#90a4ae\";\nconst strongColor = \"#4ab47c\";\nconst strongOpositeColor = \"#b44a9b\";\n\nfunction PriceSimulationChart({\n  priceTimeseries,\n  withdrawFeeTimeseries,\n  p0\n}: {\n  priceTimeseries: number[];\n  withdrawFeeTimeseries: number[];\n  p0: number;\n}) {\n  // d0      - Initial raise, d0 (DAI)\n  // theta   - fraction allocated to reserve (.)\n  // p0      - Hatch sale Price p0 (DAI / token)\n  // returnF - Return factor (.)\n  // wFee    - friction coefficient (.)\n\n  const keyHorizontal = \"x\";\n  const keyVerticalLeft = \"Price (DAI / token)\";\n  const keyVerticalRight = \"Collected withdraw fee (DAI)\";\n\n  const data = [];\n  for (let t = 0; t < priceTimeseries.length; t++) {\n    data.push({\n      [keyHorizontal]: t,\n      [keyVerticalLeft]: priceTimeseries[t] || 0,\n      [keyVerticalRight]: withdrawFeeTimeseries[t] || 0\n    });\n  }\n\n  function renderColorfulLegendText(value: string) {\n    return <span style={{ color: grayColor }}>{value}</span>;\n  }\n\n  const formatter = (n: number) => (+n.toPrecision(3)).toLocaleString();\n\n  return (\n    <ResponsiveContainer debounce={1}>\n      <AreaChart\n        width={0}\n        height={400}\n        data={data}\n        margin={{\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          dataKey={keyHorizontal}\n          tick={{ fill: grayColor }}\n          stroke={grayColor}\n        />\n        <YAxis\n          yAxisId=\"left\"\n          domain={[Math.min(...priceTimeseries), Math.max(...priceTimeseries)]}\n          tickFormatter={formatter}\n          tick={{ fill: grayColor }}\n          stroke={grayColor}\n        />\n\n        {/* Capital collected from withdraw fees - AXIS */}\n        <YAxis\n          yAxisId=\"right\"\n          // domain={[\n          //   Math.floor(Math.min(...withdrawFeeTimeseries)),\n          //   Math.ceil(Math.max(...withdrawFeeTimeseries))\n          // ]}\n          orientation=\"right\"\n          tick={{ fill: grayColor }}\n          stroke={grayColor}\n        />\n\n        <Tooltip formatter={value => Number(value)} />\n        <Area\n          isAnimationActive={false}\n          yAxisId=\"left\"\n          type=\"monotone\"\n          dataKey={keyVerticalLeft}\n          stroke={strongColor}\n          fill={strongColor}\n        />\n\n        {/* Capital collected from withdraw fees - AREA */}\n        <Area\n          isAnimationActive={false}\n          yAxisId=\"right\"\n          type=\"monotone\"\n          dataKey={keyVerticalRight}\n          stroke={strongOpositeColor}\n          fill={strongOpositeColor}\n        />\n\n        {/* <ReferenceLine\n          x={R0}\n          stroke=\"#90a4ae\"\n          strokeDasharray=\"6 3\"\n          label={<ReferenceLabel />}\n        /> */}\n        <Legend formatter={renderColorfulLegendText} />\n      </AreaChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport default PriceSimulationChart;\n","import React, { useState, useEffect } from \"react\";\n// Material UI\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Fade from \"@material-ui/core/Fade\";\n// Components\nimport Header from \"./Header\";\nimport InputParams from \"./InputParams\";\nimport SupplyVsDemandChart from \"./SupplyVsDemandChart\";\nimport ResultParams from \"./ResultParams\";\nimport PriceSimulationChart from \"./PriceSimulationChart\";\n// Utils\nimport { getLast, getAvg, pause } from \"./utils\";\n// General styles\nimport \"./app.css\";\n\nconst headerOffset = 10;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    mainContainer: {\n      \"& > div:not(:last-child)\": {\n        paddingBottom: theme.spacing(6)\n      },\n      \"& > div\": {\n        \"& > div\": {\n          paddingTop: \"0 !important\"\n        }\n      }\n    },\n    paper: {\n      width: \"100%\",\n      height: \"100%\",\n      minHeight: 310\n    },\n    box: {\n      padding: theme.spacing(3, 3),\n      minHeight: 310\n    },\n    boxHeader: {\n      padding: theme.spacing(3, 3),\n      height: theme.spacing(headerOffset),\n      display: \"flex\",\n      alignItems: \"center\",\n      borderBottom: \"1px solid #e0e0e0\"\n    },\n    boxChart: {\n      width: \"100%\",\n      height: \"100%\",\n      minHeight: 310,\n      maxHeight: 350,\n      padding: theme.spacing(3, 3),\n      // Correct the chart excessive margins\n      paddingRight: \"5px\",\n      paddingLeft: \"5px\"\n    },\n    header: {\n      backgroundColor: \"#070a0e\",\n      color: \"#f5f7f8\",\n      padding: theme.spacing(9, 0, 6 + headerOffset),\n      marginBottom: -theme.spacing(headerOffset)\n    },\n    button: {\n      background: \"linear-gradient(290deg, #2ad179, #4ab47c)\",\n      color: \"white\"\n    }\n  })\n);\n\nexport default function App() {\n  const [d0, setD0] = useState(1e6); // Initial raise, d0 (DAI)\n  const [theta, setTheta] = useState(0.35); // fraction allocated to reserve (.)\n  const [p0, setP0] = useState(0.1); // Hatch sale Price p0 (DAI / token)\n  const [returnF, setReturnF] = useState(3); // Return factor (.)\n  const [wFee, setWFee] = useState(0.05); // friction coefficient (.)\n\n  // Simulation results\n  const k = returnF / (1 - theta); // Invariant power kappa (.)\n  const R0 = (1 - theta / 100) * d0; // Initial reserve (DAI)\n  const S0 = d0 / p0; // initial supply of tokens (token)\n  const V0 = S0 ** k / R0; // invariant coef\n\n  const [priceTimeseries, setPriceTimeseries] = useState([0]);\n  const [withdrawFeeTimeseries, setWithdrawFeeTimeseries] = useState([0]);\n  const [totalReserve, setTotalReserve] = useState(R0);\n  const [withdrawCount, setWithdrawCount] = useState(0);\n  const [avgSlippage, setAvgSlippage] = useState(0);\n  const [avgTxSize] = useState(10000);\n  // Simulation state variables\n  const [simulationActive, setSimulationActive] = useState(false);\n  const [simulationRunning, setSimulationRunning] = useState(false);\n\n  // #### TEST: Immediate simulation\n\n  async function startSimulation() {\n    // If there's a simulation already active, clear it\n    clearSimulation();\n    await pause(0);\n\n    // Start simulation by setting it to active\n    setSimulationActive(true);\n  }\n\n  function clearSimulation() {\n    // Stop simulation\n    setSimulationActive(false);\n    // Clear simulation variables\n    setWithdrawCount(0);\n    setPriceTimeseries([0]);\n    setWithdrawFeeTimeseries([0]);\n    setAvgSlippage(0);\n  }\n\n  useEffect(() => {\n    let canContinueSimulation = true;\n    async function simulateRandomDelta() {\n      const R_t: number[] = [R0];\n      const S_t: number[] = [S0];\n      const p_t: number[] = [R0 / S0];\n      const wFee_t: number[] = [0];\n      const slippage_t: number[] = [];\n\n      // Random walk\n      const numSteps = 100;\n      const updateEveryNth = 1;\n\n      // Compute the random deltas\n      const deltaR_t: number[] = [];\n      for (let i = 0; i < numSteps; i++) {\n        const rand = 1 - 2 * Math.random();\n        const sin = Math.sin((1 / 20) * (i / numSteps));\n        const ascending = Math.sin((Math.PI / 1) * (i / numSteps));\n        const deltaR = 1e5 * rand + 1e5 * sin + 2e4 * ascending;\n        deltaR_t.push(deltaR);\n      }\n\n      // Normalize random deltas with the average transaction size\n      const deltaR_avg = getAvg(deltaR_t);\n      const deltaR_t_normalized = deltaR_t.map(\n        (deltaR: number) => (avgTxSize * deltaR) / deltaR_avg\n      );\n\n      setSimulationRunning(true);\n      for (let i = 0; i < numSteps; i++) {\n        const deltaR = deltaR_t_normalized[i];\n\n        // Protect against too strong negative deltas\n        const R = getLast(R_t);\n        const S = getLast(S_t);\n        const p = getLast(p_t);\n\n        const R_next = R + deltaR;\n        const deltaS = (V0 * (R + deltaR)) ** (1 / k) - S;\n        const S_next = S + deltaS;\n\n        R_t.push(R_next);\n        S_t.push(S_next);\n        p_t.push(R_next / S_next);\n        // Consider withdraw fees on sales only\n        if (deltaR < 0) {\n          wFee_t.push(getLast(wFee_t) - deltaR * wFee);\n          setWithdrawCount(c => c + 1);\n        } else {\n          wFee_t.push(getLast(wFee_t));\n        }\n\n        const p_next = getLast(p_t);\n        // const realizedPrice = deltaR / deltaS;\n        const spotPrice = p;\n        const slippage = Math.abs(p_next - spotPrice) / spotPrice / 2;\n        slippage_t.push(slippage);\n\n        // Stop the simulation if it's no longer active\n        if (!simulationActive || !canContinueSimulation) break;\n\n        if (i % updateEveryNth === 0) {\n          setPriceTimeseries(p_t);\n          setWithdrawFeeTimeseries(wFee_t);\n          setAvgSlippage(getAvg(slippage_t));\n          setTotalReserve(R_next);\n\n          // Make this run non-UI blocking\n          await pause(5);\n        }\n      }\n      setSimulationRunning(false);\n    }\n\n    if (simulationActive) simulateRandomDelta();\n    // Return an \"unsubscribe\" function that halts the run\n    return () => {\n      canContinueSimulation = false;\n    };\n  }, [simulationActive]);\n\n  const inputFields: {\n    label: string;\n    value: number;\n    setter(newValue: any): void;\n    min: number;\n    max: number;\n    step: number;\n    display(value: number): string;\n  }[] = [\n    {\n      label: \"Initial raise\",\n      value: d0,\n      setter: setD0,\n      min: 0.1e6,\n      max: 10e6,\n      step: 0.1e6,\n      display: (n: number) => `$${+(n * 1e-6).toFixed(1)}M`\n    },\n    {\n      label: \"Allocation to the project\",\n      value: theta,\n      setter: setTheta,\n      min: 0,\n      max: 0.9,\n      step: 0.01,\n      display: (n: number) => `${Math.round(100 * n)}%`\n    },\n    {\n      label: \"Initial token price\",\n      value: p0,\n      setter: setP0,\n      min: 0.01,\n      max: 1,\n      step: 0.01,\n      display: (n: number) => `$${n}`\n    },\n    {\n      label: \"Return factor\",\n      value: returnF,\n      setter: setReturnF,\n      min: 1,\n      max: 10,\n      step: 0.1,\n      display: (n: number) => `${n}x`\n    },\n    {\n      label: \"Withdrawl fee\",\n      value: wFee,\n      setter: setWFee,\n      min: 0,\n      max: 0.1,\n      step: 0.001,\n      display: (n: number) => `${+(100 * n).toFixed(1)}%`\n    }\n  ];\n\n  const resultFields = [\n    {\n      label: `Average slippage (avg tx size ${avgTxSize} DAI)`,\n      value: +(100 * avgSlippage).toFixed(3) + \"%\"\n    },\n    {\n      label: `Capital collected from withdraw fees (${withdrawCount} txs)`,\n      value:\n        (+getLast(withdrawFeeTimeseries).toPrecision(3)).toLocaleString() +\n        \" DAI\"\n    },\n    {\n      label: `Total reserve`,\n      value: (+totalReserve.toPrecision(3)).toLocaleString() + \" DAI\"\n    }\n  ];\n\n  const classes = useStyles();\n  return (\n    <>\n      <header className={classes.header}>\n        <Container fixed>\n          <Header />\n        </Container>\n      </header>\n\n      <Container fixed className={classes.mainContainer}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={6}>\n            <Paper className={classes.paper}>\n              <Box className={classes.boxHeader}>\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"space-between\"\n                  alignItems=\"center\"\n                >\n                  <Typography variant=\"h6\">\n                    {simulationActive ? \"Results\" : \"Curve Design\"}\n                  </Typography>\n                  <Fade in={simulationActive}>\n                    <Button variant=\"contained\" onClick={clearSimulation}>\n                      Back to design\n                    </Button>\n                  </Fade>\n                </Grid>\n              </Box>\n\n              <Box className={classes.box}>\n                {simulationActive ? (\n                  <ResultParams resultFields={resultFields} />\n                ) : (\n                  <InputParams inputFields={inputFields} />\n                )}\n              </Box>\n            </Paper>\n          </Grid>\n\n          <Grid item xs={12} md={6}>\n            <Paper className={classes.paper}>\n              <Box className={classes.boxHeader}>\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"space-between\"\n                  alignItems=\"center\"\n                >\n                  <Typography variant=\"h6\">Preview</Typography>\n                  <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    onClick={startSimulation}\n                    disabled={simulationRunning}\n                  >\n                    Run simulation\n                  </Button>\n                </Grid>\n              </Box>\n\n              <Box className={classes.boxChart}>\n                {simulationActive ? (\n                  <PriceSimulationChart\n                    priceTimeseries={priceTimeseries}\n                    withdrawFeeTimeseries={withdrawFeeTimeseries}\n                    p0={p0}\n                  />\n                ) : (\n                  <SupplyVsDemandChart\n                    returnF={returnF}\n                    theta={theta}\n                    d0={d0}\n                    p0={p0}\n                  />\n                )}\n              </Box>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n}\n","import red from '@material-ui/core/colors/red';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}