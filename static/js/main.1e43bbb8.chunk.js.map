{"version":3,"sources":["Header.tsx","InputParams.tsx","utils.ts","SupplyVsDemandChart.tsx","ResultParams.tsx","PriceSimulationChart.tsx","App.tsx","theme.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","margin","spacing","lightBulb","verticalAlign","marginRight","link","color","palette","primary","main","Header","classes","react_default","a","createElement","Fragment","Typography","variant","component","gutterBottom","className","Link","href","PrettoSlider","withStyles","height","thumb","width","backgroundColor","border","marginTop","marginLeft","&:focus,&:hover,&$active","boxShadow","active","valueLabel","left","track","borderRadius","rail","markLabel","top","Slider","leftContainer","text","secondary","centerContainer","listBoxContainer","& > div:not(:last-child)","paddingBottom","marginBottom","borderBottom","listBox","& > div","display","alignItems","& p","paddingRight","slider","NumberFormatCustom","props","inputRef","onChange","prefix","suffix","other","Object","objectWithoutProperties","number_format_default","assign","getInputRef","onValueChange","values","target","value","thousandSeparator","InputParams","_ref","curveParams","setCurveParams","_useState","useState","_useState2","slicedToArray","d0","setD0","_useState3","_useState4","theta","setTheta","_useState5","_useState6","p0","setP0","_useState7","_useState8","returnF","setReturnF","_useState9","_useState10","wFee","setWFee","setParentCurveParams","inputFields","label","setter","min","max","step","unit","format","n","concat","toFixed","toText","String","toNum","Math","floor","parseFloat","round","map","_ref2","sanitizeInput","num","arguments","length","undefined","isNaN","Grid","key","container","item","xs","id","TextField","e","InputProps","inputComponent","disableUnderline","inputProps","valueLabelDisplay","aria-label","defaultValue","_","newValue","Number","onChangeCommitted","valueLabelFormat","replace","linspace","_ref$from","from","to","steps","arr","x","push","getLast","getAvg","reduce","t","c","abs","pause","ms","Promise","r","setTimeout","SupplyVsDemandChart","k","R0","S0","f","R","pow","biggest","_ref3","scaling","data","_data$push","defineProperty","useTheme","formatter","toPrecision","toLocaleString","es6","debounce","right","bottom","strokeDasharray","interval","ticks","dataKey","tickFormatter","tick","fill","stroke","domain","isAnimationActive","type","textAnchor","viewBox","y","style","ResultParams","resultFields","PriceSimulationChart","priceTimeseries","withdrawFeeTimeseries","toConsumableArray","yAxisId","apply","orientation","mainContainer","paddingTop","paper","minHeight","box","padding","boxHeader","boxChart","maxHeight","paddingLeft","header","button","background","createMuiTheme","error","red","A400","default","typography","h6","fontWeight","console","log","ReactDOM","render","ThemeProvider","CssBaseline","setCurveParamsThrottle","useMemo","throttle","V0","setPriceTimeseries","setWithdrawFeeTimeseries","totalReserve","setTotalReserve","withdrawCount","setWithdrawCount","_useState11","_useState12","avgSlippage","setAvgSlippage","_useState13","avgTxSize","_useState15","_useState16","simulationActive","setSimulationActive","_useState17","_useState18","simulationRunning","setSimulationRunning","_startSimulation","asyncToGenerator","regenerator_default","mark","_callee2","wrap","_context2","prev","next","stop","this","useEffect","canContinueSimulation","_simulateRandomDelta","_callee","R_t","S_t","p_t","wFee_t","slippage_t","numSteps","updateEveryNth","deltaR_t","i","rand","sin","ascending","deltaR","deltaR_avg","deltaR_t_normalized","_i","_deltaR","S","p","R_next","deltaS","S_next","p_next","spotPrice","slippage","_context","random","PI","abrupt","simulateRandomDelta","Container","fixed","sm","md","lg","Paper","Box","src_SupplyVsDemandChart","direction","justify","Button","onClick","disabled","src_PriceSimulationChart","document","querySelector"],"mappings":"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","file":"static/js/main.1e43bbb8.chunk.js","sourcesContent":["import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: theme.spacing(3, 0, 0)\n    },\n    lightBulb: {\n      verticalAlign: \"middle\",\n      marginRight: theme.spacing(1)\n    },\n    link: {\n      color: theme.palette.primary.main\n    }\n  })\n);\n\nexport default function Header() {\n  const classes = useStyles();\n  return (\n    <>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        Augmented Token Bonding Curve Design\n      </Typography>\n      <Typography className={classes.root}>\n        Experiment and test augmented token bonding curves, part of the{\" \"}\n        <Link className={classes.link} href=\"https://commonsstack.org/\">\n          Commons Stack\n        </Link>\n      </Typography>\n    </>\n  );\n}\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport {\n  createStyles,\n  makeStyles,\n  withStyles,\n  Theme\n} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport NumberFormat from \"react-number-format\";\nimport { throttle } from \"lodash\";\n\nconst PrettoSlider = withStyles({\n  root: {\n    height: 8\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: \"#fff\",\n    border: \"2px solid currentColor\",\n    marginTop: -8,\n    marginLeft: -12,\n    \"&:focus,&:hover,&$active\": {\n      boxShadow: \"inherit\"\n    }\n  },\n  active: {},\n  valueLabel: {\n    left: \"calc(-50% + 4px)\"\n  },\n  track: {\n    height: 8,\n    borderRadius: 4\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4\n  },\n  markLabel: {\n    top: 30\n  }\n})(Slider);\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: theme.spacing(6, 0, 3)\n    },\n    lightBulb: {\n      verticalAlign: \"middle\",\n      marginRight: theme.spacing(1)\n    },\n    leftContainer: {\n      color: theme.palette.text.secondary\n    },\n    centerContainer: {\n      // color: blackColor\n    },\n    listBoxContainer: {\n      \"& > div:not(:last-child)\": {\n        paddingBottom: \"12px\",\n        marginBottom: \"12px\",\n        borderBottom: \"1px solid #313d47\"\n      }\n    },\n    listBox: {\n      \"& > div\": {\n        display: \"flex\",\n        alignItems: \"center\",\n        \"& p\": {\n          marginBottom: 0\n        }\n      },\n      \"& > div:not(:last-child)\": {\n        paddingRight: \"12px\"\n      }\n    },\n    slider: {\n      color: theme.palette.primary.main\n    }\n  })\n);\n\nfunction NumberFormatCustom(props: any) {\n  const { inputRef, onChange, prefix, suffix, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({ target: { value: values.value } });\n      }}\n      thousandSeparator\n      prefix={prefix}\n      suffix={suffix}\n    />\n  );\n}\n\nexport default function InputParams({\n  curveParams,\n  setCurveParams\n}: {\n  curveParams?: {\n    d0: number;\n    theta: number;\n    p0: number;\n    returnF: number;\n    wFee: number;\n  };\n  setCurveParams(newCurveParams: any): void;\n}) {\n  const [d0, setD0] = useState(1e6); // Initial raise, d0 (DAI)\n  const [theta, setTheta] = useState(0.35); // fraction allocated to reserve (.)\n  const [p0, setP0] = useState(0.1); // Hatch sale Price p0 (DAI / token)\n  const [returnF, setReturnF] = useState(3); // Return factor (.)\n  const [wFee, setWFee] = useState(0.05); // friction coefficient (.)\n\n  function setParentCurveParams() {\n    setCurveParams({ d0, theta, p0, returnF, wFee });\n  }\n\n  const inputFields: {\n    label: string;\n    value: number;\n    setter(newValue: any): void;\n    min: number;\n    max: number;\n    step: number;\n    unit?: string;\n    prefix?: string;\n    suffix?: string;\n    toText?(value: number): string;\n    toNum?(value: string): number;\n    format(value: number): string;\n  }[] = [\n    {\n      label: \"Initial raise\",\n      value: d0,\n      setter: setD0,\n      min: 0.1e6,\n      max: 10e6,\n      step: 0.1e6,\n      unit: \"$M\",\n      prefix: \"$\",\n      suffix: \"M\",\n      format: (n: number) => `$${+(n * 1e-6).toFixed(1)}M`,\n      toText: (n: number) => String(+(n * 1e-6).toFixed(1)),\n      toNum: (n: string) => Math.floor(parseFloat(n) * 1e6)\n    },\n    {\n      label: \"Allocation to project\",\n      value: theta,\n      setter: setTheta,\n      min: 0,\n      max: 0.9,\n      step: 0.01,\n      unit: \"%\",\n      suffix: \"%\",\n      format: (n: number) => `${Math.round(100 * n)}%`,\n      toText: (n: number) => String(+(n * 1e2).toFixed(0)),\n      toNum: (n: string) => parseFloat(n) * 1e-2\n    },\n    {\n      label: \"Initial token price\",\n      value: p0,\n      setter: setP0,\n      min: 0.01,\n      max: 1,\n      step: 0.01,\n      unit: \"$\",\n      prefix: \"$\",\n      toText: (n: number) => String(+n.toFixed(2)),\n      toNum: (n: string) => parseFloat(n),\n      format: (n: number) => `$${n}`\n    },\n    {\n      label: \"Return factor\",\n      value: returnF,\n      setter: setReturnF,\n      min: 1,\n      max: 10,\n      step: 0.1,\n      unit: \"x\",\n      suffix: \"x\",\n      toText: (n: number) => String(+n.toFixed(1)),\n      toNum: (n: string) => parseFloat(n),\n      format: (n: number) => `${n}x`\n    },\n    {\n      label: \"Withdrawl fee\",\n      value: wFee,\n      setter: setWFee,\n      min: 0,\n      max: 0.1,\n      step: 0.001,\n      unit: \"%\",\n      suffix: \"%\",\n      format: (n: number) => `${+(100 * n).toFixed(1)}%`,\n      toText: (n: number) => String(+(n * 1e2).toFixed(1)),\n      toNum: (n: string) => parseFloat(n) * 1e-2\n    }\n  ];\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.listBoxContainer}>\n      {inputFields.map(\n        ({\n          label,\n          value,\n          setter,\n          min,\n          max,\n          step,\n          prefix,\n          suffix,\n          format,\n          toText,\n          toNum\n        }) => {\n          function sanitizeInput(num: number = 0) {\n            if (isNaN(num)) num = 0;\n            if (num > max) num = max;\n            else if (num < min) num = min;\n            setter(num);\n          }\n\n          return (\n            <Grid key={label} container spacing={0} className={classes.listBox}>\n              <Grid item xs={6} className={classes.leftContainer}>\n                <Typography id={label} gutterBottom>\n                  {label}\n                </Typography>\n              </Grid>\n\n              <Grid item xs={2} className={classes.centerContainer}>\n                {/* <Typography gutterBottom>{display(value)}</Typography> */}\n                <TextField\n                  onChange={e => {\n                    sanitizeInput(\n                      toNum ? toNum(e.target.value) : parseFloat(e.target.value)\n                    );\n                    setParentCurveParams();\n                  }}\n                  InputProps={{\n                    inputComponent: NumberFormatCustom,\n                    disableUnderline: true,\n                    inputProps: {\n                      prefix,\n                      suffix\n                    }\n                  }}\n                  value={toText ? toText(value) : value}\n                />\n              </Grid>\n\n              <Grid item xs={4}>\n                <PrettoSlider\n                  className={classes.slider}\n                  valueLabelDisplay=\"auto\"\n                  aria-label={label}\n                  defaultValue={value}\n                  onChange={(_, newValue) => sanitizeInput(Number(newValue))}\n                  onChangeCommitted={setParentCurveParams}\n                  value={value}\n                  min={min}\n                  max={max}\n                  step={step}\n                  valueLabelFormat={value => format(value).replace(\"$\", \"\")}\n                  // marks={[\n                  //   { value: 0, label: \"0%\" },\n                  //   { value: 50, label: \"50%\" },\n                  //   { value: 100, label: \"100%\" }\n                  // ]}\n                />\n              </Grid>\n            </Grid>\n          );\n        }\n      )}\n    </div>\n  );\n}\n","/**\n * Returns an equally spaced array of numbers `from`, `to` with `steps`.\n */\nexport function linspace({\n  from = 0,\n  to,\n  steps\n}: {\n  from?: number;\n  to: number;\n  steps: number;\n}) {\n  const arr = [];\n  for (let x = from; x <= to; x += (to - from) / steps) arr.push(x);\n  return arr;\n}\n\n/**\n * Returns the last element of an array\n */\nexport function getLast(a: number[]) {\n  return a[a.length - 1];\n}\n\n/**\n * Returns the average of an array\n */\nexport function getAvg(a: number[]) {\n  return a.reduce((t, c) => t + Math.abs(c), 0) / a.length;\n}\n\n/**\n * Waits `ms` miliseconds and resolves\n */\nexport function pause(ms: number) {\n  return new Promise(r => setTimeout(r, ms));\n}\n","import React from \"react\";\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Legend,\n  ReferenceLine,\n  ResponsiveContainer,\n  Tooltip\n} from \"recharts\";\nimport { linspace } from \"./utils\";\nimport { useTheme } from \"@material-ui/styles\";\n\nfunction SupplyVsDemandChart({\n  returnF,\n  theta,\n  d0,\n  p0\n}: {\n  returnF: number;\n  theta: number;\n  d0: number;\n  p0: number;\n}) {\n  // d0      - Initial raise, d0 (DAI)\n  // theta   - fraction allocated to reserve (.)\n  // p0      - Hatch sale Price p0 (DAI / token)\n  // returnF - Return factor (.)\n  // wFee    - friction coefficient (.)\n\n  // Hatch parameters\n  const k = returnF / (1 - theta); // Invariant power kappa (.)\n  const R0 = (1 - theta / 100) * d0; // Initial reserve (DAI)\n  const S0 = d0 / p0; // initial supply of tokens (token)\n  const S_of_R = (R: number) => S0 * (R / R0) ** (1 / k);\n\n  // Function setup\n  const f = S_of_R;\n  const from = 0;\n  const to = 4 * R0;\n  const steps = 100;\n  const step = (to - from) / steps;\n\n  /**\n   * Prettify the result converting 1000000 to 1M\n   */\n  const biggest = Math.max(to, f(to));\n  const [scaling, unit] =\n    // Billion\n    biggest > 0.5e9\n      ? [1e9, \"B\"]\n      : // Million\n      biggest > 0.5e6\n      ? [1e6, \"M\"]\n      : // 1 thousand\n      biggest > 0.5e3\n      ? [1e3, \"K\"]\n      : // No scale\n        [1, \"\"];\n\n  const keyHorizontal = \"x\";\n  const keyVertical = \"Supply (tokens) / Reserve (DAI)\";\n\n  const data = [];\n  for (let x = from; x <= to; x += step) {\n    data.push({\n      [keyHorizontal]: x,\n      [keyVertical]: f(x)\n    });\n  }\n\n  // Chart components\n\n  const theme: any = useTheme();\n\n  const formatter = (n: number) =>\n    (+(n / scaling).toPrecision(2)).toLocaleString();\n\n  function renderColorfulLegendText(value: string) {\n    return <span style={{ color: theme.palette.text.secondary }}>{value}</span>;\n  }\n\n  function ReferenceLabel(props: any) {\n    const { textAnchor, viewBox } = props;\n    return (\n      <text\n        x={viewBox.x + 10}\n        y={30}\n        fill={theme.palette.text.secondary}\n        textAnchor={textAnchor}\n      >\n        Initial value\n      </text>\n    );\n  }\n\n  return (\n    <ResponsiveContainer debounce={1}>\n      <AreaChart\n        width={0}\n        height={400}\n        data={data}\n        margin={{\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          interval={\"preserveStartEnd\"}\n          ticks={linspace({ to: to, steps: 4 })}\n          dataKey={keyHorizontal}\n          tickFormatter={formatter}\n          unit={unit}\n          tick={{ fill: theme.palette.text.secondary }}\n          stroke={theme.palette.text.secondary}\n        />\n        <YAxis\n          interval={\"preserveStartEnd\"}\n          ticks={linspace({ to: f(to), steps: 3 })}\n          tickFormatter={formatter}\n          unit={unit}\n          tick={{ fill: theme.palette.text.secondary }}\n          domain={[0, f(to)]}\n          stroke={theme.palette.text.secondary}\n        />\n        <Tooltip formatter={value => formatter(Number(value))} />\n        <Area\n          isAnimationActive={false}\n          type=\"monotone\"\n          dataKey={keyVertical}\n          stroke={theme.palette.primary.main}\n          fill={theme.palette.primary.main}\n        />\n        <ReferenceLine\n          x={R0}\n          stroke=\"#90a4ae\"\n          strokeDasharray=\"6 3\"\n          label={<ReferenceLabel />}\n        />\n        <Legend formatter={renderColorfulLegendText} />\n      </AreaChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport default SupplyVsDemandChart;\n","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: theme.spacing(6, 0, 3)\n    },\n    lightBulb: {\n      verticalAlign: \"middle\",\n      marginRight: theme.spacing(1)\n    },\n    leftContainer: {\n      color: theme.palette.text.secondary\n    },\n    centerContainer: {\n      // color: blackColor\n    },\n    listBoxContainer: {\n      \"& > div:not(:last-child)\": {\n        marginBottom: \"12px\",\n        borderBottom: \"1px solid #313d47\"\n      }\n    },\n    listBox: {\n      paddingBottom: \"12px\",\n      \"& > div\": {\n        display: \"flex\",\n        alignItems: \"center\",\n        \"& p\": {\n          marginBottom: 0\n        }\n      },\n      \"& > div:not(:last-child)\": {\n        paddingRight: \"12px\"\n      }\n    }\n  })\n);\n\nexport default function ResultParams({\n  resultFields\n}: {\n  resultFields: {\n    label: string;\n    value: number | string;\n  }[];\n}) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.listBoxContainer}>\n      {resultFields.map(({ label, value }) => (\n        <Grid key={label} container spacing={0} className={classes.listBox}>\n          <Grid item xs={8} className={classes.leftContainer}>\n            <Typography id={label} gutterBottom>\n              {label}\n            </Typography>\n          </Grid>\n\n          <Grid item xs={4} className={classes.centerContainer}>\n            <Typography gutterBottom>{value}</Typography>\n          </Grid>\n        </Grid>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Legend,\n  ResponsiveContainer,\n  Tooltip\n} from \"recharts\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { linspace } from \"./utils\";\n\nfunction PriceSimulationChart({\n  priceTimeseries,\n  withdrawFeeTimeseries,\n  p0\n}: {\n  priceTimeseries: number[];\n  withdrawFeeTimeseries: number[];\n  p0: number;\n}) {\n  // d0      - Initial raise, d0 (DAI)\n  // theta   - fraction allocated to reserve (.)\n  // p0      - Hatch sale Price p0 (DAI / token)\n  // returnF - Return factor (.)\n  // wFee    - friction coefficient (.)\n\n  const keyHorizontal = \"x\";\n  const keyVerticalLeft = \"Price (DAI / token)\";\n  const keyVerticalRight = \"Collected withdraw fee (DAI)\";\n\n  const data = [];\n  for (let t = 0; t < priceTimeseries.length; t++) {\n    data.push({\n      [keyHorizontal]: t,\n      [keyVerticalLeft]: priceTimeseries[t] || 0,\n      [keyVerticalRight]: withdrawFeeTimeseries[t] || 0\n    });\n  }\n\n  // Chart components\n\n  const theme: any = useTheme();\n\n  function renderColorfulLegendText(value: string) {\n    return <span style={{ color: theme.palette.text.secondary }}>{value}</span>;\n  }\n\n  const formatter = (n: number) => (+n.toPrecision(3)).toLocaleString();\n\n  return (\n    <ResponsiveContainer debounce={1}>\n      <AreaChart\n        width={0}\n        height={400}\n        data={data}\n        margin={{\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          dataKey={keyHorizontal}\n          tick={{ fill: theme.palette.text.secondary }}\n          stroke={theme.palette.text.secondary}\n          ticks={[\n            ...linspace({\n              to: priceTimeseries.length,\n              steps: 4\n            }).map(Math.floor),\n            priceTimeseries.length - 1\n          ]}\n        />\n        <YAxis\n          yAxisId=\"left\"\n          domain={[Math.min(...priceTimeseries), Math.max(...priceTimeseries)]}\n          tickFormatter={formatter}\n          tick={{ fill: theme.palette.text.secondary }}\n          stroke={theme.palette.text.secondary}\n        />\n\n        {/* Capital collected from withdraw fees - AXIS */}\n        <YAxis\n          yAxisId=\"right\"\n          // domain={[\n          //   Math.floor(Math.min(...withdrawFeeTimeseries)),\n          //   Math.ceil(Math.max(...withdrawFeeTimeseries))\n          // ]}\n          orientation=\"right\"\n          tick={{ fill: theme.palette.text.secondary }}\n          stroke={theme.palette.text.secondary}\n        />\n\n        <Tooltip formatter={value => Number(value)} />\n        <Area\n          isAnimationActive={false}\n          yAxisId=\"left\"\n          type=\"monotone\"\n          dataKey={keyVerticalLeft}\n          stroke={theme.palette.primary.main}\n          fill={theme.palette.primary.main}\n        />\n\n        {/* Capital collected from withdraw fees - AREA */}\n        <Area\n          isAnimationActive={false}\n          yAxisId=\"right\"\n          type=\"monotone\"\n          dataKey={keyVerticalRight}\n          stroke={theme.palette.secondary.main}\n          fill={theme.palette.secondary.main}\n        />\n\n        {/* <ReferenceLine\n          x={R0}\n          stroke=\"#90a4ae\"\n          strokeDasharray=\"6 3\"\n          label={<ReferenceLabel />}\n        /> */}\n        <Legend formatter={renderColorfulLegendText} />\n      </AreaChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport default PriceSimulationChart;\n","import React, { useState, useEffect, useMemo } from \"react\";\n// Material UI\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Fade from \"@material-ui/core/Fade\";\n// Components\nimport Header from \"./Header\";\nimport InputParams from \"./InputParams\";\nimport SupplyVsDemandChart from \"./SupplyVsDemandChart\";\nimport ResultParams from \"./ResultParams\";\nimport PriceSimulationChart from \"./PriceSimulationChart\";\n// Utils\nimport { getLast, getAvg, pause } from \"./utils\";\nimport { throttle } from \"lodash\";\n// General styles\nimport \"./app.css\";\n\nconst headerOffset = 10;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    mainContainer: {\n      \"& > div:not(:last-child)\": {\n        paddingBottom: theme.spacing(3)\n      },\n      \"& > div\": {\n        \"& > div\": {\n          paddingTop: \"0 !important\"\n        }\n      },\n      paddingBottom: theme.spacing(9)\n    },\n    paper: {\n      width: \"100%\",\n      height: \"100%\",\n      minHeight: 310,\n      backgroundColor: \"#293640\"\n    },\n    box: {\n      padding: theme.spacing(3, 3),\n      minHeight: 310\n    },\n    boxHeader: {\n      padding: theme.spacing(3, 3),\n      height: theme.spacing(headerOffset),\n      display: \"flex\",\n      alignItems: \"center\",\n      borderBottom: \"1px solid #313d47\"\n    },\n    boxChart: {\n      width: \"100%\",\n      height: \"100%\",\n      minHeight: 310,\n      maxHeight: 350,\n      padding: theme.spacing(3, 3),\n      // Correct the chart excessive margins\n      paddingRight: \"5px\",\n      paddingLeft: \"5px\"\n    },\n    header: {\n      backgroundColor: \"#0b1216\",\n      color: \"#f8f8f8\",\n      padding: theme.spacing(9, 0, 6 + headerOffset),\n      marginBottom: -theme.spacing(headerOffset)\n    },\n    button: {\n      background: \"linear-gradient(290deg, #2ad179, #4ab47c)\",\n      color: \"white\"\n    }\n  })\n);\n\nexport default function App() {\n  const [curveParams, setCurveParams] = useState({\n    d0: 1e6, // Initial raise, d0 (DAI)\n    theta: 0.35, // fraction allocated to reserve (.)\n    p0: 0.1, // Hatch sale Price p0 (DAI / token)\n    returnF: 3, // Return factor (.)\n    wFee: 0.05 // friction coefficient (.)\n  });\n\n  const { d0, theta, p0, returnF, wFee } = curveParams;\n\n  /**\n   * Throttle the curve update to prevent the expensive chart\n   * to re-render too often\n   */\n  const setCurveParamsThrottle = useMemo(\n    () => throttle(setCurveParams, 1000),\n    []\n  );\n\n  // Simulation results\n  const k = returnF / (1 - theta); // Invariant power kappa (.)\n  const R0 = (1 - theta / 100) * d0; // Initial reserve (DAI)\n  const S0 = d0 / p0; // initial supply of tokens (token)\n  const V0 = S0 ** k / R0; // invariant coef\n\n  const [priceTimeseries, setPriceTimeseries] = useState([0]);\n  const [withdrawFeeTimeseries, setWithdrawFeeTimeseries] = useState([0]);\n  const [totalReserve, setTotalReserve] = useState(R0);\n  const [withdrawCount, setWithdrawCount] = useState(0);\n  const [avgSlippage, setAvgSlippage] = useState(0);\n  const [avgTxSize] = useState(10000);\n  // Simulation state variables\n  const [simulationActive, setSimulationActive] = useState(false);\n  const [simulationRunning, setSimulationRunning] = useState(false);\n\n  // #### TEST: Immediate simulation\n\n  async function startSimulation() {\n    // If there's a simulation already active, clear it\n    clearSimulation();\n    await pause(0);\n\n    // Start simulation by setting it to active\n    setSimulationActive(true);\n  }\n\n  function clearSimulation() {\n    // Stop simulation\n    setSimulationActive(false);\n    // Clear simulation variables\n    setWithdrawCount(0);\n    setPriceTimeseries([0]);\n    setWithdrawFeeTimeseries([0]);\n    setAvgSlippage(0);\n  }\n\n  useEffect(() => {\n    let canContinueSimulation = true;\n    async function simulateRandomDelta() {\n      const R_t: number[] = [R0];\n      const S_t: number[] = [S0];\n      const p_t: number[] = [R0 / S0];\n      const wFee_t: number[] = [0];\n      const slippage_t: number[] = [];\n\n      // Random walk\n      const numSteps = 100;\n      const updateEveryNth = 1;\n\n      // Compute the random deltas\n      const deltaR_t: number[] = [];\n      for (let i = 0; i < numSteps; i++) {\n        const rand = 1 - 2 * Math.random();\n        const sin = Math.sin((1 / 20) * (i / numSteps));\n        const ascending = Math.sin((Math.PI / 1) * (i / numSteps));\n        const deltaR = 1e5 * rand + 1e5 * sin + 2e4 * ascending;\n        deltaR_t.push(deltaR);\n      }\n\n      // Normalize random deltas with the average transaction size\n      const deltaR_avg = getAvg(deltaR_t);\n      const deltaR_t_normalized = deltaR_t.map(\n        (deltaR: number) => (avgTxSize * deltaR) / deltaR_avg\n      );\n\n      setSimulationRunning(true);\n      for (let i = 0; i < numSteps; i++) {\n        const deltaR = deltaR_t_normalized[i];\n\n        // Protect against too strong negative deltas\n        const R = getLast(R_t);\n        const S = getLast(S_t);\n        const p = getLast(p_t);\n\n        const R_next = R + deltaR;\n        const deltaS = (V0 * (R + deltaR)) ** (1 / k) - S;\n        const S_next = S + deltaS;\n\n        R_t.push(R_next);\n        S_t.push(S_next);\n        p_t.push(R_next / S_next);\n        // Consider withdraw fees on sales only\n        if (deltaR < 0) {\n          wFee_t.push(getLast(wFee_t) - deltaR * wFee);\n          setWithdrawCount(c => c + 1);\n        } else {\n          wFee_t.push(getLast(wFee_t));\n        }\n\n        const p_next = getLast(p_t);\n        // const realizedPrice = deltaR / deltaS;\n        const spotPrice = p;\n        const slippage = Math.abs(p_next - spotPrice) / spotPrice / 2;\n        slippage_t.push(slippage);\n\n        // Stop the simulation if it's no longer active\n        if (!simulationActive || !canContinueSimulation) break;\n\n        if (i % updateEveryNth === 0) {\n          setPriceTimeseries(p_t);\n          setWithdrawFeeTimeseries(wFee_t);\n          setAvgSlippage(getAvg(slippage_t));\n          setTotalReserve(R_next);\n\n          // Make this run non-UI blocking\n          await pause(5);\n        }\n      }\n      setSimulationRunning(false);\n    }\n\n    if (simulationActive) simulateRandomDelta();\n    // Return an \"unsubscribe\" function that halts the run\n    return () => {\n      canContinueSimulation = false;\n    };\n  }, [simulationActive]);\n\n  const resultFields = [\n    {\n      label: `Average slippage (avg tx size ${avgTxSize} DAI)`,\n      value: +(100 * avgSlippage).toFixed(3) + \"%\"\n    },\n    {\n      label: `Capital collected from withdraw fees (${withdrawCount} txs)`,\n      value:\n        (+getLast(withdrawFeeTimeseries).toPrecision(3)).toLocaleString() +\n        \" DAI\"\n    },\n    {\n      label: `Total reserve`,\n      value: (+totalReserve.toPrecision(3)).toLocaleString() + \" DAI\"\n    }\n  ];\n\n  const classes = useStyles();\n  return (\n    <>\n      <header className={classes.header}>\n        <Container fixed>\n          <Header />\n        </Container>\n      </header>\n\n      <Container fixed className={classes.mainContainer}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12} md={6} lg={4}>\n            <Paper className={classes.paper}>\n              <Box className={classes.boxHeader}>\n                <Typography variant=\"h6\">Curve Design</Typography>\n              </Box>\n\n              <Box className={classes.box}>\n                <InputParams setCurveParams={setCurveParamsThrottle} />\n              </Box>\n            </Paper>\n          </Grid>\n\n          <Grid item xs={12} sm={12} md={6} lg={8}>\n            <Paper className={classes.paper}>\n              <Box className={classes.boxHeader}>\n                <Typography variant=\"h6\">Preview</Typography>\n              </Box>\n\n              <Box className={classes.boxChart}>\n                <SupplyVsDemandChart\n                  returnF={returnF}\n                  theta={theta}\n                  d0={d0}\n                  p0={p0}\n                />\n              </Box>\n            </Paper>\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={12}>\n            <Paper>\n              <Box className={classes.boxHeader}>\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                >\n                  <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    onClick={startSimulation}\n                    disabled={simulationRunning}\n                  >\n                    Run simulation\n                  </Button>\n                </Grid>\n              </Box>\n            </Paper>\n          </Grid>\n        </Grid>\n\n        {simulationActive && (\n          <Grid container spacing={3}>\n            <Grid item xs={12} sm={12} md={6} lg={8}>\n              <Paper className={classes.paper}>\n                <Box className={classes.boxHeader}>\n                  <Typography variant=\"h6\">Price walk</Typography>\n                </Box>\n\n                <Box className={classes.boxChart}>\n                  <PriceSimulationChart\n                    priceTimeseries={priceTimeseries}\n                    withdrawFeeTimeseries={withdrawFeeTimeseries}\n                    p0={p0}\n                  />\n                </Box>\n              </Paper>\n            </Grid>\n\n            <Grid item xs={12} sm={12} md={6} lg={4}>\n              <Paper className={classes.paper}>\n                <Box className={classes.boxHeader}>\n                  <Typography variant=\"h6\">Results</Typography>\n                </Box>\n\n                <Box className={classes.box}>\n                  <ResultParams resultFields={resultFields} />\n                </Box>\n              </Paper>\n            </Grid>\n          </Grid>\n        )}\n      </Container>\n    </>\n  );\n}\n","import red from \"@material-ui/core/colors/red\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: {\n      main: \"#2ecd79\"\n    },\n    secondary: {\n      main: \"#116be0\"\n    },\n    error: {\n      main: red.A400\n    },\n    background: {\n      default: \"#fff\",\n      paper: \"#293640\"\n    },\n    text: {\n      primary: \"#fff\",\n      secondary: \"#9aa3ad\"\n    }\n  },\n  typography: {\n    h6: {\n      fontWeight: 400\n    }\n  }\n});\n\nconsole.log(theme);\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}