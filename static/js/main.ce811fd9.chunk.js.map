{"version":3,"sources":["Header.tsx","InputParams.tsx","utils.ts","math.ts","SupplyVsDemandChart.tsx","ResultParams.tsx","PriceSimulationChart.tsx","HelpText.tsx","App.tsx","theme.tsx","index.tsx"],"names":["cadCadLink","useStyles","makeStyles","theme","createStyles","title","subtitle","color","palette","text","secondary","margin","spacing","subsubtitle","opacity","lightBulb","verticalAlign","marginRight","link","primary","main","logoContainer","display","alignItems","justifyContent","marginBottom","logo","width","logoText","fontSize","fontWeight","Header","classes","react_default","a","createElement","Fragment","className","src","alt","Typography","variant","Link","href","PrettoSlider","withStyles","root","height","thumb","backgroundColor","border","marginTop","marginLeft","&:focus,&:hover,&$active","boxShadow","active","valueLabel","left","track","borderRadius","rail","markLabel","top","Slider","leftContainer","centerContainer","listBoxContainer","& > div:not(:last-child)","paddingBottom","borderBottom","listBox","& > div","& p","paddingRight","slider","NumberFormatCustom","props","inputRef","onChange","prefix","suffix","other","Object","objectWithoutProperties","number_format_default","assign","getInputRef","onValueChange","values","target","value","thousandSeparator","InputParams","_ref","curveParams","setCurveParams","_useState","useState","_useState2","slicedToArray","d0","setD0","_useState3","_useState4","theta","setTheta","_useState5","_useState6","p0","setP0","_useState7","_useState8","p1","setP1","_useState9","_useState10","wFee","setWFee","setParentCurveParams","inputFields","label","setter","min","max","step","unit","format","n","concat","toFixed","toText","String","toNum","Math","floor","parseFloat","round","Number","useEffect","map","_ref2","sanitizeInput","num","arguments","length","undefined","isNaN","Grid","key","container","item","xs","id","gutterBottom","TextField","e","InputProps","inputComponent","disableUnderline","inputProps","valueLabelDisplay","aria-label","defaultValue","_","newValue","onChangeCommitted","valueLabelFormat","replace","linspace","_ref$from","from","to","steps","arr","x","push","getLinspaceTicks","data","desiredPoints","getLast","getAvg","reduce","t","c","abs","pause","ms","Promise","r","setTimeout","getInitialParams","k","R0","S0","V0","pow","getPriceR","R","getSlippage","_ref3","deltaR","S","realizedPrice","spotPrice","getDeltaR_priceGrowth","_ref5","priceGrowth","getTxDistribution","_ref6","sum","mean","off","i","randn_bm","rv_U","random","u","v","sqrt","log","cos","PI","SupplyVsDemandChart","_getInitialParams","f","biggest","scaling","keyVertical","_data$push","defineProperty","useTheme","formatter","toPrecision","toLocaleString","es6","debounce","right","bottom","strokeDasharray","interval","ticks","d","dataKey","tickFormatter","tick","fill","stroke","domain","isAnimationActive","type","textAnchor","viewBox","y","style","ResultParams","resultFields","PriceSimulationChart","priceTimeseries","withdrawFeeTimeseries","ReferenceLabel","toConsumableArray","yAxisId","apply","orientation","cursor","transition","&:hover","typography","padding","paper","SimplePopover","_React$useState","React","_React$useState2","anchorEl","setAnchorEl","open","Boolean","HelpOutline_default","onClick","currentTarget","Popover","PaperProps","onClose","anchorOrigin","vertical","horizontal","transformOrigin","mainContainer","paddingTop","simulationContainer","minHeight","box","boxButton","boxHeader","boxChart","maxHeight","paddingLeft","boxPlaceholder","header","textAlign","button","background","createMuiTheme","error","red","A400","default","h6","console","ReactDOM","render","ThemeProvider","CssBaseline","setCurveParamsThrottle","useMemo","throttle","setPriceTimeseries","setWithdrawFeeTimeseries","totalReserve","setTotalReserve","withdrawCount","setWithdrawCount","_useState11","_useState12","avgSlippage","setAvgSlippage","_useState13","_useState14","avgTxSize","setAvgTxSize","_useState15","_useState16","simulationActive","setSimulationActive","_useState17","_useState18","simulationRunning","setSimulationRunning","_startSimulation","asyncToGenerator","regenerator_default","mark","_callee2","wrap","_context2","prev","next","stop","this","canContinueSimulation","_simulateRandomDelta","_callee","R_t","p_t","wFee_t","slippage_t","avgTxSize_t","numSteps","_loop","_context","txsWeek","ceil","R_next","txs","slippage","txR","txsWithdraw","filter","tx","wFees","_avgTxSize","abrupt","simulateRandomDelta","Container","fixed","sm","md","lg","Paper","Box","src_SupplyVsDemandChart","direction","justify","Button","disabled","src_PriceSimulationChart","document","querySelector"],"mappings":"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","file":"static/js/main.ce811fd9.chunk.js","sourcesContent":["import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst cadCadLink =\n  \"https://medium.com/block-science/cadcad-filling-a-critical-gap-in-open-source-data-science-fcd0d3faa8ed\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      // color: theme.palette.text.secondary,\n    },\n    subtitle: {\n      color: theme.palette.text.secondary,\n      margin: theme.spacing(3, 0, 0)\n    },\n    subsubtitle: {\n      color: theme.palette.text.secondary,\n      opacity: 0.6\n    },\n    lightBulb: {\n      verticalAlign: \"middle\",\n      marginRight: theme.spacing(1)\n    },\n    link: {\n      color: theme.palette.primary.main\n    },\n    logoContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      marginBottom: theme.spacing(4)\n    },\n    logo: {\n      width: \"25px\",\n      marginRight: \"4px\"\n    },\n    logoText: {\n      display: \"inline\",\n      fontSize: \"1.1rem\",\n      fontWeight: 500\n    }\n  })\n);\n\nexport default function Header() {\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.logoContainer}>\n        <img src=\"./favicon.ico\" className={classes.logo} alt=\"logo\" />\n        <Typography className={classes.logoText}>Commons Stack</Typography>\n      </div>\n\n      <Typography className={classes.title} variant=\"h4\">\n        Augmented Token Bonding Curve Design\n      </Typography>\n\n      <Typography className={classes.subtitle}>\n        Experiment and test augmented token bonding curves\n      </Typography>\n      <Typography className={classes.subsubtitle}>\n        A narrative showcase of <Link href={cadCadLink}>cadCAD</Link>\n        's capabilities\n      </Typography>\n    </>\n  );\n}\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport {\n  createStyles,\n  makeStyles,\n  withStyles,\n  Theme\n} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport NumberFormat from \"react-number-format\";\nimport { throttle } from \"lodash\";\n\nconst PrettoSlider = withStyles({\n  root: {\n    height: 8\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: \"#fff\",\n    border: \"2px solid currentColor\",\n    marginTop: -8,\n    marginLeft: -12,\n    \"&:focus,&:hover,&$active\": {\n      boxShadow: \"inherit\"\n    }\n  },\n  active: {},\n  valueLabel: {\n    left: \"calc(-50% + 4px)\"\n  },\n  track: {\n    height: 8,\n    borderRadius: 4\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4\n  },\n  markLabel: {\n    top: 30\n  }\n})(Slider);\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: theme.spacing(6, 0, 3)\n    },\n    lightBulb: {\n      verticalAlign: \"middle\",\n      marginRight: theme.spacing(1)\n    },\n    leftContainer: {\n      color: theme.palette.text.secondary\n    },\n    centerContainer: {\n      // color: blackColor\n    },\n    listBoxContainer: {\n      \"& > div:not(:last-child)\": {\n        paddingBottom: \"12px\",\n        marginBottom: \"12px\",\n        borderBottom: \"1px solid #313d47\"\n      }\n    },\n    listBox: {\n      \"& > div\": {\n        display: \"flex\",\n        alignItems: \"center\",\n        \"& p\": {\n          marginBottom: 0\n        }\n      },\n      \"& > div:not(:last-child)\": {\n        paddingRight: \"12px\"\n      }\n    },\n    slider: {\n      color: theme.palette.primary.main\n    }\n  })\n);\n\nfunction NumberFormatCustom(props: any) {\n  const { inputRef, onChange, prefix, suffix, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({ target: { value: values.value } });\n      }}\n      thousandSeparator\n      prefix={prefix}\n      suffix={suffix}\n    />\n  );\n}\n\nexport default function InputParams({\n  curveParams,\n  setCurveParams\n}: {\n  curveParams?: {\n    d0: number;\n    theta: number;\n    p0: number;\n    p1: number;\n    wFee: number;\n  };\n  setCurveParams(newCurveParams: any): void;\n}) {\n  const [d0, setD0] = useState(1e6); // Initial raise, d0 (DAI)\n  const [theta, setTheta] = useState(0.35); // fraction allocated to reserve (.)\n  const [p0, setP0] = useState(0.1); // Hatch sale Price p0 (DAI / token)\n  const [p1, setP1] = useState(0.3); // Return factor (.)\n  const [wFee, setWFee] = useState(0.05); // friction coefficient (.)\n\n  function setParentCurveParams() {\n    setCurveParams({ d0, theta, p0, p1, wFee });\n  }\n\n  const maxReturnRate = 10;\n\n  const inputFields: {\n    label: string;\n    value: number;\n    setter(newValue: any): void;\n    min: number;\n    max: number;\n    step: number;\n    unit?: string;\n    prefix?: string;\n    suffix?: string;\n    toText?(value: number): string;\n    toNum?(value: string): number;\n    format(value: number): string;\n  }[] = [\n    {\n      label: \"Initial raise\",\n      value: d0,\n      setter: setD0,\n      min: 0.1e6,\n      max: 10e6,\n      step: 0.1e6,\n      unit: \"$M\",\n      prefix: \"$\",\n      suffix: \"M\",\n      format: (n: number) => `$${+(n * 1e-6).toFixed(1)}M`,\n      toText: (n: number) => String(+(n * 1e-6).toFixed(1)),\n      toNum: (n: string) => Math.floor(parseFloat(n) * 1e6)\n    },\n    {\n      label: \"Allocation to project\",\n      value: theta,\n      setter: setTheta,\n      min: 0,\n      max: 0.9,\n      step: 0.01,\n      unit: \"%\",\n      suffix: \"%\",\n      format: (n: number) => `${Math.round(100 * n)}%`,\n      toText: (n: number) => String(+(n * 1e2).toFixed(0)),\n      toNum: (n: string) => parseFloat(n) * 1e-2\n    },\n    {\n      label: \"Hatch sale price\",\n      value: p0,\n      setter: setP0,\n      min: 0.01,\n      max: 1,\n      step: 0.01,\n      unit: \"$\",\n      prefix: \"$\",\n      toText: (n: number) => String(+n.toFixed(2)),\n      toNum: (n: string) => parseFloat(n),\n      format: (n: number) => `$${n}`\n    },\n    {\n      label: \"After hatch price\",\n      value: p1,\n      setter: setP1,\n      min: p0 || 0.1,\n      max: Number((maxReturnRate * p0).toFixed(2)),\n      step: 0.01,\n      unit: \"$\",\n      prefix: \"$\",\n      toText: (n: number) => String(+n.toFixed(2)),\n      toNum: (n: string) => parseFloat(n),\n      format: (n: number) => `$${n}`\n    },\n    {\n      label: \"Withdrawl fee\",\n      value: wFee,\n      setter: setWFee,\n      min: 0,\n      max: 0.1,\n      step: 0.001,\n      unit: \"%\",\n      suffix: \"%\",\n      format: (n: number) => `${+(100 * n).toFixed(1)}%`,\n      toText: (n: number) => String(+(n * 1e2).toFixed(1)),\n      toNum: (n: string) => parseFloat(n) * 1e-2\n    }\n  ];\n\n  useEffect(() => {\n    if (p1 < p0) setP1(p0);\n    else if (p1 > p0 * maxReturnRate) setP1(p0 * maxReturnRate);\n  }, [p0]);\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.listBoxContainer}>\n      {inputFields.map(\n        ({\n          label,\n          value,\n          setter,\n          min,\n          max,\n          step,\n          prefix,\n          suffix,\n          format,\n          toText,\n          toNum\n        }) => {\n          function sanitizeInput(num: number = 0) {\n            if (isNaN(num)) num = 0;\n            if (num > max) num = max;\n            else if (num < min) num = min;\n            setter(num);\n          }\n\n          return (\n            <Grid key={label} container spacing={0} className={classes.listBox}>\n              <Grid item xs={6} className={classes.leftContainer}>\n                <Typography id={label} gutterBottom>\n                  {label}\n                </Typography>\n              </Grid>\n\n              <Grid item xs={2} className={classes.centerContainer}>\n                {/* <Typography gutterBottom>{display(value)}</Typography> */}\n                <TextField\n                  onChange={e => {\n                    sanitizeInput(\n                      toNum ? toNum(e.target.value) : parseFloat(e.target.value)\n                    );\n                    setParentCurveParams();\n                  }}\n                  InputProps={{\n                    inputComponent: NumberFormatCustom,\n                    disableUnderline: true,\n                    inputProps: {\n                      prefix,\n                      suffix\n                    }\n                  }}\n                  value={toText ? toText(value) : value}\n                />\n              </Grid>\n\n              <Grid item xs={4}>\n                <PrettoSlider\n                  className={classes.slider}\n                  valueLabelDisplay=\"auto\"\n                  aria-label={label}\n                  defaultValue={value}\n                  onChange={(_, newValue) => sanitizeInput(Number(newValue))}\n                  onChangeCommitted={setParentCurveParams}\n                  value={value}\n                  min={min}\n                  max={max}\n                  step={step}\n                  valueLabelFormat={value => format(value).replace(\"$\", \"\")}\n                  // marks={[\n                  //   { value: 0, label: \"0%\" },\n                  //   { value: 50, label: \"50%\" },\n                  //   { value: 100, label: \"100%\" }\n                  // ]}\n                />\n              </Grid>\n            </Grid>\n          );\n        }\n      )}\n    </div>\n  );\n}\n","/**\n * Returns an equally spaced array of numbers `from`, `to` with `steps`.\n */\nexport function linspace({\n  from = 0,\n  to,\n  steps\n}: {\n  from?: number;\n  to: number;\n  steps: number;\n}) {\n  const arr = [];\n  for (let x = from; x <= to; x += (to - from) / steps) arr.push(x);\n  return arr;\n}\n\n/**\n * Returns a uniform distribution of `num` ticks\n */\nexport function getLinspaceTicks(data: number[], num: number) {\n  const desiredPoints = [];\n  const step = (data[data.length - 1] - data[0]) / num;\n  for (let x = data[0]; x < data[data.length - 1]; x += step) {\n    desiredPoints.push(x);\n  }\n  if (desiredPoints.length < num + 1) desiredPoints.push(data[data.length - 1]);\n\n  return desiredPoints;\n}\n\n/**\n * Returns the last element of an array\n */\nexport function getLast(a: number[]) {\n  return a[a.length - 1];\n}\n\n/**\n * Returns the average of an array\n */\nexport function getAvg(a: number[]) {\n  return a.reduce((t, c) => t + Math.abs(c), 0) / a.length;\n}\n\n/**\n * Waits `ms` miliseconds and resolves\n */\nexport function pause(ms: number) {\n  return new Promise(r => setTimeout(r, ms));\n}\n","import { getAvg } from \"./utils\";\n\n/**\n * Computes the initial params given the \"user friendly\" params:\n * - Initial raise, `d0` (DAI)\n * - fraction allocated to reserve, `theta`\n * - Hatch sale price, `p0` (DAI / token)\n * - Return factor, `returnF`\n */\nexport function getInitialParams({\n  d0,\n  theta,\n  p0,\n  p1\n}: {\n  d0: number;\n  theta: number;\n  p0: number;\n  p1: number;\n}) {\n  const k = p1 / p0 / (1 - theta); // Invariant power kappa (.)\n  const R0 = (1 - theta) * d0; // Initial reserve (DAI)\n  const S0 = d0 / p0; // initial supply of tokens (token)\n  const V0 = S0 ** k / R0; // invariant coef\n  return { k, R0, S0, V0 };\n}\n\n/**\n * Computes the price at a specific reserve `R`\n */\nexport function getPriceR({ R, V0, k }: { R: number; V0: number; k: number }) {\n  return (k * R ** ((k - 1) / k)) / V0 ** (1 / k);\n}\n\n/**\n * Compute slippage at a point `R`, given a `deltaR`\n */\nexport function getSlippage({\n  R,\n  deltaR,\n  V0,\n  k\n}: {\n  R: number;\n  deltaR: number;\n  V0: number;\n  k: number;\n}) {\n  const S = (V0 * R) ** (1 / k);\n  const deltaS = (V0 * (R + deltaR)) ** (1 / k) - S;\n  const realizedPrice = deltaR / deltaS;\n  const spotPrice = getPriceR({ R, V0, k });\n  return Math.abs(realizedPrice - spotPrice) / spotPrice;\n}\n\n// Price walk utils\n\n/**\n * Generate a random delta given three components:\n * 1. Climbing sin\n * 2. Oscilating sin\n * 3. Random component\n */\nexport function getRandomDeltas({\n  numSteps,\n  avgTxSize\n}: {\n  numSteps: number;\n  avgTxSize: number;\n}) {\n  const deltaR_t: number[] = [];\n  for (let i = 0; i < numSteps; i++) {\n    const rand = 1 - 2 * Math.random();\n    const sin = Math.sin((1 / 20) * (i / numSteps));\n    const ascending = Math.sin((Math.PI / 1) * (i / numSteps));\n    const deltaR = 1e5 * rand + 1e5 * sin + 2e4 * ascending;\n    deltaR_t.push(deltaR);\n  }\n\n  // Normalize random deltas with the average transaction size\n  const deltaR_avg = getAvg(deltaR_t);\n  return deltaR_t.map((deltaR: number) => (avgTxSize * deltaR) / deltaR_avg);\n}\n\n/**\n * Get deltaR for a given price growth factor\n */\nexport function getDeltaR_priceGrowth({\n  R,\n  k,\n  priceGrowth\n}: {\n  R: number;\n  k: number;\n  priceGrowth: number;\n}) {\n  return -R + (priceGrowth * R ** (1 - 1 / k)) ** (k / (-1 + k));\n}\n\n/**\n * Computes a tx distribution using a normal distribution,\n * Given a sum of tx value and a number of transactions\n *\n * Demo: https://codepen.io/anon/pen/mNqJjv?editors=0010#0\n * Very quick: < 10ms for 10000 txs\n */\nexport function getTxDistribution({ sum, num }: { sum: number; num: number }) {\n  const mean = sum / num;\n  const off = mean * 4;\n  const x: number[] = [];\n  for (let i = 0; i < num; i++) {\n    x[i] = randn_bm(mean - off, mean + off);\n  }\n  return x;\n}\n\n// Minor utils\n\n/**\n * Random variable uniformly distributed\n */\nexport function rv_U(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\n/**\n * Standard Normal variate using Box-Muller transform.\n * by https://stackoverflow.com/questions/25582882/javascript-math-random-normal-distribution-gaussian-bell-curve/36481059#36481059\n */\nfunction randn_bm(min: number, max: number) {\n  var u = 0,\n    v = 0;\n  while (u === 0) u = Math.random(); //Converting [0,1) to (0,1)\n  while (v === 0) v = Math.random();\n  let num = Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI * v);\n\n  num = num / 10.0 + 0.5; // Translate to 0 -> 1\n  if (num > 1 || num < 0) num = randn_bm(min, max); // resample between 0 and 1 if out of range\n  num *= max - min; // Stretch to fill range\n  num += min; // offset to min\n  return num;\n}\n","import React from \"react\";\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Legend,\n  ReferenceLine,\n  ResponsiveContainer,\n  Tooltip\n} from \"recharts\";\nimport { getLinspaceTicks } from \"./utils\";\nimport { getInitialParams } from \"./math\";\nimport { useTheme } from \"@material-ui/styles\";\n\nfunction SupplyVsDemandChart({\n  theta,\n  d0,\n  p0,\n  p1\n}: {\n  theta: number;\n  d0: number;\n  p0: number;\n  p1: number;\n}) {\n  // d0      - Initial raise, d0 (DAI)\n  // theta   - fraction allocated to reserve (.)\n  // p0      - Hatch sale Price p0 (DAI / token)\n  // returnF - Return factor (.)\n  // wFee    - friction coefficient (.)\n\n  // Hatch parameters\n  const {\n    k, // Invariant power kappa (.)\n    R0, // Initial reserve (DAI)\n    S0 // initial supply of tokens (token)\n  } = getInitialParams({\n    d0,\n    theta,\n    p0,\n    p1\n  });\n  const S_of_R = (R: number) => S0 * (R / R0) ** (1 / k);\n\n  // Function setup\n  const f = S_of_R;\n  const from = 0;\n  const to = 4 * R0;\n  const steps = 100;\n  const step = (to - from) / steps;\n\n  /**\n   * Prettify the result converting 1000000 to 1M\n   */\n  const biggest = Math.max(to, f(to));\n  const [scaling, unit] =\n    // Billion\n    biggest > 0.5e9\n      ? [1e9, \"B\"]\n      : // Million\n      biggest > 0.5e6\n      ? [1e6, \"M\"]\n      : // 1 thousand\n      biggest > 0.5e3\n      ? [1e3, \"K\"]\n      : // No scale\n        [1, \"\"];\n\n  const keyHorizontal = \"x\";\n  const keyVertical = \"Supply (tokens) / Reserve (DAI)\";\n\n  const data = [];\n  for (let x = from; x <= to; x += step) {\n    data.push({\n      [keyHorizontal]: x,\n      [keyVertical]: f(x)\n    });\n  }\n\n  // Chart components\n\n  const theme: any = useTheme();\n\n  const formatter = (n: number) =>\n    (+(n / scaling).toPrecision(2)).toLocaleString();\n\n  function renderColorfulLegendText(value: string) {\n    return <span style={{ color: theme.palette.text.secondary }}>{value}</span>;\n  }\n\n  function ReferenceLabel(props: any) {\n    const { textAnchor, viewBox } = props;\n    return (\n      <text\n        x={viewBox.x + 10}\n        y={30}\n        fill={theme.palette.text.secondary}\n        textAnchor={textAnchor}\n      >\n        Initial value\n      </text>\n    );\n  }\n\n  return (\n    <ResponsiveContainer debounce={1}>\n      <AreaChart\n        width={0}\n        height={400}\n        data={data}\n        margin={{\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          interval={\"preserveStartEnd\"}\n          ticks={getLinspaceTicks(data.map(d => d[keyHorizontal]), 4)}\n          dataKey={keyHorizontal}\n          tickFormatter={formatter}\n          unit={unit}\n          tick={{ fill: theme.palette.text.secondary }}\n          stroke={theme.palette.text.secondary}\n        />\n        <YAxis\n          interval={\"preserveStartEnd\"}\n          ticks={getLinspaceTicks(data.map(d => d[keyVertical]), 3)}\n          tickFormatter={formatter}\n          unit={unit}\n          tick={{ fill: theme.palette.text.secondary }}\n          domain={[0, f(to)]}\n          stroke={theme.palette.text.secondary}\n        />\n        <Tooltip formatter={value => formatter(Number(value))} />\n        <Area\n          isAnimationActive={false}\n          type=\"monotone\"\n          dataKey={keyVertical}\n          stroke={theme.palette.primary.main}\n          fill={theme.palette.primary.main}\n        />\n        <ReferenceLine\n          x={R0}\n          stroke={theme.palette.primary.main}\n          strokeDasharray=\"9 0\"\n          label={<ReferenceLabel />}\n        />\n        <Legend formatter={renderColorfulLegendText} />\n      </AreaChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport default SupplyVsDemandChart;\n","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: theme.spacing(6, 0, 3)\n    },\n    lightBulb: {\n      verticalAlign: \"middle\",\n      marginRight: theme.spacing(1)\n    },\n    leftContainer: {\n      color: theme.palette.text.secondary\n    },\n    centerContainer: {\n      // color: blackColor\n    },\n    listBoxContainer: {\n      \"& > div:not(:last-child)\": {\n        marginBottom: \"12px\",\n        borderBottom: \"1px solid #313d47\"\n      }\n    },\n    listBox: {\n      paddingBottom: \"12px\",\n      \"& > div\": {\n        display: \"flex\",\n        alignItems: \"center\",\n        \"& p\": {\n          marginBottom: 0\n        }\n      },\n      \"& > div:not(:last-child)\": {\n        paddingRight: \"12px\"\n      }\n    }\n  })\n);\n\nexport default function ResultParams({\n  resultFields\n}: {\n  resultFields: {\n    label: string;\n    value: number | string;\n  }[];\n}) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.listBoxContainer}>\n      {resultFields.map(({ label, value }) => (\n        <Grid key={label} container spacing={0} className={classes.listBox}>\n          <Grid item xs={8} className={classes.leftContainer}>\n            <Typography id={label} gutterBottom>\n              {label}\n            </Typography>\n          </Grid>\n\n          <Grid item xs={4} className={classes.centerContainer}>\n            <Typography gutterBottom>{value}</Typography>\n          </Grid>\n        </Grid>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Legend,\n  ReferenceLine,\n  ResponsiveContainer,\n  Tooltip\n} from \"recharts\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { linspace } from \"./utils\";\n\nfunction PriceSimulationChart({\n  priceTimeseries,\n  withdrawFeeTimeseries,\n  p0,\n  p1\n}: {\n  priceTimeseries: number[];\n  withdrawFeeTimeseries: number[];\n  p0: number;\n  p1: number;\n}) {\n  // d0      - Initial raise, d0 (DAI)\n  // theta   - fraction allocated to reserve (.)\n  // p0      - Hatch sale Price p0 (DAI / token)\n  // returnF - Return factor (.)\n  // wFee    - friction coefficient (.)\n\n  const keyHorizontal = \"x\";\n  const keyVerticalLeft = \"Price (DAI / token)\";\n  const keyVerticalRight = \"Collected withdraw fee (DAI)\";\n\n  const data = [];\n  for (let t = 0; t < priceTimeseries.length; t++) {\n    data.push({\n      [keyHorizontal]: t,\n      [keyVerticalLeft]: priceTimeseries[t] || 0,\n      [keyVerticalRight]: withdrawFeeTimeseries[t] || 0\n    });\n  }\n\n  // Chart components\n\n  const theme: any = useTheme();\n\n  function renderColorfulLegendText(value: string) {\n    return <span style={{ color: theme.palette.text.secondary }}>{value}</span>;\n  }\n\n  const formatter = (n: number) => (+n.toPrecision(3)).toLocaleString();\n\n  function ReferenceLabel(props: any) {\n    const { textAnchor, viewBox, text } = props;\n    return (\n      <text\n        x={viewBox.x + 10}\n        y={viewBox.y - 10}\n        fill={theme.palette.text.secondary}\n        textAnchor={textAnchor}\n      >\n        {text}\n      </text>\n    );\n  }\n\n  return (\n    <ResponsiveContainer debounce={1}>\n      <AreaChart\n        width={0}\n        height={400}\n        data={data}\n        margin={{\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          dataKey={keyHorizontal}\n          tick={{ fill: theme.palette.text.secondary }}\n          stroke={theme.palette.text.secondary}\n          ticks={[\n            ...linspace({\n              to: priceTimeseries.length,\n              steps: 4\n            }).map(Math.floor),\n            priceTimeseries.length - 1\n          ]}\n        />\n\n        {/* Price time evolution */}\n        <YAxis\n          yAxisId=\"left\"\n          domain={[0, Math.max(...priceTimeseries, p1 * 1.25)]}\n          tickFormatter={formatter}\n          tick={{ fill: theme.palette.text.secondary }}\n          stroke={theme.palette.text.secondary}\n        />\n\n        {/* Capital collected from withdraw fees - AXIS */}\n        <YAxis\n          yAxisId=\"right\"\n          // domain={[\n          //   Math.floor(Math.min(...withdrawFeeTimeseries)),\n          //   Math.ceil(Math.max(...withdrawFeeTimeseries))\n          // ]}\n          orientation=\"right\"\n          tick={{ fill: theme.palette.text.secondary }}\n          stroke={theme.palette.text.secondary}\n        />\n\n        <Tooltip formatter={value => Number(value)} />\n\n        <Area\n          isAnimationActive={false}\n          yAxisId=\"left\"\n          type=\"monotone\"\n          dataKey={keyVerticalLeft}\n          stroke={theme.palette.primary.main}\n          fill={theme.palette.primary.main}\n        />\n        <ReferenceLine\n          y={p0}\n          yAxisId=\"left\"\n          stroke={theme.palette.primary.main}\n          strokeDasharray=\"9 0\"\n          label={<ReferenceLabel text=\"Hatch sale price\" />}\n        />\n        <ReferenceLine\n          y={p1}\n          yAxisId=\"left\"\n          stroke={theme.palette.primary.main}\n          strokeDasharray=\"9 0\"\n          label={<ReferenceLabel text=\"After hatch price\" />}\n        />\n\n        {/* Capital collected from withdraw fees - AREA */}\n        <Area\n          isAnimationActive={false}\n          yAxisId=\"right\"\n          type=\"monotone\"\n          dataKey={keyVerticalRight}\n          stroke={theme.palette.secondary.main}\n          fill={theme.palette.secondary.main}\n        />\n\n        {/* <ReferenceLine\n          x={R0}\n          stroke=\"#90a4ae\"\n          strokeDasharray=\"6 3\"\n          label={<ReferenceLabel />}\n        /> */}\n        <Legend formatter={renderColorfulLegendText} />\n      </AreaChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport default PriceSimulationChart;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Fab from \"@material-ui/core/Fab\";\nimport HelpIcon from \"@material-ui/icons/HelpOutline\";\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    marginLeft: \"6px\",\n    fontSize: \"0.9rem\",\n    cursor: \"pointer\",\n    transition: \"opacity ease 150ms\",\n    opacity: 0.2,\n    \"&:hover\": {\n      opacity: 0.85\n    }\n  },\n  typography: {\n    padding: theme.spacing(2)\n  },\n  paper: {\n    backgroundColor: \"#384b59\"\n  }\n}));\n\nexport default function SimplePopover({ text }: { text: any }) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  function handleClick(e: any) {\n    setAnchorEl(e.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  return (\n    <div className={classes.container}>\n      <HelpIcon onClick={handleClick} />\n\n      <Popover\n        PaperProps={{\n          className: classes.paper\n        }}\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\"\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\"\n        }}\n      >\n        <Typography className={classes.typography}>{text}</Typography>\n      </Popover>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useMemo } from \"react\";\n// Material UI\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Fade from \"@material-ui/core/Fade\";\n// Components\nimport Header from \"./Header\";\nimport InputParams from \"./InputParams\";\nimport SupplyVsDemandChart from \"./SupplyVsDemandChart\";\nimport ResultParams from \"./ResultParams\";\nimport PriceSimulationChart from \"./PriceSimulationChart\";\nimport HelpText from \"./HelpText\";\n// Utils\nimport { getLast, getAvg, pause } from \"./utils\";\nimport {\n  getInitialParams,\n  getPriceR,\n  getRandomDeltas,\n  getSlippage,\n  getTxDistribution,\n  getDeltaR_priceGrowth,\n  rv_U\n} from \"./math\";\nimport { throttle } from \"lodash\";\n// General styles\nimport \"./app.css\";\n\nconst headerOffset = 10;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    mainContainer: {\n      \"& > div:not(:last-child)\": {\n        paddingBottom: theme.spacing(3)\n      },\n      \"& > div\": {\n        \"& > div\": {\n          paddingTop: \"0 !important\"\n        }\n      },\n      paddingBottom: theme.spacing(9)\n    },\n    simulationContainer: {\n      minHeight: \"442px\"\n    },\n    paper: {\n      width: \"100%\",\n      height: \"100%\",\n      minHeight: 310,\n      backgroundColor: \"#293640\"\n    },\n    box: {\n      padding: theme.spacing(3, 3),\n      minHeight: 310\n    },\n    boxButton: {\n      padding: theme.spacing(3, 3)\n    },\n    boxHeader: {\n      padding: theme.spacing(3, 3),\n      height: theme.spacing(headerOffset),\n      display: \"flex\",\n      alignItems: \"center\",\n      borderBottom: \"1px solid #313d47\"\n    },\n    boxChart: {\n      width: \"100%\",\n      height: \"100%\",\n      minHeight: 310,\n      maxHeight: 350,\n      padding: theme.spacing(3, 3),\n      // Correct the chart excessive margins\n      paddingRight: \"5px\",\n      paddingLeft: \"5px\"\n    },\n    boxPlaceholder: {\n      padding: theme.spacing(3, 3),\n      display: \"flex\",\n      height: \"100%\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      color: theme.palette.text.secondary,\n      opacity: 0.4\n    },\n    header: {\n      backgroundColor: \"#0b1216\",\n      color: \"#f8f8f8\",\n      textAlign: \"center\",\n      padding: theme.spacing(3, 0, 6 + headerOffset),\n      marginBottom: -theme.spacing(headerOffset)\n    },\n    button: {\n      background: \"linear-gradient(290deg, #2ad179, #4ab47c)\",\n      color: \"white\"\n    }\n  })\n);\n\nexport default function App() {\n  const [curveParams, setCurveParams] = useState({\n    d0: 1e6, // Initial raise, d0 (DAI)\n    theta: 0.35, // fraction allocated to reserve (.)\n    p0: 0.1, // Hatch sale price p0 (DAI / token)\n    p1: 0.3, // Return factor (.)\n    wFee: 0.05 // friction coefficient (.)\n  });\n\n  const { d0, theta, p0, p1, wFee } = curveParams;\n\n  /**\n   * Throttle the curve update to prevent the expensive chart\n   * to re-render too often\n   */\n  const setCurveParamsThrottle = useMemo(\n    () => throttle(setCurveParams, 250),\n    []\n  );\n\n  // Simulation results\n  const {\n    k, // Invariant power kappa (.)\n    R0, // Initial reserve (DAI)\n    S0, // initial supply of tokens (token)\n    V0 // invariant coef\n  } = getInitialParams({\n    d0,\n    theta,\n    p0,\n    p1\n  });\n\n  const [priceTimeseries, setPriceTimeseries] = useState([0]);\n  const [withdrawFeeTimeseries, setWithdrawFeeTimeseries] = useState([0]);\n  const [totalReserve, setTotalReserve] = useState(R0);\n  const [withdrawCount, setWithdrawCount] = useState(0);\n  const [avgSlippage, setAvgSlippage] = useState(0);\n  const [avgTxSize, setAvgTxSize] = useState(0);\n  // Simulation state variables\n  const [simulationActive, setSimulationActive] = useState(false);\n  const [simulationRunning, setSimulationRunning] = useState(false);\n\n  useEffect(() => {\n    setSimulationActive(false);\n  }, [curveParams]);\n\n  // #### TEST: Immediate simulation\n\n  async function startSimulation() {\n    // If there's a simulation already active, clear it\n    clearSimulation();\n    await pause(0);\n\n    // Start simulation by setting it to active\n    setSimulationActive(true);\n  }\n\n  function clearSimulation() {\n    // Stop simulation\n    setSimulationActive(false);\n    // Clear simulation variables\n    setWithdrawCount(0);\n    setPriceTimeseries([0]);\n    setWithdrawFeeTimeseries([0]);\n    setAvgSlippage(0);\n  }\n\n  useEffect(() => {\n    let canContinueSimulation = true;\n    async function simulateRandomDelta() {\n      const R_t: number[] = [R0];\n      const p_t: number[] = [getPriceR({ R: R0, V0, k })];\n      const wFee_t: number[] = [0];\n      const slippage_t: number[] = [];\n      const avgTxSize_t: number[] = [];\n\n      // Random walk\n      const numSteps = 52;\n\n      // numSteps = 52 take 8ms to run\n      setSimulationRunning(true);\n      for (let t = 0; t < numSteps; t++) {\n        const txsWeek = Math.ceil(t < 5 ? rv_U(0, 5) : rv_U(5, 2 * t));\n        const priceGrowth = rv_U(0.99, 1.03);\n\n        const R = getLast(R_t);\n        const deltaR = getDeltaR_priceGrowth({ R, k, priceGrowth });\n\n        const R_next = R + deltaR;\n\n        const txs = getTxDistribution({ sum: deltaR, num: txsWeek });\n        // Compute slippage\n        const slippage = getAvg(\n          txs.map(txR => getSlippage({ R, deltaR: txR, V0, k }))\n        );\n        const txsWithdraw = txs.filter(tx => tx < 0);\n        const wFees = -wFee * txsWithdraw.reduce((t, c) => t + c, 0);\n        const _avgTxSize =\n          txs.reduce((t, c) => t + Math.abs(c), 0) / txs.length;\n\n        R_t.push(R_next);\n        p_t.push(getPriceR({ R: R_next, V0, k }));\n        slippage_t.push(slippage);\n        avgTxSize_t.push(_avgTxSize);\n        wFee_t.push(getLast(wFee_t) + wFees);\n        setWithdrawCount(c => c + txsWithdraw.length);\n\n        // Stop the simulation if it's no longer active\n        if (!simulationActive || !canContinueSimulation) break;\n      }\n\n      setPriceTimeseries(p_t);\n      setWithdrawFeeTimeseries(wFee_t);\n      setAvgSlippage(getAvg(slippage_t));\n      setAvgTxSize(getAvg(avgTxSize_t));\n      setTotalReserve(getLast(R_t));\n\n      // Make this run non-UI blocking\n      await pause(5);\n\n      setSimulationRunning(false);\n    }\n\n    if (simulationActive) simulateRandomDelta();\n    // Return an \"unsubscribe\" function that halts the run\n    return () => {\n      canContinueSimulation = false;\n    };\n  }, [simulationActive]);\n\n  const resultFields = [\n    {\n      label: `Total reserve`,\n      value: (+totalReserve.toPrecision(3)).toLocaleString() + \" DAI\"\n    },\n    {\n      label: `Funds generated from initial hatch`,\n      value: Math.round(d0 * theta).toLocaleString() + \" DAI\"\n    },\n    {\n      label: `Funds generated from withdraw fees (${withdrawCount} txs)`,\n      value:\n        (+getLast(withdrawFeeTimeseries).toPrecision(3)).toLocaleString() +\n        \" DAI\"\n    },\n    {\n      label: `Average slippage (avg tx size ${Math.round(\n        avgTxSize\n      ).toLocaleString()} DAI)`,\n      value: +(100 * avgSlippage).toFixed(3) + \"%\"\n    }\n  ];\n\n  const classes = useStyles();\n  return (\n    <>\n      <header className={classes.header}>\n        <Container fixed>\n          <Header />\n        </Container>\n      </header>\n\n      <Container fixed className={classes.mainContainer}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12} md={6} lg={4}>\n            <Paper className={classes.paper}>\n              <Box className={classes.boxHeader}>\n                <Typography variant=\"h6\">Curve Design</Typography>\n                <HelpText\n                  text={\n                    <span>\n                      Description of the different parameters <br />\n                      Initial raise: Lorem ipsum <br />\n                      Allocation to project: Lorem ipsum <br />\n                      Initial token price: Lorem ipsum <br />\n                      Return factor: Lorem ipsum <br />\n                      Withdrawl fee: Lorem ipsum\n                    </span>\n                  }\n                />\n              </Box>\n\n              <Box className={classes.box}>\n                <InputParams setCurveParams={setCurveParamsThrottle} />\n              </Box>\n            </Paper>\n          </Grid>\n\n          <Grid item xs={12} sm={12} md={6} lg={8}>\n            <Paper className={classes.paper}>\n              <Box className={classes.boxHeader}>\n                <Typography variant=\"h6\">Preview</Typography>\n                <HelpText\n                  text={<span>Preview of the token bonding curve</span>}\n                />\n              </Box>\n\n              <Box className={classes.boxChart}>\n                <SupplyVsDemandChart theta={theta} d0={d0} p0={p0} p1={p1} />\n              </Box>\n            </Paper>\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={12}>\n            <Paper>\n              <Box className={classes.boxHeader}>\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                >\n                  <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    onClick={startSimulation}\n                    disabled={simulationRunning}\n                  >\n                    Run simulation\n                  </Button>\n                </Grid>\n              </Box>\n            </Paper>\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3} className={classes.simulationContainer}>\n          {simulationActive ? (\n            <>\n              <Grid item xs={12} sm={12} md={6} lg={8}>\n                <Paper className={classes.paper}>\n                  <Box className={classes.boxHeader}>\n                    <Typography variant=\"h6\">Simulation</Typography>\n                    <HelpText\n                      text={<span>Some context about this simulation</span>}\n                    />\n                  </Box>\n\n                  <Box className={classes.boxChart}>\n                    <PriceSimulationChart\n                      priceTimeseries={priceTimeseries}\n                      withdrawFeeTimeseries={withdrawFeeTimeseries}\n                      p0={p0}\n                      p1={p1}\n                    />\n                  </Box>\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} sm={12} md={6} lg={4}>\n                <Paper className={classes.paper}>\n                  <Box className={classes.boxHeader}>\n                    <Typography variant=\"h6\">Results</Typography>\n                    <HelpText\n                      text={\n                        <span>Explanation of what do this results mean</span>\n                      }\n                    />\n                  </Box>\n\n                  <Box className={classes.box}>\n                    <ResultParams resultFields={resultFields} />\n                  </Box>\n                </Paper>\n              </Grid>\n            </>\n          ) : (\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Box className={classes.boxPlaceholder}>\n                  <Typography variant=\"h6\">\n                    Run a simulation to see results\n                  </Typography>\n                </Box>\n              </Paper>\n            </Grid>\n          )}\n        </Grid>\n      </Container>\n    </>\n  );\n}\n","import red from \"@material-ui/core/colors/red\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: {\n      main: \"#2ecd79\"\n    },\n    secondary: {\n      main: \"#116be0\"\n    },\n    error: {\n      main: red.A400\n    },\n    background: {\n      default: \"#fff\",\n      paper: \"#293640\"\n    },\n    text: {\n      primary: \"#fff\",\n      secondary: \"#9aa3ad\"\n    }\n  },\n  typography: {\n    h6: {\n      fontWeight: 400\n    }\n  }\n});\n\nconsole.log(theme);\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}