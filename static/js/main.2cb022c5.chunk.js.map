{"version":3,"sources":["Header.tsx","PrettoSlider.tsx","TextWithPopover.tsx","InputParams.tsx","parametersDescriptions.ts","CurveDesignInputParams.tsx","HelpText.tsx","InputParamBig.tsx","SimulationInputParams.tsx","utils.ts","math.ts","SupplyVsDemandChart.tsx","DotsLoader.tsx","ResultParams.tsx","PriceSimulationChart.tsx","App.tsx","theme.tsx","index.tsx"],"names":["cadCadLink","useStyles","makeStyles","theme","createStyles","title","subtitle","color","palette","text","secondary","margin","spacing","subsubtitle","opacity","lightBulb","verticalAlign","marginRight","link","primary","main","logoContainer","display","alignItems","justifyContent","marginBottom","logo","width","logoText","fontSize","fontWeight","Header","classes","className","src","alt","Typography","variant","Link","href","withStyles","root","height","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","markLabel","top","Slider","container","cursor","transition","popoverContainer","padding","paddingBottom","borderBottom","paper","maxWidth","breakpoints","values","md","descriptionBody","TextWithPopover","content","popoverText","React","useState","anchorEl","setAnchorEl","handleClose","open","Boolean","id","undefined","aria-describedby","onClick","event","currentTarget","Popover","PaperProps","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Box","leftContainer","centerContainer","listBoxContainer","listBox","paddingRight","slider","NumberFormatCustom","props","inputRef","onChange","prefix","suffix","other","getInputRef","onValueChange","target","value","thousandSeparator","InputParams","inputFields","onChangeCommited","map","label","description","setter","min","max","step","format","toText","toNum","sanitizeInput","num","isNaN","Grid","key","item","xs","TextField","e","parseFloat","InputProps","inputComponent","disableUnderline","inputProps","PrettoSlider","valueLabelDisplay","aria-label","defaultValue","_","newValue","Number","onChangeCommitted","valueLabelFormat","replace","parameterDescriptions","theta","name","p0","p1","wFee","vHalflife","d0","supplyVsDemandChartDescription","simulationChartDescription","simulationParameterDescriptions","price","floorPrice","totalRaised","resultParameterDescriptions","totalReserve","initialHatchFunds","exitTributes","slippage","CurveDesignInputParams","curveParams","setCurveParams","setTheta","setP0","setP1","setWFee","setVHalflife","useEffect","maxReturnRate","n","Math","round","String","toFixed","newP0","parseInt","params","descriptionContainer","descriptionTitle","descriptionPadding","SimplePopover","table","body","InputParamBig","sm","lg","SimulationInputParams","setD0","floor","linspace","from","to","steps","arr","x","push","getLinspaceTicks","data","desiredPoints","length","getLast","a","getAvg","reduce","t","c","abs","pause","ms","Promise","r","setTimeout","getUnits","biggestNum","scaling","unit","getInitialParams","k","R0","S0","V0","getR","S","getS","R","getMinPrice","H","myP","getPriceR","getSlippage","deltaR","realizedPrice","spotPrice","getDeltaR_priceGrowth","priceGrowth","getTxDistribution","sum","mean","off","spread","i","randn_bm","vest_tokens","week","halflife","cliff","rv_U","random","u","v","sqrt","log","cos","PI","getMedian","mid","nums","sort","b","isAnimationActive","keyHorizontal","keyVertical","tooltip","SupplyVsDemandChart","R0_round","f","useTheme","formatter","toPrecision","toLocaleString","debounce","right","bottom","stroke","strokeOpacity","interval","dataKey","tickFormatter","tick","fill","ticks","d","domain","payload","supply","reserve","toolTipData","_unit","type","fillOpacity","strokeWidth","strokeDasharray","textAnchor","viewBox","y","style","DotsLoader","valueFooter","ResultParams","resultFields","simulationDuration","process","setIsAnimationActive","timeout","clearTimeout","keyVerticalLeft","keyVerticalLeft2","keyVerticalRight","p1LineText","p0LineText","yLeftColor","yRightColor","referenceLineColor","PriceSimulationChart","priceTimeseries","totalFundsRaisedTimeseries","floorpriceTimeseries","totalFundsMin","totalFundsMax","slice","totalFundsRange","daiFormatter","fundsFormatterShort","ReferenceLabel","yAxisId","orientation","funds","weekNum","animationDuration","dark","mainContainer","paddingTop","simulationContainer","minHeight","box","boxButton","boxHeader","boxBorderBottom","initialRaise","boxChart","maxHeight","paddingLeft","boxPlaceholder","header","textAlign","button","background","d0Container","d0Number","d0Slidder","createMuiTheme","light","error","red","A400","default","typography","h6","console","ReactDOM","render","ThemeProvider","CssBaseline","setCurveParamsThrottle","useMemo","throttle","setPriceTimeseries","withdrawFeeTimeseries","setWithdrawFeeTimeseries","setFloorpriceTimeseries","setTotalReserve","withdrawCount","setWithdrawCount","avgSlippage","setAvgSlippage","avgTxSize","setAvgTxSize","simulationActive","setSimulationActive","simulationRunning","setSimulationRunning","clearSimulation","canContinueSimulation","R_t","S_t","p_t","wFee_t","slippage_t","avgTxSize_t","H_t","floorprice_t","numSteps","txsWeek","u_lower","R_ratio","R_next","txs","txR","txsWithdraw","filter","tx","wFees","H_next","S_next","floorprice_next","_avgTxSize","simulateRandomDelta","Container","fixed","Paper","direction","justify","Button","disabled","Object","document","querySelector"],"mappings":"0YAKMA,EACJ,0GAEIC,EAAYC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,MAAO,GAGPC,SAAU,CACRC,MAAOJ,EAAMK,QAAQC,KAAKC,UAC1BC,OAAQR,EAAMS,QAAQ,EAAG,EAAG,IAE9BC,YAAa,CACXN,MAAOJ,EAAMK,QAAQC,KAAKC,UAC1BI,QAAS,IAEXC,UAAW,CACTC,cAAe,SACfC,YAAad,EAAMS,QAAQ,IAE7BM,KAAM,CACJX,MAAOJ,EAAMK,QAAQW,QAAQC,MAE/BC,cAAe,CACbC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,aAActB,EAAMS,QAAQ,IAE9Bc,KAAM,CACJC,MAAO,OACPV,YAAa,OAEfW,SAAU,CACRN,QAAS,SACTO,SAAU,SACVC,WAAY,SAKH,SAASC,IACtB,IAAMC,EAAU/B,IAChB,OACE,oCACE,yBAAKgC,UAAWD,EAAQX,eACtB,yBAAKa,IAAI,gBAAgBD,UAAWD,EAAQN,KAAMS,IAAI,SACtD,kBAACC,EAAA,EAAD,CAAYH,UAAWD,EAAQJ,UAA/B,kBAGF,kBAACQ,EAAA,EAAD,CAAYH,UAAWD,EAAQ3B,MAAOgC,QAAQ,MAA9C,kCAIA,kBAACD,EAAA,EAAD,CAAYH,UAAWD,EAAQ1B,UAA/B,gDAGA,kBAAC8B,EAAA,EAAD,CAAYH,UAAWD,EAAQnB,aAA/B,2BAC0B,kBAACyB,EAAA,EAAD,CAAMC,KAAMvC,GAAZ,UAD1B,oB,6DC3DSwC,cAAW,CACxBC,KAAM,CACJC,OAAQ,GAEVC,MAAO,CACLD,OAAQ,GACRf,MAAO,GACPiB,gBAAiB,OACjBC,OAAQ,yBACRC,WAAY,EACZC,YAAa,GACb,2BAA4B,CAC1BC,UAAW,YAGfC,OAAQ,GACRC,WAAY,CACVC,KAAM,oBAERC,MAAO,CACLV,OAAQ,EACRW,aAAc,GAEhBC,KAAM,CACJZ,OAAQ,EACRW,aAAc,GAEhBE,UAAW,CACTC,IAAK,KA5BMhB,CA8BZiB,K,SC3BGxD,EAAYC,YAAW,SAAAC,GAAK,YAAK,CACrCuD,UAAW,CACTnD,MAAOJ,EAAMK,QAAQC,KAAKC,UAC1BY,QAAS,OACTO,SAAU,SACV8B,OAAQ,UACRC,WAAY,mBACZ,UAAW,CACTrD,MAAO,YAGXsD,iBAAkB,CAChBC,QAAS3D,EAAMS,QAAQ,GACvB,yBAA0B,CACxBmD,cAAe5D,EAAMS,QAAQ,GAC7Ba,aAActB,EAAMS,QAAQ,GAC5BoD,aAAc,sBAGlBC,OAAK,GACHrB,gBAAiB,UACjBsB,SAAwC,GAA9B/D,EAAMgE,YAAYC,OAAOC,IAFhC,sDAG+BlE,EAAMgE,YAAYC,OAAOC,GAHxD,OAGkE,CACnEH,SAAU,SAJT,wBAMM/D,EAAMS,QAAQ,KANpB,GAQL0D,gBAAiB,CACf/D,MAAO,cAII,SAASgE,EAAT,GAMX,IALFC,EAKC,EALDA,QACAC,EAIC,EAJDA,YAKMzC,EAAU/B,IADf,EAE+ByE,IAAMC,SAAS,MAF9C,mBAEMC,EAFN,KAEgBC,EAFhB,KAQD,SAASC,IACPD,EAAY,MAGd,IAAME,EAAOC,QAAQJ,GACfK,EAAKF,EAAO,sBAAmBG,EAErC,OACE,yBAAKjD,UAAWD,EAAQ0B,WACtB,yBAAKyB,mBAAkBF,EAAIG,QAb/B,SAAqBC,GACnBR,EAAYQ,EAAMC,iBAad,kBAAClD,EAAA,EAAD,KAAaoC,IAEf,kBAACe,EAAA,EAAD,CACEC,WAAY,CACVvD,UAAWD,EAAQiC,OAErBgB,GAAIA,EACJF,KAAMA,EACNH,SAAUA,EACVa,QAASX,EACTM,QAASN,EACTY,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,WAGd,kBAACE,EAAA,EAAD,CAAK7D,UAAWD,EAAQ6B,kBACtB,kBAACzB,EAAA,EAAD,KAAaoC,GACb,kBAACpC,EAAA,EAAD,CAAYH,UAAWD,EAAQsC,iBAC5BG,MC5Eb,IAAMxE,EAAYC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACXqC,KAAM,CACJ9B,OAAQR,EAAMS,QAAQ,EAAG,EAAG,IAE9BG,UAAW,CACTC,cAAe,SACfC,YAAad,EAAMS,QAAQ,IAE7BmF,cAAe,CACbxF,MAAOJ,EAAMK,QAAQC,KAAKC,WAE5BsF,gBAAiB,GAGjBC,iBAAkB,CAChB,2BAA4B,CAC1BlC,cAAe,OACftC,aAAc,OACduC,aAAc,sBAGlBkC,QAAS,CACP,UAAW,CACT5E,QAAS,OACTC,WAAY,SACZ,MAAO,CACLE,aAAc,IAGlB,2BAA4B,CAC1B0E,aAAc,SAGlBC,OAAQ,CACN7F,MAAOJ,EAAMK,QAAQW,QAAQC,UAKnC,SAASiF,EAAmBC,GAAa,IAC/BC,EAAiDD,EAAjDC,SAAUC,EAAuCF,EAAvCE,SAAUC,EAA6BH,EAA7BG,OAAQC,EAAqBJ,EAArBI,OAAWC,EADT,YACmBL,EADnB,2CAGtC,OACE,kBAAC,IAAD,iBACMK,EADN,CAEEC,YAAaL,EACbM,cAAe,SAAAzC,GACboC,EAAS,CAAEM,OAAQ,CAAEC,MAAO3C,EAAO2C,UAErCC,mBAAiB,EACjBP,OAAQA,EACRC,OAAQA,KAKC,SAASO,EAAT,GAMX,IALFC,EAKC,EALDA,YACAC,EAIC,EAJDA,iBAKMnF,EAAU/B,IAEhB,OACE,yBAAKgC,UAAWD,EAAQiE,kBACrBiB,EAAYE,IACX,YAaO,IAZLC,EAYI,EAZJA,MACAC,EAWI,EAXJA,YACAP,EAUI,EAVJA,MACAQ,EASI,EATJA,OACAC,EAQI,EARJA,IACAC,EAOI,EAPJA,IACAC,EAMI,EANJA,KACAjB,EAKI,EALJA,OACAC,EAII,EAJJA,OACAiB,EAGI,EAHJA,OACAC,EAEI,EAFJA,OACAC,EACI,EADJA,MAEA,SAASC,IAAgC,IAAlBC,EAAiB,uDAAH,EAC/BC,MAAMD,KAAMA,EAAM,GAClBA,EAAMN,EAAKM,EAAMN,EACZM,EAAMP,IAAKO,EAAMP,GAC1BD,EAAOQ,GAGT,OACE,kBAACE,EAAA,EAAD,CAAMC,IAAKb,EAAO3D,WAAS,EAAC9C,QAAS,EAAGqB,UAAWD,EAAQkE,SACzD,kBAAC+B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGnG,UAAWD,EAAQ+D,eACnC,kBAACxB,EAAD,CAAiBC,QAAS6C,EAAO5C,YAAa6C,KAGhD,kBAACW,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGnG,UAAWD,EAAQgE,iBACnC,kBAACqC,EAAA,EAAD,CACE7B,SAAU,SAAA8B,GACRR,EACED,EAAQA,EAAMS,EAAExB,OAAOC,OAASwB,WAAWD,EAAExB,OAAOC,QAEtDI,KAEFqB,WAAY,CACVC,eAAgBpC,EAChBqC,kBAAkB,EAClBC,WAAY,CACVlC,SACAC,WAGJK,MAAOa,EAASA,EAAOb,GAASA,KAIpC,kBAACkB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACQ,EAAD,CACE3G,UAAWD,EAAQoE,OACnByC,kBAAkB,OAClBC,aAAYzB,EACZ0B,aAAchC,EACdP,SAAU,SAACwC,EAAGC,GAAJ,OAAiBnB,EAAcoB,OAAOD,KAChDE,kBAAmBhC,EACnBJ,MAAOA,EACPS,IAAKA,EACLC,IAAKA,EACLC,KAAMA,EACN0B,iBAAkB,SAAArC,GAAK,OAAIY,EAAOZ,GAAOsC,QAAQ,IAAK,YCrIjE,IAAMC,EAA2C,CACtDC,MAAO,CACLC,KAAM,gCACN/I,KACE,0JAEJgJ,GAAI,CACFD,KAAM,cACN/I,KAAM,yDAERiJ,GAAI,CACFF,KAAM,mBACN/I,KACE,8GAEJkJ,KAAM,CACJH,KAAM,eACN/I,KACE,8IAEJmJ,UAAW,CACTJ,KAAM,oBACN/I,KACE,yNAEJoJ,GAAI,CACFL,KAAM,cACN/I,KAAM,wDAIGqJ,EACX,0TAEWC,EACX,wYAEWC,EAAqD,CAChEC,MAAO,CACLT,KAAM,QACN/I,KAAM,iCAERyJ,WAAY,CACVV,KAAM,cACN/I,KACE,4IAEJ0J,YAAa,CACXX,KAAM,qBACN/I,KAAM,yDAIG2J,EAAiD,CAC5DC,aAAc,CACZb,KAAM,0BACN/I,KAAM,uEAER6J,kBAAmB,CACjBd,KAAM,mCACN/I,KAAM,+DAER8J,aAAc,CACZf,KAAM,qCACN/I,KACE,uFAEJ+J,SAAU,CACRhB,KAAM,kBACN/I,KACE,0H,4NCrES,SAASgK,EAAT,GAMX,IALFC,EAKC,EALDA,YACAC,EAIC,EAJDA,eAIC,EACyBhG,mBAAS,KADlC,mBACM4E,EADN,KACaqB,EADb,OAEmBjG,mBAAS,IAF5B,mBAEM8E,EAFN,KAEUoB,EAFV,OAGmBlG,mBAAS,IAH5B,mBAGM+E,EAHN,KAGUoB,EAHV,OAIuBnG,mBAAS,KAJhC,mBAIMgF,EAJN,KAIYoB,EAJZ,OAKiCpG,mBAAS,IAL1C,mBAKMiF,EALN,KAKiBoB,EALjB,KAODC,oBAAU,WACRL,EAASF,EAAYnB,OACrBsB,EAAMH,EAAYjB,IAClBqB,EAAMJ,EAAYhB,IAClBqB,EAAQL,EAAYf,MACpBqB,EAAaN,EAAYd,YACxB,CAACc,IAmBJ,IAAMQ,EAAgB,GAEhBhE,EAAqC,CACzC,CACEG,MAAOiC,EAAsBC,MAAMC,KACnClC,YAAagC,EAAsBC,MAAM9I,KACzCsG,MAAOwC,EACPhC,OAAQqD,EACRpD,IAAK,EACLC,IAAK,GACLC,KAAM,IACNhB,OAAQ,IACRiB,OAAQ,SAACwD,GAAD,gBAAkBC,KAAKC,MAAM,IAAMF,GAAnC,MACRvD,OAAQ,SAACuD,GAAD,OAAeG,SAAa,IAAJH,GAASI,QAAQ,KACjD1D,MAAO,SAACsD,GAAD,MAA+B,IAAhB5C,WAAW4C,KAEnC,CACE9D,MAAM,GAAD,OAAKiC,EAAsBG,GAAGD,KAA9B,gBACLlC,YAAagC,EAAsBG,GAAGhJ,KACtCsG,MAAO0C,EACPlC,OArCJ,SAAgBiE,GACdX,EAAMW,GACF9B,EAAK8B,EAAOV,EAAMU,GACb9B,EAAK8B,EAAQN,GAAeJ,EAAMU,EAAQN,IAmCjD1D,IAAK,IACLC,IAAK,EACLC,KAAM,IACNE,OAAQ,SAACuD,GAAD,OAAeG,QAAQH,EAAEI,QAAQ,KACzC1D,MAAO,SAACsD,GAAD,OAAe5C,WAAW4C,IACjCxD,OAAQ,SAACwD,GAAD,iBAAmBA,KAE7B,CACE9D,MAAM,GAAD,OAAKiC,EAAsBI,GAAGF,KAA9B,gBACLlC,YAAagC,EAAsBI,GAAGjJ,KACtCsG,MAAO2C,EACPnC,OAAQuD,EACRtD,IAAKiC,GAAM,GACXhC,IAAKyB,QAAQgC,EAAgBzB,GAAI8B,QAAQ,IACzC7D,KAAM,IACNE,OAAQ,SAACuD,GAAD,OAAeG,QAAQH,EAAEI,QAAQ,KACzC1D,MAAO,SAACsD,GAAD,OAAe5C,WAAW4C,IACjCxD,OAAQ,SAACwD,GAAD,iBAAmBA,KAE7B,CACE9D,MAAOiC,EAAsBK,KAAKH,KAClClC,YAAagC,EAAsBK,KAAKlJ,KACxCsG,MAAO4C,EACPpC,OAAQwD,EACRvD,IAAK,EACLC,IAAK,GACLC,KAAM,KACNhB,OAAQ,IACRiB,OAAQ,SAACwD,GAAD,kBAAoB,IAAMA,GAAGI,QAAQ,GAArC,MACR3D,OAAQ,SAACuD,GAAD,OAAeG,SAAa,IAAJH,GAASI,QAAQ,KACjD1D,MAAO,SAACsD,GAAD,MAA+B,IAAhB5C,WAAW4C,KAEnC,CACE9D,MAAM,GAAD,OAAKiC,EAAsBM,UAAUJ,KAArC,YACLlC,YAAagC,EAAsBM,UAAUnJ,KAC7CsG,MAAO6C,EACPrC,OAAQyD,EACRxD,IAAK,EACLC,IAAK,IACLC,KAAM,EACNhB,OAAQ,GACRiB,OAAQ,SAACwD,GAAD,OAAeG,OAAOF,KAAKC,MAAMF,KACzCvD,OAAQ,SAACuD,GAAD,OAAeG,OAAOF,KAAKC,MAAMF,KACzCtD,MAAO,SAACsD,GAAD,OAAeC,KAAKC,MAAMI,SAASN,OAI9C,OACE,kBAAClE,EAAD,CACEC,YAAaA,EACbC,iBAlFJ,WACEwD,EAAe,SAACe,GAAD,O,qVAAA,IACVA,EADU,CAEbnC,QACAE,KACAC,KACAC,OACAC,mB,sBChCA3J,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCuD,UAAW,CACTpC,QAAS,OACTyB,WAAY,MACZlB,SAAU,SACV8B,OAAQ,UACRC,WAAY,qBACZ9C,QAAS,GACT,UAAW,CACTA,QAAS,MAGb+C,iBAAkB,CAChBC,QAAS3D,EAAMS,QAAQ,IAEzBqD,MAAM,aACJrB,gBAAiB,UACjBsB,SAAwC,GAA9B/D,EAAMgE,YAAYC,OAAOC,IAFhC,wCAG+BlE,EAAMgE,YAAYC,OAAOC,GAHxD,OAGkE,CACnEH,SAAU,SAIdyH,qBAAsB,CACpB,2BAA4B,CAC1B5H,cAAe5D,EAAMS,QAAQ,GAC7Ba,aAActB,EAAMS,QAAQ,GAC5BoD,aAAc,qBAEhB,OAAQ,CACNhD,cAAe,MACf8C,QAAS3D,EAAMS,QAAQ,MAG3BgL,iBAAkB,CAChB9H,QAAS3D,EAAMS,QAAQ,KAEzB0D,gBAAiB,CACf/D,MAAO,UACPuD,QAAS3D,EAAMS,QAAQ,KAEzBiL,mBAAoB,CAClB/H,QAAS3D,EAAMS,QAAQ,QAIZ,SAASkL,EAAT,GAUX,IATFrL,EASC,EATDA,KACAJ,EAQC,EARDA,MACA0L,EAOC,EAPDA,MACAC,EAMC,EANDA,KAOMhK,EAAU/B,IADf,EAE+ByE,IAAMC,SAAS,MAF9C,mBAEMC,EAFN,KAEgBC,EAFhB,KAQD,SAASC,IACPD,EAAY,MAGd,IAAME,EAAOC,QAAQJ,GACfK,EAAKF,EAAO,sBAAmBG,EAErC,OACE,yBAAKjD,UAAWD,EAAQ0B,WACtB,kBAAC,IAAD,CAAU0B,QAbd,SAAqBkD,GACnBzD,EAAYyD,EAAEhD,kBAcZ,kBAACC,EAAA,EAAD,CACEC,WAAY,CACVvD,UAAWD,EAAQiC,OAErBgB,GAAIA,EACJF,KAAMA,EACNH,SAAUA,EACVa,QAASX,EACTM,QAASN,EACTY,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,WAGd,kBAACE,EAAA,EAAD,CAAK7D,UAAWD,EAAQ6B,kBACtB,yBAAK5B,UAAWD,EAAQ2J,sBACrBtL,GACC,6BACE,kBAAC+B,EAAA,EAAD,CAAYH,UAAWD,EAAQ4J,kBAC5BvL,IAKN2L,GACC,6BACE,kBAAC5J,EAAA,EAAD,CAAYH,UAAWD,EAAQsC,iBAC5B0H,IAKND,GACC,6BACE,+BACE,+BACGA,EAAM3E,IAAI,gBAAGoC,EAAH,EAAGA,KAAM/I,EAAT,EAASA,KAAT,OACT,wBAAIyH,IAAKsB,GACP,4BACE,kBAACpH,EAAA,EAAD,KAAaoH,IAEf,4BACE,kBAACpH,EAAA,EAAD,CAAYH,UAAWD,EAAQsC,iBAC5B7D,UAUhBA,MCjIb,IAAMR,EAAYC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACXqC,KAAM,CACJ9B,OAAQR,EAAMS,QAAQ,EAAG,EAAG,IAE9BG,UAAW,CACTC,cAAe,SACfC,YAAad,EAAMS,QAAQ,IAE7BmF,cAAe,GAGfC,gBAAiB,GAGjBC,iBAAkB,CAChB,2BAA4B,CAC1BlC,cAAe,OACftC,aAAc,OACduC,aAAc,sBAGlBkC,QAAS,CACP,UAAW,CACT5E,QAAS,OACTC,WAAY,SACZ,MAAO,CACLE,aAAc,IAGlB,2BAA4B,CAC1B0E,aAAc,SAGlBC,OAAQ,CACN7F,MAAOJ,EAAMK,QAAQW,QAAQC,UAKnC,SAASiF,EAAmBC,GAAa,IAC/BC,EAAiDD,EAAjDC,SAAUC,EAAuCF,EAAvCE,SAAUC,EAA6BH,EAA7BG,OAAQC,EAAqBJ,EAArBI,OAAWC,EADT,YACmBL,EADnB,2CAGtC,OACE,kBAAC,IAAD,iBACMK,EADN,CAEEC,YAAaL,EACbM,cAAe,SAAAzC,GACboC,EAAS,CAAEM,OAAQ,CAAEC,MAAO3C,EAAO2C,UAErCC,mBAAiB,EACjBP,OAAQA,EACRC,OAAQA,KAKC,SAASuF,EAAT,GAMX,IALF/E,EAKC,EALDA,YACAC,EAIC,EAJDA,iBAKMnF,EAAU/B,IAEhB,OACE,yBAAKgC,UAAWD,EAAQiE,kBACrBiB,EAAYE,IACX,YAaO,IAZLC,EAYI,EAZJA,MACAC,EAWI,EAXJA,YACAP,EAUI,EAVJA,MACAQ,EASI,EATJA,OACAC,EAQI,EARJA,IACAC,EAOI,EAPJA,IACAC,EAMI,EANJA,KACAjB,EAKI,EALJA,OACAC,EAII,EAJJA,OACAiB,EAGI,EAHJA,OACAC,EAEI,EAFJA,OACAC,EACI,EADJA,MAEA,SAASC,IAAgC,IAAlBC,EAAiB,uDAAH,EAC/BC,MAAMD,KAAMA,EAAM,GAClBA,EAAMN,EAAKM,EAAMN,EACZM,EAAMP,IAAKO,EAAMP,GAC1BD,EAAOQ,GAGT,OACE,kBAACE,EAAA,EAAD,CAAMC,IAAKb,EAAO3D,WAAS,EAAC9C,QAAS,EAAGqB,UAAWD,EAAQkE,SACzD,kBAAC+B,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,EACJ8D,GAAI,EACJ7H,GAAI,EACJ8H,GAAI,EACJlK,UAAWD,EAAQ+D,eAEnB,kBAAC3D,EAAA,EAAD,CAAYC,QAAQ,MAAMgF,GAC1B,kBAAC,EAAD,CAAUhH,MAAOgH,EAAO2E,KAAM1E,KAGhC,kBAACW,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,EACJ8D,GAAI,EACJ7H,GAAI,EACJpC,UAAWD,EAAQgE,iBAEnB,kBAACqC,EAAA,EAAD,CACE7B,SAAU,SAAA8B,GACRR,EACED,EAAQA,EAAMS,EAAExB,OAAOC,OAASwB,WAAWD,EAAExB,OAAOC,QAEtDI,KAEFqB,WAAY,CACVC,eAAgBpC,EAChBqC,kBAAkB,EAClBC,WAAY,CACVlC,SACAC,WAGJK,MAAOa,EAASA,EAAOb,GAASA,KAIpC,kBAACkB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAG8D,GAAI,EAAG7H,GAAI,EAAG8H,GAAI,GAClC,kBAACvD,EAAD,CACE3G,UAAWD,EAAQoE,OACnByC,kBAAkB,OAClBC,aAAYzB,EACZ0B,aAAchC,EACdP,SAAU,SAACwC,EAAGC,GAAJ,OAAiBnB,EAAcoB,OAAOD,KAChDE,kBAAmBhC,EACnBJ,MAAOA,EACPS,IAAKA,EACLC,IAAKA,EACLC,KAAMA,EACN0B,iBAAkB,SAAArC,GAAK,OAAIY,EAAOZ,GAAOsC,QAAQ,IAAK,Y,4NCnJzD,SAAS+C,GAAT,GAMX,IALF1B,EAKC,EALDA,YACAC,EAIC,EAJDA,eAIC,EACmBhG,mBAAS,KAD5B,mBACMkF,EADN,KACUwC,EADV,KAGDpB,oBAAU,WACRoB,EAAM3B,EAAYb,KACjB,CAACa,IASJ,IAAMxD,EAAqC,CACzC,CACEG,MAAM,GAAD,OAAKiC,EAAsBO,GAAGL,MACnClC,YAAagC,EAAsBO,GAAGpJ,KACtCsG,MAAO8C,EACPtC,OAAQ8E,EACR7E,IAAK,IACLC,IAAK,IACLC,KAAM,IACNhB,OAAQ,IACRiB,OAAQ,SAACwD,GAAD,mBAAyB,KAAJA,GAAUI,QAAQ,GAAvC,MACR3D,OAAQ,SAACuD,GAAD,OAAeG,SAAa,KAAJH,GAAUI,QAAQ,KAClD1D,MAAO,SAACsD,GAAD,OAAeC,KAAKkB,MAAsB,IAAhB/D,WAAW4C,OAIhD,OACE,kBAACc,EAAD,CACE/E,YAAaA,EACbC,iBA1BJ,WACEwD,EAAe,SAACe,GAAD,O,qVAAA,IACVA,EADU,CAEb7B,Y,aClBC,SAAS0C,GAAT,GAUL,IAFE,IAAD,IAPDC,YAOC,MAPM,EAON,EANDC,EAMC,EANDA,GACAC,EAKC,EALDA,MAMMC,EAAM,GACHC,EAAIJ,EAAMI,GAAKH,EAAIG,IAAMH,EAAKD,GAAQE,EAAOC,EAAIE,KAAKD,GAC/D,OAAOD,EAMF,SAASG,GAAiBC,EAAgBhF,GAG/C,IAFA,IAAMiF,EAAgB,GAChBtF,GAAQqF,EAAKA,EAAKE,OAAS,GAAKF,EAAK,IAAMhF,EACxC6E,EAAIG,EAAK,GAAIH,EAAIG,EAAKA,EAAKE,OAAS,GAAIL,GAAKlF,EACpDsF,EAAcH,KAAKD,GAIrB,OAFII,EAAcC,OAASlF,EAAM,GAAGiF,EAAcH,KAAKE,EAAKA,EAAKE,OAAS,IAEnED,EAMF,SAASE,GAAQC,GACtB,OAAOA,EAAEA,EAAEF,OAAS,GAMf,SAASG,GAAOD,GACrB,OAAOA,EAAEE,OAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIlC,KAAKoC,IAAID,IAAI,GAAKJ,EAAEF,OAM7C,SAASQ,GAAMC,GACpB,OAAO,IAAIC,QAAQ,SAAAC,GAAC,OAAIC,WAAWD,EAAGF,KAMjC,SAASI,GACdC,GACoC,IAAD,EAGjCA,EAAa,IACT,CAAC,IAAK,KAERA,EAAa,IACX,CAAC,IAAK,KAERA,EAAa,IACX,CAAC,IAAK,KAEN,CAAC,EAAG,IAZyB,mBAanC,MAAO,CAAEC,QAb0B,KAajBC,KAbiB,M,aClD9B,SAASC,GAAT,GAUH,IATFrE,EASC,EATDA,GACAN,EAQC,EARDA,MACAE,EAOC,EAPDA,GAQM0E,EADL,EANDzE,GAOeD,GAAM,EAAIF,GACnB6E,GAAM,EAAI7E,GAASM,EACnBwE,EAAKxE,EAAKJ,EAEhB,MAAO,CAAE0E,IAAGC,KAAIC,KAAIC,GADT,SAAAD,EAAMF,GAAIC,GAIhB,SAASG,GAAT,GAAmE,IAAnDC,EAAkD,EAAlDA,EAAGF,EAA+C,EAA/CA,GAAIH,EAA2C,EAA3CA,EAC5B,OAAO,SAAAK,EAAKL,GAAIG,EAGX,SAASG,GAAT,GAAmE,IAAnDC,EAAkD,EAAlDA,EAAGJ,EAA+C,EAA/CA,GAAIH,EAA2C,EAA3CA,EAC5B,OAAO,KAAP,IAAQG,EAAKI,EAAO,EAAIP,GAInB,SAASQ,GAAT,GAUH,IATFH,EASC,EATDA,EACAI,EAQC,EARDA,EACAN,EAOC,EAPDA,GACAH,EAMC,EANDA,EAOA,GAAIK,IAAMI,EAAG,CACX,IACMC,EAAMC,GAAU,CAAEJ,EADZH,GAAK,CAAEC,IAAGF,KAAIH,MACMG,KAAIH,MACpC,OAAO/C,KAAKoC,IAAIqB,GAIhB,OAAOC,GAAU,CAAEJ,EADNH,GAAK,CAAEC,EAAGA,EAAII,EAAGN,KAAIH,MACNG,KAAIH,MAO7B,SAASW,GAAT,GAAwE,IAAnDJ,EAAkD,EAAlDA,EAAGJ,EAA+C,EAA/CA,GAAIH,EAA2C,EAA3CA,EACjC,OAAQA,EAAC,SAAGO,GAAOP,EAAI,GAAKA,GAArB,SAA2BG,EAAO,EAAIH,GAMxC,SAASY,GAAT,GAUH,IATFL,EASC,EATDA,EACAM,EAQC,EARDA,OACAV,EAOC,EAPDA,GACAH,EAMC,EANDA,EAOMK,EAAC,SAAIF,EAAKI,EAAO,EAAIP,GAErBc,EAAgBD,GADP,SAACV,GAAMI,EAAIM,GAAa,EAAIb,GAAKK,GAE1CU,EAAYJ,GAAU,CAAEJ,IAAGJ,KAAIH,MACrC,OAAO/C,KAAKoC,IAAIyB,EAAgBC,GAAaA,EAQxC,SAASC,GAAT,GAQH,IAPFT,EAOC,EAPDA,EACAP,EAMC,EANDA,EACAiB,EAKC,EALDA,YAMA,OAAQV,EAAD,SAAMU,EAAW,SAAGV,EAAM,EAAI,EAAIP,GAAQA,IAAM,EAAIA,IAUtD,SAASkB,GAAT,GAYL,IAJE,IAPFC,EAOC,EAPDA,IACAvH,EAMC,EANDA,IAOMwH,EAAOD,EAAMvH,EACbyH,EAAMD,EAFX,EALDE,OAQM7C,EAAc,GACX8C,EAAI,EAAGA,EAAI3H,EAAK2H,IACvB9C,EAAEC,KAAK8C,GAASJ,EAAOC,EAAKD,EAAOC,IAErC,OAAO5C,EAGF,SAASgD,GAAT,GAUH,IATFC,EASC,EATDA,KACAjB,EAQC,EARDA,EACAkB,EAOC,EAPDA,SASA,OAAID,EAFH,EANDE,MASS,EAKAnB,GAAK,EAFO,SAAG,GAAQ,EAAIkB,IAW/B,SAASE,GAAKxI,EAAaC,GAChC,OAAO2D,KAAK6E,UAAYxI,EAAMD,GAAOA,EAOvC,SAASmI,GAASnI,EAAaC,GAG7B,IAFA,IAAIyI,EAAI,EACNC,EAAI,EACO,IAAND,GAASA,EAAI9E,KAAK6E,SACzB,KAAa,IAANE,GAASA,EAAI/E,KAAK6E,SACzB,IAAIlI,EAAMqD,KAAKgF,MAAM,EAAMhF,KAAKiF,IAAIH,IAAM9E,KAAKkF,IAAI,EAAMlF,KAAKmF,GAAKJ,GAMnE,QAJApI,EAAMA,EAAM,GAAO,IACT,GAAKA,EAAM,KAAGA,EAAM4H,GAASnI,EAAKC,IAC5CM,GAAON,EAAMD,EACbO,GAAOP,EAMF,SAASgJ,GAAU7D,GACxB,IAAM8D,EAAMrF,KAAKkB,MAAMK,EAAIM,OAAS,GAC9ByD,EAAO,aAAI/D,GAAKgE,KAAK,SAACxD,EAAGyD,GAAJ,OAAUzD,EAAIyD,IACzC,OAAOjE,EAAIM,OAAS,IAAM,EAAIyD,EAAKD,IAAQC,EAAKD,EAAM,GAAKC,EAAKD,IAAQ,E,cCnKpEI,IAAoB,EACpBC,GAAgB,IAChBC,GAAc,qCAEd9Q,GAAYC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACX4Q,QAAS,CACPnO,OAAQ,oBACRD,gBAAiB,UACjBkB,QAAS3D,EAAMS,QAAQ,GACvBL,MAAO,eA0KE0Q,OArKf,YA8CE,IApCE,IATF1H,EASC,EATDA,MASC,EAaG2E,GAAiB,CACnBrE,GAdD,EARDA,GAuBEN,QACAE,GAhBD,EAPDA,GAwBEC,GAjBD,EANDA,KAeEyE,EATD,EASCA,EACAC,EAVD,EAUCA,GACAC,EAXD,EAWCA,GACAC,EAZD,EAYCA,GAOI4C,EAAW9F,KAAKC,MAAM+C,GAItB+C,EAHS,SAACzC,GAAD,OAAeL,EAAE,SAAIK,EAAIwC,EAAc,EAAI/C,IAKpD1B,EAAK,EAAIyE,EAETxJ,EAAO0D,KAAKC,OAAOoB,EAHZ,GAGW,KA3BvB,EAiCyBqB,GADV1C,KAAK3D,IAAIgF,EAAI0E,EAAE1E,KACvBuB,EAjCP,EAiCOA,QAASC,EAjChB,EAiCgBA,KAEXlB,EAAO,GACJ2C,EAAI,EAAGA,EAVF,IAUaA,IAAK,CAAC,IAAD,EACxB9C,EAAIxB,KAAKC,MAbJ,EAaiB3D,EAAOgI,GACnC3C,EAAKF,MAAL,mBACGiE,GAAgBlE,GADnB,cAEGmE,GAAcI,EAAEvE,IAFnB,IAQF,IAAMzM,EAAaiR,eACbpP,EAAU/B,KAEVoR,EAAY,SAAClG,GAAD,SACbA,EAAI6C,GAASsD,YAAY,IAAIC,kBAgDlC,OACE,kBAAC,KAAD,CAAqBC,SAAU,GAC7B,kBAAC,KAAD,CACE7P,MAAO,EACPe,OAAQ,IACRqK,KAAMA,EACNpM,OAAQ,CACN6C,IAAK,GACLiO,MAAO,GACPtO,KAAM,EACNuO,OAAQ,IAGV,kBAAC,KAAD,CACE/L,UAAU,EACVgM,OAAQxR,EAAMK,QAAQC,KAAKC,UAC3BkR,cAAe,MAEjB,kBAAC,KAAD,CACEC,SAAU,GACVC,QAAShB,GACTiB,cAAeV,EACfpD,KAAMA,EACN+D,KAAM,CAAEC,KAAM9R,EAAMK,QAAQC,KAAKC,WACjCiR,OAAQxR,EAAMK,QAAQC,KAAKC,YAE7B,kBAAC,KAAD,CACEmR,SAAU,mBACVK,MAAOpF,GAAiBC,EAAK3F,IAAI,SAAA+K,GAAC,OAAIA,EAAEpB,MAAe,GACvDgB,cAAeV,EACfpD,KAAMA,EACN+D,KAAM,CAAEC,KAAM9R,EAAMK,QAAQC,KAAKC,WACjC0R,OAAQ,CAAC,EAAGjB,EAAE1E,IACdkF,OAAQxR,EAAMK,QAAQC,KAAKC,YAE7B,kBAAC,KAAD,CAAS8D,QAAS,kBA/DxB,YAAyD,IAAhCvB,EAA+B,EAA/BA,OAAQoP,EAAuB,EAAvBA,QAAShL,EAAc,EAAdA,MACxC,GAAIpE,EAAQ,CACV,IAAMqP,EAASD,EAAQ,GAAGtL,MACpBwL,EAAUlL,EACV4C,EAAQ6E,GAAU,CAAEJ,EAAG6D,EAASjE,KAAIH,MACpCqE,EAA0B,CAC9B,CAAC,SAAUnB,EAAUiB,GAAUrE,EAAM,UACrC,CAAC,aAAcoD,EAAUkB,GAAWtE,EAAM,OAC1C,CAAC,QAAShE,EAAMsB,QAAQ,GAAI,cAE9B,OACE,yBAAKtJ,UAAWD,EAAQgP,SACtB,+BACE,+BACGwB,EAAYpL,IAAI,mCAAEoC,EAAF,KAAQzC,EAAR,KAAe0L,EAAf,YACf,wBAAIvK,IAAKsB,GACP,4BAAKA,GACL,4BAAKzC,GACL,4BAAK0L,SAOZ,OAAO,MAsCQ,QAClB,kBAAC,KAAD,CACE5B,kBAAmBA,GACnB6B,KAAK,WACLZ,QAASf,GACTY,OAAQxR,EAAMK,QAAQW,QAAQC,KAC9B6Q,KAAM9R,EAAMK,QAAQW,QAAQC,KAC5BuR,YAAa,GACbC,YAAa,IAEf,kBAAC,KAAD,CACEhG,EAAGsE,EACHS,OAAQxR,EAAMK,QAAQW,QAAQC,KAC9ByR,gBAAgB,MAChBxL,MAAO,kBA3Ff,SAAwBf,GAAa,IAC3BwM,EAAwBxM,EAAxBwM,WAAYC,EAAYzM,EAAZyM,QACpB,OACE,0BACEnG,EAAGmG,EAAQnG,EAAI,GACfoG,EAAG,GACHf,KAAM9R,EAAMK,QAAQC,KAAKC,UACzBoS,WAAYA,GAJd,kBAwFW,QAET,kBAAC,KAAD,CAAQzB,UAjGd,SAAkCtK,GAChC,OAAO,0BAAMkM,MAAO,CAAE1S,MAAOJ,EAAMK,QAAQC,KAAKC,YAAcqG,S,OC5FnD,SAASmM,KACtB,OACE,yBAAKjR,UAAU,WACb,yBAAKA,UAAU,YACf,yBAAKA,UAAU,YACf,yBAAKA,UAAU,aCDrB,IAAMhC,GAAYC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACXqC,KAAM,CACJ9B,OAAQR,EAAMS,QAAQ,EAAG,EAAG,IAE9BG,UAAW,CACTC,cAAe,SACfC,YAAad,EAAMS,QAAQ,IAE7BmF,cAAe,CACbxF,MAAOJ,EAAMK,QAAQC,KAAKC,WAE5BsF,gBAAiB,GAGjBC,iBAAkB,CAChB,2BAA4B,CAC1BxE,aAAc,OACduC,aAAc,sBAGlBkC,QAAS,CACPnC,cAAe,OACf,UAAW,CACTzC,QAAS,OACTC,WAAY,SACZ,MAAO,CACLE,aAAc,IAGlB,2BAA4B,CAC1B0E,aAAc,SAGlBgN,YAAa,CACX5S,MAAOJ,EAAMK,QAAQC,KAAKC,UAC1BmB,SAAU,WAKD,SAASuR,GAAT,GAWX,IAVFC,EAUC,EAVDA,aACAC,EASC,EATDA,mBASC,EAMiD3O,oBAChD4O,GAPD,mBAMM1C,EANN,KAMyB2C,EANzB,KASDvI,oBAAU,WACR,IAAMwI,EAAU5F,WAAW,WACzB2F,GAAqB,IACpBF,GACH,OAAO,WACLI,aAAaD,MAIjB,IAAMzR,EAAU/B,KAEhB,OACE,yBAAKgC,UAAWD,EAAQiE,kBACrBoN,EAAajM,IAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaP,EAAvB,EAAuBA,MAAOoM,EAA9B,EAA8BA,YAA9B,OAChB,kBAAClL,EAAA,EAAD,CAAMC,IAAKb,EAAO3D,WAAS,EAAC9C,QAAS,EAAGqB,UAAWD,EAAQkE,SACzD,kBAAC+B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGnG,UAAWD,EAAQ+D,eACnC,kBAACxB,EAAD,CAAiBC,QAAS6C,EAAO5C,YAAa6C,KAGhD,kBAACW,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGnG,UAAWD,EAAQgE,iBAClC6K,EACC,kBAACqC,GAAD,MAEA,6BACE,kBAAC9Q,EAAA,EAAD,KAAa2E,GACZoM,GACC,kBAAC/Q,EAAA,EAAD,CAAYH,UAAWD,EAAQmR,aAC5BA,SC/ErB,IAAMrC,GAAgB,IAChB6C,GAAkB,oBAClBC,GAAmB,0BACnBC,GAAmB,2BACnBC,GAAa,mBACbC,GAAa,cAIbC,GAAa,UACbC,GAAc,UACdC,GAAqB,UAErBjU,GAAYC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACX4Q,QAAS,CACPnO,OAAQ,oBACRD,gBAAiB,UACjBkB,QAAS3D,EAAMS,QAAQ,GACvBL,MAAO,eA6OE4T,OAxOf,YAsBE,IARE,IAbFC,EAaC,EAbDA,gBACAC,EAYC,EAZDA,2BACAC,EAWC,EAXDA,qBACAhB,EAUC,EAVDA,mBACA7J,EASC,EATDA,GACAC,EAQC,EARDA,GAeMqD,EAAO,GACJO,EAAI,EAAGA,EAAI8G,EAAgBnH,OAAQK,IAAK,CAAC,IAAD,EAC/CP,EAAKF,MAAL,mBACGiE,GAAgBxD,GADnB,cAEGqG,GAAkBS,EAAgB9G,IAAM,GAF3C,cAGGsG,GAAmBU,EAAqBhH,IAAM,GAHjD,cAIGuG,GAAmBQ,EAA2B/G,IAAM,GAJvD,IATD,MAsBiD3I,oBAChD4O,GAvBD,mBAsBM1C,EAtBN,KAsByB2C,EAtBzB,KAyBDvI,oBAAU,WACR,IAAMwI,EAAU5F,WAAW,WACzB2F,GAAqB,IACpBF,EAAqB,KACxB,OAAO,WACLI,aAAaD,MAMjB,IAAMc,EAAgBF,EAA2B,GAC3CG,EAAgBH,EAA2BI,OAAO,GAAG,GACrDC,EAAkBF,EAAgBD,EAElCI,EAAe,SAACxJ,GAAD,QAAiBA,EAAEI,QAAQ,IAAIgG,kBAxCnD,EAyCyBzD,GAAS0G,GAA3BxG,EAzCP,EAyCOA,QAASC,EAzChB,EAyCgBA,KAEX2G,EAAsB,SAACzJ,GAAD,SACvBA,EAAI6C,GAASsD,YAAY,IAAIC,kBAI5BpR,EAAaiR,eACbpP,EAAU/B,KAQhB,SAAS4U,EAAevO,GAAa,IAC3BwM,EAAoCxM,EAApCwM,WAAYC,EAAwBzM,EAAxByM,QAAStS,EAAe6F,EAAf7F,KAAe6F,EAAT2L,KACnC,OACE,0BACErF,EAAGmG,EAAQnG,EAAI,EACfoG,EAAGD,EAAQC,EAAI,GACff,KAAMiC,GACNpB,WAAYA,GAEXrS,GAoCP,OACE,kBAAC,KAAD,CAAqB+Q,SAAU,GAC7B,kBAAC,KAAD,CACE7P,MAAO,EACPe,OAAQ,IACRqK,KAAMA,EACNpM,OAAQ,CACN6C,IAAK,GACLiO,MAAO,GACPtO,KAAM,EACNuO,OAAQ,IAGV,kBAAC,KAAD,CACE/L,UAAU,EACVgM,OAAQxR,EAAMK,QAAQC,KAAKC,UAC3BkR,cAAe,MAEjB,kBAAC,KAAD,CACEE,QAAShB,GACTkB,KAAM,CAAEC,KAAM9R,EAAMK,QAAQC,KAAKC,WACjCiR,OAAQxR,EAAMK,QAAQC,KAAKC,UAC3BwR,MAAK,uBACA3F,GAAS,CACVE,GAAI2H,EAAgBnH,OACpBP,MAAO,IACNtF,IAAIgE,KAAKkB,QAJT,CAKH8H,EAAgBnH,OAAS,MAK7B,kBAAC,KAAD,CACE6H,QAAQ,OACR1C,OAAQ,CAAC,EAAGhH,KAAK3D,IAAL,MAAA2D,KAAI,aAAQgJ,GAAR,QAA8B,KAAL1K,MACzCqI,cAAe4C,EACf3C,KAAM,CAAEC,KAAM+B,IACdrC,OAAQqC,KAIV,kBAAC,KAAD,CACEc,QAAQ,QACR1C,OAAQ,CACNmC,EAAcjD,YAAY,KACxBkD,EAAgBE,GAAiBpD,YAAY,IAEjDyD,YAAY,QACZhD,cA5Ge,SAAC5G,GAAD,QAAiBA,EAAEmG,YAAY,IAAIC,kBA6GlDS,KAAM,CAAEC,KAAMgC,IACdtC,OAAQsC,KAGV,kBAAC,KAAD,CAASzP,QAAS,kBApFxB,YAAyD,IAAhCvB,EAA+B,EAA/BA,OAAQoP,EAAuB,EAAvBA,QAAShL,EAAc,EAAdA,MACxC,GAAIpE,EAAQ,CACV,IAAMgH,EAAQoI,EAAQ,GAAGtL,MACnBuF,EAAQ+F,EAAQ,GAAGtL,MACnBiO,EAAQ3C,EAAQ,GAAGtL,MACnBkO,EAAU5N,EACVmL,EAA0B,CAC9B,CAAC,QAASmC,EAAa1K,GAAQ,UAC/B,CAAC,WAAY0K,EAAarI,GAAQ,UAClC,CAAC,WAAYsI,EAAoBI,GAAS/G,EAAM,OAChD,CAAC,OAAQgH,EAAS,KAGpB,OACE,yBAAKhT,UAAWD,EAAQgP,SACtB,+BACE,+BACGwB,EAAYpL,IAAI,mCAAEoC,EAAF,KAAQzC,EAAR,KAAekH,EAAf,YACf,wBAAI/F,IAAKsB,GACP,4BAAKA,GACL,4BAAKzC,GACL,4BAAKkH,SAOZ,OAAO,MAwDQ,QAElB,kBAAC,KAAD,CACE4C,kBAAmBA,EACnBqE,kBAAmB5B,EACnBwB,QAAQ,OACRpC,KAAK,WACLZ,QAAS6B,GACThC,OAAQxR,EAAMK,QAAQW,QAAQC,KAC9B6Q,KAAM9R,EAAMK,QAAQW,QAAQC,KAC5BuR,YAAa,GACbC,YAAa,IAEf,kBAAC,KAAD,CACE/B,kBAAmBA,EACnBqE,kBAAmB5B,EACnBwB,QAAQ,OACRpC,KAAK,WACLZ,QAAS8B,GACTjC,OAAQ,UACRM,KAAM,UACNU,YAAa,IACbC,YAAa,IAGf,kBAAC,KAAD,CACEI,EAAGvJ,EACHqL,QAAQ,OACRnD,OAAQxR,EAAMK,QAAQW,QAAQC,KAC9BiG,MAAO,kBAACwN,EAAD,CAAgBpU,KAAMsT,OAE/B,kBAAC,KAAD,CACEf,EAAGtJ,EACHoL,QAAQ,OACRnD,OAAQxR,EAAMK,QAAQW,QAAQC,KAC9BiG,MAAO,kBAACwN,EAAD,CAAgBpU,KAAMqT,OAI/B,kBAAC,KAAD,CACEjD,kBAAmBA,EACnBqE,kBAAmB5B,EACnBwB,QAAQ,QACRpC,KAAK,WACLZ,QAAS+B,GACTlC,OAAQ,UACRM,KAAM9R,EAAMK,QAAQE,UAAUyU,KAC9BxC,YAAa,GACbC,YAAa,IASf,kBAAC,KAAD,CAAQvB,UA/Jd,SAAkCtK,GAChC,OAAO,0BAAMkM,MAAO,CAAE1S,MAAOJ,EAAMK,QAAQC,KAAKC,YAAcqG,S,UC9D5DuM,I,OAAqB,KAErBrT,GAAYC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACXgV,cAAe,CACb,2BAA4B,CAC1BrR,cAAe5D,EAAMS,QAAQ,IAE/B,UAAW,CACT,UAAW,CACTyU,WAAY,iBAGhBtR,cAAe5D,EAAMS,QAAQ,IAE/B0U,oBAAqB,CACnBC,UAAW,SAEbtR,MAAO,CACLtC,MAAO,OACPe,OAAQ,OACR6S,UAAW,IACX3S,gBAAiB,WAEnB4S,IAAK,CACH1R,QAAS3D,EAAMS,QAAQ,EAAG,IAE5B6U,UAAW,CACT3R,QAAS3D,EAAMS,QAAQ,EAAG,IAE5B8U,UAAW,CACT5R,QAAS3D,EAAMS,QAAQ,EAAG,GAC1B8B,OAAQvC,EAAMS,QAjCC,IAkCfU,QAAS,OACTC,WAAY,SACZyC,aAAc,qBAEhB2R,gBAAiB,CACf3R,aAAc,qBAEhB4R,aAAc,CACZpU,eAAgB,iBAElBqU,SAAU,CACRlU,MAAO,OACPe,OAAQ,OACR6S,UAAW,IACXO,UAAW,IACXhS,QAAS3D,EAAMS,QAAQ,EAAG,GAE1BuF,aAAc,MACd4P,YAAa,OAEfC,eAAgB,CACdlS,QAAS3D,EAAMS,QAAQ,EAAG,GAC1BU,QAAS,OACToB,OAAQ,OACRnB,WAAY,SACZC,eAAgB,SAChBjB,MAAOJ,EAAMK,QAAQC,KAAKC,UAC1BI,QAAS,IAEXmV,OAAQ,CACNrT,gBAAiB,UACjBrC,MAAO,UACP2V,UAAW,SACXpS,QAAS3D,EAAMS,QAAQ,EAAG,EAAG,IAC7Ba,cAAetB,EAAMS,QApEN,KAsEjBuV,OAAQ,CAENC,WAAY,4CAEZ7V,MAAO,SAGToL,qBAAsB,CACpB,2BAA4B,CAC1B5H,cAAe5D,EAAMS,QAAQ,GAC7Ba,aAActB,EAAMS,QAAQ,GAC5BoD,aAAc,qBAEhB,OAAQ,CACNhD,cAAe,MACf8C,QAAS3D,EAAMS,QAAQ,MAG3BgL,iBAAkB,CAChB9H,QAAS3D,EAAMS,QAAQ,KAEzB0D,gBAAiB,CACf/D,MAAO,WAETsL,mBAAoB,CAClB/H,QAAS3D,EAAMS,QAAQ,KAEzByV,YAAa,CACX,UAAW,CACTvS,QAAS,wBACTxC,QAAS,OACTC,WAAY,WAGhB+U,SAAU,CACRxS,QAAS,eACTxC,QAAS,OACTC,WAAY,UAEdgV,UAAW,CACTzS,QAAS,wBACTxC,QAAS,OACTC,WAAY,c,mCCzJZpB,GAAQqW,aAAe,CAC3BhW,QAAS,CACPkS,KAAM,OACNvR,QAAS,CACPC,KAAM,WAERV,UAAW,CACTU,KAAM,UACNqV,MAAO,UACPtB,KAAM,WAERuB,MAAO,CACLtV,KAAMuV,KAAIC,MAEZR,WAAY,CACVS,QAAS,OACT5S,MAAO,WAETxD,KAAM,CACJU,QAAS,OACTT,UAAW,YAGfoW,WAAY,CACVC,GAAI,CACFjV,WAAY,QAKlBkV,QAAQ3G,IAAIlQ,IAEGA,UC7Bf8W,IAASC,OACP,kBAACC,EAAA,EAAD,CAAehX,MAAOA,IAEpB,kBAACiX,EAAA,EAAD,MACA,kBFuJW,WAAgB,IAAD,EACUzS,mBAAS,CAC7C4E,MAAO,IACPE,GAAI,GACJC,GAAI,GACJC,KAAM,IACNC,UAAW,GACXC,GAAI,MAPsB,mBACrBa,EADqB,KACRC,EADQ,KAUpBd,EAAuCa,EAAvCb,GAAIN,EAAmCmB,EAAnCnB,MAAOE,EAA4BiB,EAA5BjB,GAAIC,EAAwBgB,EAAxBhB,GAAIC,EAAoBe,EAApBf,KAAMC,EAAcc,EAAdd,UAM3ByN,EAAyBC,kBAC7B,kBAAMC,oBAAS5M,EAAgB,MAC/B,IAlB0B,EA2BxBuD,GAAiB,CACnBrE,KACAN,QACAE,KACAC,OARAyE,EAvB0B,EAuB1BA,EACAC,EAxB0B,EAwB1BA,GACAC,EAzB0B,EAyB1BA,GACAC,EA1B0B,EA0B1BA,GA1B0B,EAkCkB3J,mBAAS,CAAC,IAlC5B,mBAkCrByP,EAlCqB,KAkCJoD,EAlCI,OAmC8B7S,mBAAS,CAAC,IAnCxC,mBAmCrB8S,EAnCqB,KAmCEC,EAnCF,OAoC4B/S,mBAAS,CAAC,IApCtC,mBAoCrB2P,EApCqB,KAoCCqD,EApCD,OAqCYhT,mBAASyJ,GArCrB,mBAqCrB/D,EArCqB,KAqCPuN,EArCO,OAsCcjT,mBAAS,GAtCvB,mBAsCrBkT,EAtCqB,KAsCNC,GAtCM,QAuCUnT,mBAAS,GAvCnB,qBAuCrBoT,GAvCqB,MAuCRC,GAvCQ,SAwCMrT,mBAAS,GAxCf,qBAwCrBsT,GAxCqB,MAwCVC,GAxCU,SA0CoBvT,oBAAS,GA1C7B,qBA0CrBwT,GA1CqB,MA0CHC,GA1CG,SA2CsBzT,oBAAS,GA3C/B,qBA2CrB0T,GA3CqB,MA2CFC,GA3CE,mDAmD5B,sBAAAnL,EAAA,4DAEEoL,KAFF,SAGQ9K,GAAM,GAHd,OAME2K,IAAoB,GANtB,0CAnD4B,sBA4D5B,SAASG,KAEPH,IAAoB,GAEpBN,GAAiB,GACjBN,EAAmB,CAAC,IACpBE,EAAyB,CAAC,IAC1BM,GAAe,GAtBjB/M,oBAAU,WACRmN,IAAoB,IACnB,CAAC1N,IAuBJO,oBAAU,WACR,IAAIuN,GAAwB,EADd,2CAGd,gDAAArL,EAAA,qDACQsL,EAAgB,CAACrK,GACjBsK,EAAgB,CAACrK,GACjBsK,EAAgB,CAAC7J,GAAU,CAAEJ,EAAGN,EAAIE,KAAIH,OACxCyK,EAAmB,CAAC,GACpBC,EAAuB,GACvBC,EAAwB,GAGxBC,EAAgB,CAAC1K,GACjB2K,EAAyB,GAGzBC,EAAW,GACH,IACA,KACI,GAEJ,EAKdX,IAAqB,GAvBvB,WAwBWhL,GACP,IAAM4L,EAAUlJ,GAAK,EAAG,EAAI1C,EAAI,GAE1BoB,EAAIxB,GAAQuL,GACZjK,EAAItB,GAAQwL,GACZ9J,EAAI1B,GAAQ6L,GAGdI,OAAO,EACX,GAAIvK,EAAIJ,EACN2K,EAAU,MACL,CAEL,IAAMC,EAAU7K,GAAK,CAAEC,EAAGA,EAAII,EAAGN,KAAIH,MAAOO,EAC5CyK,EAAU/N,KAAK3D,IAAI,EAAI2R,EAxBb,KA0BZ,IAAIhK,EAAcY,GAAKmJ,EAzBX,MA0BR7L,EAAI,GAAKA,EAAI,KACf8B,EAAcY,GAAK,KAAM,MAG3B,IAAMhB,EAASG,GAAsB,CAAET,IAAGP,IAAGiB,gBACvCiK,EAAS3K,EAAIM,EAEbsK,EAAMjK,GAAkB,CAC5BC,IAAKN,EACLjH,IAAKmR,EACLzJ,OAnCc,KAyCVjF,EAAWgG,GAHI8I,EAAIlS,IAAI,SAAAmS,GAAG,OAC9BxK,GAAY,CAAEL,IAAGM,OAAQuK,EAAKjL,KAAIH,SAI9BqL,EAAcF,EAAIG,OAAO,SAAAC,GAAE,OAAIA,EAAK,IACpCC,GAAShQ,EAAc6P,EL/GxBnM,OAAO,SAACF,EAAGyD,GAAJ,OAAUzD,EAAIyD,GAAG,GKoHvBgJ,EAAShL,EADCgB,GAAY,CAAEC,KAAMvC,EAAGsB,IAAGkB,SAAUlG,EAAWmG,MA9CnD,IAkDN8J,EAASpL,GAAK,CAAEC,IAAGJ,KAAIH,MACvB2L,EAAkBnL,GAAY,CAClCH,EAAGqL,EACHjL,EAAGiL,EAASD,EACZtL,KACAH,MAGI4L,EAAavJ,GAAUgJ,GAc7B,GAZAf,EAAI5L,KAAKwM,GACTX,EAAI7L,KAAKgN,GACTd,EAAIlM,KAAK+M,GACTjB,EAAI9L,KAAKiC,GAAU,CAAEJ,EAAG2K,EAAQ/K,KAAIH,OACpC0K,EAAWhM,KAAKrC,GAChBsO,EAAYjM,KAAKkN,GACjBnB,EAAO/L,KAAKK,GAAQ0L,GAAUe,GAE9BX,EAAanM,KAAKiN,GAClBhC,GAAiB,SAAAvK,GAAC,OAAIA,EAAIiM,EAAYvM,UAGjCkL,KAAqBK,EAAuB,eAlE1ClL,EAAI,EAxBf,aAwBkBA,EAAI2L,GAxBtB,gCAwBW3L,GAxBX,qDAwBgCA,IAxBhC,wBA8FE0L,EAAaA,EAAa/L,QAAU+L,EAAaA,EAAa/L,OAAS,GAEvEuK,EAAmBmB,GACnBjB,EAAyBkB,GACzBjB,EAAwBqB,GACxBhB,GAAe5K,GAAOyL,IACtBX,GAAa9K,GAAO0L,EAAYW,OAAO,SAAAtO,GAAC,OAAKnD,MAAMmD,OACnDyM,EAAgB1K,GAAQuL,IAExBH,IAAqB,GAvGvB,2CAHc,sBA+Gd,OAFIH,IA7GU,mCA6GQ6B,GAEf,WACLxB,GAAwB,IAEzB,CAACL,KAGJ,IAAM7N,GAAoBT,EAAKN,EACzB8K,GAA6BoD,EAAsBrQ,IACvD,SAAAwF,GAAC,OAAIA,EAAItC,KAGL+I,GAAe,CACnB,CACEhM,MAAO+C,EAA4BC,aAAab,KAChDlC,YAAa8C,EAA4BC,aAAa5J,KACtDsG,QAASsD,EAAaiH,YAAY,IAAIC,iBAAmB,QAE3D,CACElK,MAAO+C,EAA4BE,kBAAkBd,KACrDlC,YAAa8C,EAA4BE,kBAAkB7J,KAC3DsG,MAAOqE,KAAKC,MAAMxB,EAAKN,GAAOgI,iBAAmB,QAEnD,CACElK,MAAO+C,EAA4BG,aAAaf,KAChDlC,YAAa8C,EAA4BG,aAAa9J,KACtDsG,QACImG,GAAQuK,GAAuBnG,YAAY,IAAIC,iBACjD,OACF4B,YAAY,QAAD,OAAU0E,EAAV,cAEb,CACExQ,MAAO+C,EAA4BI,SAAShB,KAC5ClC,YAAa8C,EAA4BI,SAAS/J,KAClDsG,QAAS,IAAMgR,IAAaxM,QAAQ,GAAK,KACzC4H,YAAY,eAAD,OAAiB/H,KAAKC,MAAM4M,IAAW1G,iBAAvC,UAITvP,GAAU/B,KAEhB,OACE,oCACE,4BAAQgC,UAAWD,GAAQiU,QACzB,kBAACgE,EAAA,EAAD,CAAWC,OAAK,GACd,kBAACnY,EAAD,QAIJ,kBAACkY,EAAA,EAAD,CAAWC,OAAK,EAACjY,UAAWD,GAAQoT,eAClC,kBAACnN,EAAA,EAAD,CAAMvE,WAAS,EAAC9C,QAAS,GACvB,kBAACqH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI8D,GAAI,GAAI7H,GAAI,EAAG8H,GAAI,GACpC,kBAACgO,EAAA,EAAD,CAAOlY,UAAWD,GAAQiC,OACxB,kBAAC6B,EAAA,EAAD,CAAK7D,UAAWD,GAAQ0T,WACtB,kBAACtT,EAAA,EAAD,CAAYC,QAAQ,MAApB,gBACA,kBAAC,EAAD,CACEhC,MAAO,yBACP0L,MAAO,CACLzC,EAAsBC,MACtBD,EAAsBG,GACtBH,EAAsBI,GACtBJ,EAAsBK,KACtBL,EAAsBM,cAK5B,kBAAC9D,EAAA,EAAD,CAAK7D,UAAS,UAAKD,GAAQwT,IAAb,YAAoBxT,GAAQ2T,kBACxC,kBAAClL,EAAD,CACEC,YAAaA,EACbC,eAAgB0M,OAMxB,kBAACpP,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI8D,GAAI,GAAI7H,GAAI,EAAG8H,GAAI,GACpC,kBAACgO,EAAA,EAAD,CAAOlY,UAAWD,GAAQiC,OACxB,kBAAC6B,EAAA,EAAD,CAAK7D,UAAWD,GAAQ0T,WACtB,kBAACtT,EAAA,EAAD,CAAYC,QAAQ,MAApB,WACA,kBAAC,EAAD,CAAU2J,KAAMlC,KAGlB,kBAAChE,EAAA,EAAD,CAAK7D,UAAWD,GAAQ6T,UACtB,kBAAC,GAAD,CAAqBtM,MAAOA,EAAOM,GAAIA,EAAIJ,GAAIA,EAAIC,GAAIA,QAM/D,kBAACzB,EAAA,EAAD,CAAMvE,WAAS,EAAC9C,QAAS,GACvB,kBAACqH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAAC+R,EAAA,EAAD,KACE,kBAACrU,EAAA,EAAD,CAAK7D,UAAS,UAAKD,GAAQwT,IAAb,YAAoBxT,GAAQ2T,kBACxC,kBAACvJ,GAAD,CACE1B,YAAaA,EACbC,eAAgB0M,KAIpB,kBAACvR,EAAA,EAAD,CAAK7D,UAAWD,GAAQ0T,WACtB,kBAACzN,EAAA,EAAD,CACEvE,WAAS,EACT0W,UAAU,MACVC,QAAQ,SACR9Y,WAAW,UAEX,kBAAC+Y,EAAA,EAAD,CACEjY,QAAQ,YACRJ,UAAWD,GAAQmU,OACnB/Q,QAlSU,4CAmSVmV,SAAUlC,IAJZ,uBAcV,kBAACpQ,EAAA,EAAD,CAAMvE,WAAS,EAAC9C,QAAS,EAAGqB,UAAWD,GAAQsT,qBAC5C6C,GACC,oCACE,kBAAClQ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI8D,GAAI,GAAI7H,GAAI,EAAG8H,GAAI,GACpC,kBAACgO,EAAA,EAAD,CAAOlY,UAAWD,GAAQiC,OACxB,kBAAC6B,EAAA,EAAD,CAAK7D,UAAWD,GAAQ0T,WACtB,kBAACtT,EAAA,EAAD,CAAYC,QAAQ,MAApB,cACA,kBAAC,EAAD,CACE2J,KAAMjC,EACNgC,MAAOyO,OAAOpW,OAAO4F,MAIzB,kBAAClE,EAAA,EAAD,CAAK7D,UAAWD,GAAQ6T,UACtB,kBAAC,GAAD,CACEzB,gBAAiBA,EACjBE,qBAAsBA,EACtBD,2BAA4BA,GAC5Bf,mBAAoBA,GACpB7J,GAAIA,EACJC,GAAIA,OAMZ,kBAACzB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI8D,GAAI,GAAI7H,GAAI,EAAG8H,GAAI,GACpC,kBAACgO,EAAA,EAAD,CAAOlY,UAAWD,GAAQiC,OACxB,kBAAC6B,EAAA,EAAD,CAAK7D,UAAWD,GAAQ0T,WACtB,kBAACtT,EAAA,EAAD,CAAYC,QAAQ,MAApB,WACA,kBAAC,EAAD,CACEhC,MAAO,gCACP0L,MAAOyO,OAAOpW,OAAOgG,MAIzB,kBAACtE,EAAA,EAAD,CAAK7D,UAAWD,GAAQwT,KACtB,kBAACpC,GAAD,CACEC,aAAcA,GACdC,mBAAoBA,SAO9B,kBAACrL,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAAC+R,EAAA,EAAD,CAAOlY,UAAWD,GAAQiC,OACxB,kBAAC6B,EAAA,EAAD,CAAK7D,UAAWD,GAAQgU,gBACtB,kBAAC5T,EAAA,EAAD,CAAYC,QAAQ,MAApB,0CErfd,OAEFoY,SAASC,cAAc,Y","file":"static/js/main.2cb022c5.chunk.js","sourcesContent":["import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst cadCadLink =\n  \"https://medium.com/block-science/cadcad-filling-a-critical-gap-in-open-source-data-science-fcd0d3faa8ed\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      // color: theme.palette.text.secondary,\n    },\n    subtitle: {\n      color: theme.palette.text.secondary,\n      margin: theme.spacing(3, 0, 0)\n    },\n    subsubtitle: {\n      color: theme.palette.text.secondary,\n      opacity: 0.6\n    },\n    lightBulb: {\n      verticalAlign: \"middle\",\n      marginRight: theme.spacing(1)\n    },\n    link: {\n      color: theme.palette.primary.main\n    },\n    logoContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      marginBottom: theme.spacing(4)\n    },\n    logo: {\n      width: \"25px\",\n      marginRight: \"4px\"\n    },\n    logoText: {\n      display: \"inline\",\n      fontSize: \"1.1rem\",\n      fontWeight: 500\n    }\n  })\n);\n\nexport default function Header() {\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.logoContainer}>\n        <img src=\"./favicon.ico\" className={classes.logo} alt=\"logo\" />\n        <Typography className={classes.logoText}>Commons Stack</Typography>\n      </div>\n\n      <Typography className={classes.title} variant=\"h4\">\n        Augmented Bonding Curve Design\n      </Typography>\n\n      <Typography className={classes.subtitle}>\n        Experiment and test augmented bonding curves\n      </Typography>\n      <Typography className={classes.subsubtitle}>\n        A narrative showcase of <Link href={cadCadLink}>cadCAD</Link>\n        's capabilities\n      </Typography>\n    </>\n  );\n}\n","import { withStyles } from \"@material-ui/core/styles\";\nimport Slider from \"@material-ui/core/Slider\";\n\nexport default withStyles({\n  root: {\n    height: 8\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: \"#fff\",\n    border: \"2px solid currentColor\",\n    marginTop: -8,\n    marginLeft: -12,\n    \"&:focus,&:hover,&$active\": {\n      boxShadow: \"inherit\"\n    }\n  },\n  active: {},\n  valueLabel: {\n    left: \"calc(-50% + 4px)\"\n  },\n  track: {\n    height: 8,\n    borderRadius: 4\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4\n  },\n  markLabel: {\n    top: 30\n  }\n})(Slider);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    color: theme.palette.text.secondary,\n    display: \"flex\",\n    fontSize: \"0.9rem\",\n    cursor: \"pointer\",\n    transition: \"color ease 150ms\",\n    \"&:hover\": {\n      color: \"#c3c9d0\"\n    }\n  },\n  popoverContainer: {\n    padding: theme.spacing(2),\n    \"& > p:not(:last-child)\": {\n      paddingBottom: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n      borderBottom: \"1px solid #3f5463\"\n    }\n  },\n  paper: {\n    backgroundColor: \"#384b59\",\n    maxWidth: theme.breakpoints.values.md * 0.9,\n    [`@media screen and (max-width: ${theme.breakpoints.values.md}px)`]: {\n      maxWidth: \"90vw\"\n    },\n    padding: theme.spacing(0.5)\n  },\n  descriptionBody: {\n    color: \"#dbdfe4\"\n  }\n}));\n\nexport default function TextWithPopover({\n  content,\n  popoverText\n}: {\n  content: string;\n  popoverText: string;\n}) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  function handleClick(event: any) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  return (\n    <div className={classes.container}>\n      <div aria-describedby={id} onClick={handleClick}>\n        <Typography>{content}</Typography>\n      </div>\n      <Popover\n        PaperProps={{\n          className: classes.paper\n        }}\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        onClick={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\"\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\"\n        }}\n      >\n        <Box className={classes.popoverContainer}>\n          <Typography>{content}</Typography>\n          <Typography className={classes.descriptionBody}>\n            {popoverText}\n          </Typography>\n        </Box>\n      </Popover>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport NumberFormat from \"react-number-format\";\nimport { InputFieldInterface } from \"./types\";\nimport PrettoSlider from \"./PrettoSlider\";\nimport TextWithPopover from \"./TextWithPopover\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: theme.spacing(6, 0, 3)\n    },\n    lightBulb: {\n      verticalAlign: \"middle\",\n      marginRight: theme.spacing(1)\n    },\n    leftContainer: {\n      color: theme.palette.text.secondary\n    },\n    centerContainer: {\n      // color: blackColor\n    },\n    listBoxContainer: {\n      \"& > div:not(:last-child)\": {\n        paddingBottom: \"12px\",\n        marginBottom: \"12px\",\n        borderBottom: \"1px solid #313d47\"\n      }\n    },\n    listBox: {\n      \"& > div\": {\n        display: \"flex\",\n        alignItems: \"center\",\n        \"& p\": {\n          marginBottom: 0\n        }\n      },\n      \"& > div:not(:last-child)\": {\n        paddingRight: \"12px\"\n      }\n    },\n    slider: {\n      color: theme.palette.primary.main\n    }\n  })\n);\n\nfunction NumberFormatCustom(props: any) {\n  const { inputRef, onChange, prefix, suffix, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({ target: { value: values.value } });\n      }}\n      thousandSeparator\n      prefix={prefix}\n      suffix={suffix}\n    />\n  );\n}\n\nexport default function InputParams({\n  inputFields,\n  onChangeCommited\n}: {\n  inputFields: InputFieldInterface[];\n  onChangeCommited(): void;\n}) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.listBoxContainer}>\n      {inputFields.map(\n        ({\n          label,\n          description,\n          value,\n          setter,\n          min,\n          max,\n          step,\n          prefix,\n          suffix,\n          format,\n          toText,\n          toNum\n        }) => {\n          function sanitizeInput(num: number = 0) {\n            if (isNaN(num)) num = 0;\n            if (num > max) num = max;\n            else if (num < min) num = min;\n            setter(num);\n          }\n\n          return (\n            <Grid key={label} container spacing={0} className={classes.listBox}>\n              <Grid item xs={6} className={classes.leftContainer}>\n                <TextWithPopover content={label} popoverText={description} />\n              </Grid>\n\n              <Grid item xs={2} className={classes.centerContainer}>\n                <TextField\n                  onChange={e => {\n                    sanitizeInput(\n                      toNum ? toNum(e.target.value) : parseFloat(e.target.value)\n                    );\n                    onChangeCommited();\n                  }}\n                  InputProps={{\n                    inputComponent: NumberFormatCustom,\n                    disableUnderline: true,\n                    inputProps: {\n                      prefix,\n                      suffix\n                    }\n                  }}\n                  value={toText ? toText(value) : value}\n                />\n              </Grid>\n\n              <Grid item xs={4}>\n                <PrettoSlider\n                  className={classes.slider}\n                  valueLabelDisplay=\"auto\"\n                  aria-label={label}\n                  defaultValue={value}\n                  onChange={(_, newValue) => sanitizeInput(Number(newValue))}\n                  onChangeCommitted={onChangeCommited}\n                  value={value}\n                  min={min}\n                  max={max}\n                  step={step}\n                  valueLabelFormat={value => format(value).replace(\"$\", \"\")}\n                />\n              </Grid>\n            </Grid>\n          );\n        }\n      )}\n    </div>\n  );\n}\n","export interface DescriptionObject {\n  [key: string]: { name: string; text: string };\n}\n\nexport const parameterDescriptions: DescriptionObject = {\n  theta: {\n    name: \"Hatch Raise % to funding pool\",\n    text:\n      \"The percentage of the funds raised in the Hatch going directly to funding pool to be used to support the Commons, the rest goes to the collateral pool\"\n  },\n  p0: {\n    name: \"Hatch price\",\n    text: \"The price paid per token by when hatching the project\"\n  },\n  p1: {\n    name: \"Post-Hatch price\",\n    text:\n      \"The price per token after the Hatch ends, the curve is set, and anyone can interact with the bonding curve\"\n  },\n  wFee: {\n    name: \"Exit tribute\",\n    text:\n      \"The percentage that goes to the funding pool when token holders 'sell' by burning their token at the price determined by the bonding curve\"\n  },\n  vHalflife: {\n    name: \"Vesting half-life\",\n    text:\n      \"Tokens that are purchased during the Hatch are locked for 8 weeks and then released slowly such that 50% of the tokens will be able to be sold after this many weeks and 87.5% of the tokens after 3x this many weeks\"\n  },\n  d0: {\n    name: \"Hatch Raise\",\n    text: \"Amount of funds contributed during the hatch period\"\n  }\n};\n\nexport const supplyVsDemandChartDescription =\n  \"Visualization of the bonding curve up to 4x the initial size of the Collateral Pool Post-Hatch. This result is deterministic given the curve parameters and the Hatch raise. It will never change regardless of the campaign's performance, it simply shows how the price will react to changes in the Collateral Pool.\";\n\nexport const simulationChartDescription =\n  \"This chart shows a 52 week simulation of discrete transactions interacting with the Augmented Bonding Curve. Each transaction adds to or subtracts reserve from the system, modifying the price over time. The frequency, size and direction of each transaction is computed from a set of bounded random functions. This is a NOT a cadCAD simulation, but it showcases the intention behind cadCAD.\";\n\nexport const simulationParameterDescriptions: DescriptionObject = {\n  price: {\n    name: \"Price\",\n    text: \"Price of the token over time.\"\n  },\n  floorPrice: {\n    name: \"Floor price\",\n    text:\n      \"Lower bound of the price guaranteed by the vesting of hatch tokens. It decreases over time as more hatch tokens are allowed to be traded\"\n  },\n  totalRaised: {\n    name: \"Total funds raised\",\n    text: \"Cumulative sum of the funds sent to the Funding Pool\"\n  }\n};\n\nexport const resultParameterDescriptions: DescriptionObject = {\n  totalReserve: {\n    name: \"Collateral pool balance\",\n    text: \"Total DAI in the collateral pool at the end of the simulated period\"\n  },\n  initialHatchFunds: {\n    name: \"Funds generated from Raise Hatch\",\n    text: \"Funds raised during the Hatch that go directly to the cause\"\n  },\n  exitTributes: {\n    name: \"Funds generated from exit tributes\",\n    text:\n      \"Cumulative sum of exit tributes collected from only exit / sell / burn transactions\"\n  },\n  slippage: {\n    name: \"Median slippage\",\n    text:\n      \"Median of change in price a user experiences from the current price to the price received for exiting/selling/burning\"\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { InputFieldInterface, CurveParamsInterface } from \"./types\";\nimport InputParams from \"./InputParams\";\nimport { parameterDescriptions } from \"./parametersDescriptions\";\n\nexport default function CurveDesignInputParams({\n  curveParams,\n  setCurveParams\n}: {\n  curveParams: CurveParamsInterface;\n  setCurveParams(newCurveParams: any): void;\n}) {\n  const [theta, setTheta] = useState(0.35); // fraction allocated to reserve (.)\n  const [p0, setP0] = useState(0.1); // Hatch sale Price p0 (DAI / token)\n  const [p1, setP1] = useState(0.3); // Return factor (.)\n  const [wFee, setWFee] = useState(0.05); // friction coefficient (.)\n  const [vHalflife, setVHalflife] = useState(52); // friction coefficient (.)\n\n  useEffect(() => {\n    setTheta(curveParams.theta);\n    setP0(curveParams.p0);\n    setP1(curveParams.p1);\n    setWFee(curveParams.wFee);\n    setVHalflife(curveParams.vHalflife);\n  }, [curveParams]);\n\n  function _setP0(newP0: number) {\n    setP0(newP0);\n    if (p1 < newP0) setP1(newP0);\n    else if (p1 > newP0 * maxReturnRate) setP1(newP0 * maxReturnRate);\n  }\n\n  function setParentCurveParams() {\n    setCurveParams((params: CurveParamsInterface) => ({\n      ...params,\n      theta,\n      p0,\n      p1,\n      wFee,\n      vHalflife\n    }));\n  }\n\n  const maxReturnRate = 10;\n\n  const inputFields: InputFieldInterface[] = [\n    {\n      label: parameterDescriptions.theta.name,\n      description: parameterDescriptions.theta.text,\n      value: theta,\n      setter: setTheta,\n      min: 0,\n      max: 0.9,\n      step: 0.01,\n      suffix: \"%\",\n      format: (n: number) => `${Math.round(100 * n)}%`,\n      toText: (n: number) => String(+(n * 1e2).toFixed(0)),\n      toNum: (n: string) => parseFloat(n) * 1e-2\n    },\n    {\n      label: `${parameterDescriptions.p0.name} (DAI/token)`,\n      description: parameterDescriptions.p0.text,\n      value: p0,\n      setter: _setP0,\n      min: 0.01,\n      max: 1,\n      step: 0.01,\n      toText: (n: number) => String(+n.toFixed(2)),\n      toNum: (n: string) => parseFloat(n),\n      format: (n: number) => `$${n}`\n    },\n    {\n      label: `${parameterDescriptions.p1.name} (DAI/token)`,\n      description: parameterDescriptions.p1.text,\n      value: p1,\n      setter: setP1,\n      min: p0 || 0.1,\n      max: Number((maxReturnRate * p0).toFixed(2)),\n      step: 0.01,\n      toText: (n: number) => String(+n.toFixed(2)),\n      toNum: (n: string) => parseFloat(n),\n      format: (n: number) => `$${n}`\n    },\n    {\n      label: parameterDescriptions.wFee.name,\n      description: parameterDescriptions.wFee.text,\n      value: wFee,\n      setter: setWFee,\n      min: 0,\n      max: 0.1,\n      step: 0.001,\n      suffix: \"%\",\n      format: (n: number) => `${+(100 * n).toFixed(1)}%`,\n      toText: (n: number) => String(+(n * 1e2).toFixed(1)),\n      toNum: (n: string) => parseFloat(n) * 1e-2\n    },\n    {\n      label: `${parameterDescriptions.vHalflife.name} (weeks)`,\n      description: parameterDescriptions.vHalflife.text,\n      value: vHalflife,\n      setter: setVHalflife,\n      min: 1,\n      max: 52 * 2,\n      step: 1,\n      suffix: \"\",\n      format: (n: number) => String(Math.round(n)),\n      toText: (n: number) => String(Math.round(n)),\n      toNum: (n: string) => Math.round(parseInt(n))\n    }\n  ];\n\n  return (\n    <InputParams\n      inputFields={inputFields}\n      onChangeCommited={setParentCurveParams}\n    />\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport HelpIcon from \"@material-ui/icons/HelpOutline\";\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    marginLeft: \"6px\",\n    fontSize: \"0.9rem\",\n    cursor: \"pointer\",\n    transition: \"opacity ease 150ms\",\n    opacity: 0.2,\n    \"&:hover\": {\n      opacity: 0.85\n    }\n  },\n  popoverContainer: {\n    padding: theme.spacing(2)\n  },\n  paper: {\n    backgroundColor: \"#384b59\",\n    maxWidth: theme.breakpoints.values.md * 0.9,\n    [`@media screen and (max-width: ${theme.breakpoints.values.md}px)`]: {\n      maxWidth: \"90vw\"\n    }\n  },\n  // Descriptions\n  descriptionContainer: {\n    \"& > div:not(:last-child)\": {\n      paddingBottom: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n      borderBottom: \"1px solid #3f5463\"\n    },\n    \"& td\": {\n      verticalAlign: \"top\",\n      padding: theme.spacing(0.5)\n    }\n  },\n  descriptionTitle: {\n    padding: theme.spacing(0.5)\n  },\n  descriptionBody: {\n    color: \"#dbdfe4\",\n    padding: theme.spacing(0.5)\n  },\n  descriptionPadding: {\n    padding: theme.spacing(0.5)\n  }\n}));\n\nexport default function SimplePopover({\n  text,\n  title,\n  table,\n  body\n}: {\n  text?: any;\n  title?: string;\n  table?: { name: string; text: string }[];\n  body?: string;\n}) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  function handleClick(e: any) {\n    setAnchorEl(e.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  return (\n    <div className={classes.container}>\n      <HelpIcon onClick={handleClick} />\n\n      <Popover\n        PaperProps={{\n          className: classes.paper\n        }}\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        onClick={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\"\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\"\n        }}\n      >\n        <Box className={classes.popoverContainer}>\n          <div className={classes.descriptionContainer}>\n            {title && (\n              <div>\n                <Typography className={classes.descriptionTitle}>\n                  {title}\n                </Typography>\n              </div>\n            )}\n\n            {body && (\n              <div>\n                <Typography className={classes.descriptionBody}>\n                  {body}\n                </Typography>\n              </div>\n            )}\n\n            {table && (\n              <div>\n                <table>\n                  <tbody>\n                    {table.map(({ name, text }) => (\n                      <tr key={name}>\n                        <td>\n                          <Typography>{name}</Typography>\n                        </td>\n                        <td>\n                          <Typography className={classes.descriptionBody}>\n                            {text}\n                          </Typography>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            )}\n\n            {text}\n          </div>\n        </Box>\n      </Popover>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport NumberFormat from \"react-number-format\";\nimport { InputFieldInterface } from \"./types\";\nimport PrettoSlider from \"./PrettoSlider\";\nimport HelpText from \"./HelpText\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: theme.spacing(6, 0, 3)\n    },\n    lightBulb: {\n      verticalAlign: \"middle\",\n      marginRight: theme.spacing(1)\n    },\n    leftContainer: {\n      // color: theme.palette.text.secondary\n    },\n    centerContainer: {\n      // color: blackColor\n    },\n    listBoxContainer: {\n      \"& > div:not(:last-child)\": {\n        paddingBottom: \"12px\",\n        marginBottom: \"12px\",\n        borderBottom: \"1px solid #313d47\"\n      }\n    },\n    listBox: {\n      \"& > div\": {\n        display: \"flex\",\n        alignItems: \"center\",\n        \"& p\": {\n          marginBottom: 0\n        }\n      },\n      \"& > div:not(:last-child)\": {\n        paddingRight: \"12px\"\n      }\n    },\n    slider: {\n      color: theme.palette.primary.main\n    }\n  })\n);\n\nfunction NumberFormatCustom(props: any) {\n  const { inputRef, onChange, prefix, suffix, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({ target: { value: values.value } });\n      }}\n      thousandSeparator\n      prefix={prefix}\n      suffix={suffix}\n    />\n  );\n}\n\nexport default function InputParamBig({\n  inputFields,\n  onChangeCommited\n}: {\n  inputFields: InputFieldInterface[];\n  onChangeCommited(): void;\n}) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.listBoxContainer}>\n      {inputFields.map(\n        ({\n          label,\n          description,\n          value,\n          setter,\n          min,\n          max,\n          step,\n          prefix,\n          suffix,\n          format,\n          toText,\n          toNum\n        }) => {\n          function sanitizeInput(num: number = 0) {\n            if (isNaN(num)) num = 0;\n            if (num > max) num = max;\n            else if (num < min) num = min;\n            setter(num);\n          }\n\n          return (\n            <Grid key={label} container spacing={0} className={classes.listBox}>\n              <Grid\n                item\n                xs={6}\n                sm={6}\n                md={3}\n                lg={2}\n                className={classes.leftContainer}\n              >\n                <Typography variant=\"h6\">{label}</Typography>\n                <HelpText title={label} body={description} />\n              </Grid>\n\n              <Grid\n                item\n                xs={2}\n                sm={2}\n                md={1}\n                className={classes.centerContainer}\n              >\n                <TextField\n                  onChange={e => {\n                    sanitizeInput(\n                      toNum ? toNum(e.target.value) : parseFloat(e.target.value)\n                    );\n                    onChangeCommited();\n                  }}\n                  InputProps={{\n                    inputComponent: NumberFormatCustom,\n                    disableUnderline: true,\n                    inputProps: {\n                      prefix,\n                      suffix\n                    }\n                  }}\n                  value={toText ? toText(value) : value}\n                />\n              </Grid>\n\n              <Grid item xs={4} sm={4} md={8} lg={9}>\n                <PrettoSlider\n                  className={classes.slider}\n                  valueLabelDisplay=\"auto\"\n                  aria-label={label}\n                  defaultValue={value}\n                  onChange={(_, newValue) => sanitizeInput(Number(newValue))}\n                  onChangeCommitted={onChangeCommited}\n                  value={value}\n                  min={min}\n                  max={max}\n                  step={step}\n                  valueLabelFormat={value => format(value).replace(\"$\", \"\")}\n                />\n              </Grid>\n            </Grid>\n          );\n        }\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { InputFieldInterface, CurveParamsInterface } from \"./types\";\nimport InputParamBig from \"./InputParamBig\";\nimport { parameterDescriptions } from \"./parametersDescriptions\";\n\nexport default function SimulationInputParams({\n  curveParams,\n  setCurveParams\n}: {\n  curveParams: CurveParamsInterface;\n  setCurveParams(newCurveParams: any): void;\n}) {\n  const [d0, setD0] = useState(3e6); // Initial raise, d0 (DAI)\n\n  useEffect(() => {\n    setD0(curveParams.d0);\n  }, [curveParams]);\n\n  function setParentCurveParams() {\n    setCurveParams((params: CurveParamsInterface) => ({\n      ...params,\n      d0\n    }));\n  }\n\n  const inputFields: InputFieldInterface[] = [\n    {\n      label: `${parameterDescriptions.d0.name}`,\n      description: parameterDescriptions.d0.text,\n      value: d0,\n      setter: setD0,\n      min: 0.1e6,\n      max: 10e6,\n      step: 0.1e6,\n      suffix: \"M\",\n      format: (n: number) => `$${+(n * 1e-6).toFixed(1)}M`,\n      toText: (n: number) => String(+(n * 1e-6).toFixed(1)),\n      toNum: (n: string) => Math.floor(parseFloat(n) * 1e6)\n    }\n  ];\n\n  return (\n    <InputParamBig\n      inputFields={inputFields}\n      onChangeCommited={setParentCurveParams}\n    />\n  );\n}\n","/**\n * Returns an equally spaced array of numbers `from`, `to` with `steps`.\n */\nexport function linspace({\n  from = 0,\n  to,\n  steps\n}: {\n  from?: number;\n  to: number;\n  steps: number;\n}) {\n  const arr = [];\n  for (let x = from; x <= to; x += (to - from) / steps) arr.push(x);\n  return arr;\n}\n\n/**\n * Returns a uniform distribution of `num` ticks\n */\nexport function getLinspaceTicks(data: number[], num: number) {\n  const desiredPoints = [];\n  const step = (data[data.length - 1] - data[0]) / num;\n  for (let x = data[0]; x < data[data.length - 1]; x += step) {\n    desiredPoints.push(x);\n  }\n  if (desiredPoints.length < num + 1) desiredPoints.push(data[data.length - 1]);\n\n  return desiredPoints;\n}\n\n/**\n * Returns the last element of an array\n */\nexport function getLast(a: number[]) {\n  return a[a.length - 1];\n}\n\n/**\n * Returns the average of an array\n */\nexport function getAvg(a: number[]) {\n  return a.reduce((t, c) => t + Math.abs(c), 0) / a.length;\n}\n\n/**\n * Waits `ms` miliseconds and resolves\n */\nexport function pause(ms: number) {\n  return new Promise(r => setTimeout(r, ms));\n}\n\n/**\n * Parse the units of big numbers\n */\nexport function getUnits(\n  biggestNum: number\n): { scaling: number; unit: string } {\n  const [scaling, unit] =\n    // Billion\n    biggestNum > 0.5e9\n      ? [1e9, \"B\"]\n      : // Million\n      biggestNum > 0.5e6\n      ? [1e6, \"M\"]\n      : // 1 thousand\n      biggestNum > 0.5e3\n      ? [1e3, \"K\"]\n      : // No scale\n        [1, \"\"];\n  return { scaling, unit };\n}\n","/**\n * Computes the initial params given the \"user friendly\" params:\n * - Initial raise, `d0` (DAI)\n * - fraction allocated to reserve, `theta`\n * - Hatch sale price, `p0` (DAI / token)\n * - Return factor, `returnF`\n */\nexport function getInitialParams({\n  d0,\n  theta,\n  p0,\n  p1\n}: {\n  d0: number;\n  theta: number;\n  p0: number;\n  p1: number;\n}) {\n  const k = p1 / p0 / (1 - theta); // Invariant power kappa (.)\n  const R0 = (1 - theta) * d0; // Initial reserve (DAI)\n  const S0 = d0 / p0; // initial supply of tokens (token)\n  const V0 = S0 ** k / R0; // invariant coef\n  return { k, R0, S0, V0 };\n}\n\nexport function getR({ S, V0, k }: { S: number; V0: number; k: number }) {\n  return S ** k / V0;\n}\n\nexport function getS({ R, V0, k }: { R: number; V0: number; k: number }) {\n  return (V0 * R) ** (1 / k);\n}\n\n// compute the price if all that supply is burned\nexport function getMinPrice({\n  S,\n  H,\n  V0,\n  k\n}: {\n  S: number;\n  H: number;\n  V0: number;\n  k: number;\n}) {\n  if (S === H) {\n    const myR = getR({ S, V0, k });\n    const myP = getPriceR({ R: myR, V0, k }); // numerical precision make complex numbers just suppress it\n    return Math.abs(myP);\n  } else {\n    // compute the reserve if all that supply is burned\n    const minR = getR({ S: S - H, V0, k });\n    return getPriceR({ R: minR, V0, k });\n  }\n}\n\n/**\n * Computes the price at a specific reserve `R`\n */\nexport function getPriceR({ R, V0, k }: { R: number; V0: number; k: number }) {\n  return (k * R ** ((k - 1) / k)) / V0 ** (1 / k);\n}\n\n/**\n * Compute slippage at a point `R`, given a `deltaR`\n */\nexport function getSlippage({\n  R,\n  deltaR,\n  V0,\n  k\n}: {\n  R: number;\n  deltaR: number;\n  V0: number;\n  k: number;\n}) {\n  const S = (V0 * R) ** (1 / k);\n  const deltaS = (V0 * (R + deltaR)) ** (1 / k) - S;\n  const realizedPrice = deltaR / deltaS;\n  const spotPrice = getPriceR({ R, V0, k });\n  return Math.abs(realizedPrice - spotPrice) / spotPrice;\n}\n\n// Price walk utils\n\n/**\n * Get deltaR for a given price growth factor\n */\nexport function getDeltaR_priceGrowth({\n  R,\n  k,\n  priceGrowth\n}: {\n  R: number;\n  k: number;\n  priceGrowth: number;\n}) {\n  return -R + (priceGrowth * R ** (1 - 1 / k)) ** (k / (-1 + k));\n}\n\n/**\n * Computes a tx distribution using a normal distribution,\n * Given a sum of tx value and a number of transactions\n *\n * Demo: https://codepen.io/anon/pen/mNqJjv?editors=0010#0\n * Very quick: < 10ms for 10000 txs\n */\nexport function getTxDistribution({\n  sum,\n  num,\n  spread\n}: {\n  sum: number;\n  num: number;\n  spread: number;\n}) {\n  const mean = sum / num;\n  const off = mean * spread;\n  const x: number[] = [];\n  for (let i = 0; i < num; i++) {\n    x.push(randn_bm(mean - off, mean + off));\n  }\n  return x;\n}\n\nexport function vest_tokens({\n  week,\n  H, // unvested_hatch_tokens\n  halflife,\n  cliff\n}: {\n  week: number;\n  H: number;\n  halflife: number;\n  cliff: number;\n}) {\n  // check cliff\n  if (week < cliff) {\n    return 0;\n  } else {\n    // rate of release given half - life\n    const vest_fraction = 0.5 ** (1 / halflife);\n    // number of tokens that vest in this week\n    return H * (1 - vest_fraction);\n  }\n}\n\n// Statistics utils\n\n/**\n * Random variable uniformly distributed\n */\nexport function rv_U(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\n/**\n * Standard Normal variate using Box-Muller transform.\n * by https://stackoverflow.com/questions/25582882/javascript-math-random-normal-distribution-gaussian-bell-curve/36481059#36481059\n */\nfunction randn_bm(min: number, max: number) {\n  var u = 0,\n    v = 0;\n  while (u === 0) u = Math.random(); //Converting [0,1) to (0,1)\n  while (v === 0) v = Math.random();\n  let num = Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI * v);\n\n  num = num / 10.0 + 0.5; // Translate to 0 -> 1\n  if (num > 1 || num < 0) num = randn_bm(min, max); // resample between 0 and 1 if out of range\n  num *= max - min; // Stretch to fill range\n  num += min; // offset to min\n  return num;\n}\n\n// Array utils\n\nexport function getMedian(arr: number[]) {\n  const mid = Math.floor(arr.length / 2);\n  const nums = [...arr].sort((a, b) => a - b);\n  return arr.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2;\n}\n\nexport function getSum(arr: number[]) {\n  return arr.reduce((a, b) => a + b, 0);\n}\n","import React from \"react\";\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Legend,\n  ReferenceLine,\n  ResponsiveContainer,\n  Tooltip\n} from \"recharts\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { getLinspaceTicks, getUnits } from \"./utils\";\nimport { getInitialParams, getPriceR } from \"./math\";\nimport { useTheme } from \"@material-ui/styles\";\n\nconst isAnimationActive = false;\nconst keyHorizontal = \"x\";\nconst keyVertical = \"Supply (tokens) / Collateral (DAI)\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    tooltip: {\n      border: \"1px solid #313d47\",\n      backgroundColor: \"#384b59\",\n      padding: theme.spacing(1),\n      color: \"#c7ccd2\"\n    }\n  })\n);\n\nfunction SupplyVsDemandChart({\n  theta,\n  d0,\n  p0,\n  p1\n}: {\n  theta: number;\n  d0: number;\n  p0: number;\n  p1: number;\n}) {\n  // d0      - Initial raise, d0 (DAI)\n  // theta   - fraction allocated to reserve (.)\n  // p0      - Hatch sale Price p0 (DAI / token)\n  // returnF - Return factor (.)\n  // wFee    - friction coefficient (.)\n\n  // Hatch parameters\n  const {\n    k, // Invariant power kappa (.)\n    R0, // Initial reserve (DAI)\n    S0, // initial supply of tokens (token)\n    V0 // invariant coef\n  } = getInitialParams({\n    d0,\n    theta,\n    p0,\n    p1\n  });\n  const R0_round = Math.round(R0);\n  const S_of_R = (R: number) => S0 * (R / R0_round) ** (1 / k);\n\n  // Function setup\n  const f = S_of_R;\n  const from = 0;\n  const to = 4 * R0_round;\n  const steps = 100 + 1; // Add 1 for the ticks to match\n  const step = Math.round((to - from) / (steps - 1));\n\n  /**\n   * Prettify the result converting 1000000 to 1M\n   */\n  const biggest = Math.max(to, f(to));\n  const { scaling, unit } = getUnits(biggest);\n\n  const data = [];\n  for (let i = 0; i < steps; i++) {\n    const x = Math.round(from + step * i);\n    data.push({\n      [keyHorizontal]: x,\n      [keyVertical]: f(x)\n    });\n  }\n\n  // Chart components\n\n  const theme: any = useTheme();\n  const classes = useStyles();\n\n  const formatter = (n: number) =>\n    (+(n / scaling).toPrecision(2)).toLocaleString();\n\n  function renderColorfulLegendText(value: string) {\n    return <span style={{ color: theme.palette.text.secondary }}>{value}</span>;\n  }\n\n  function ReferenceLabel(props: any) {\n    const { textAnchor, viewBox } = props;\n    return (\n      <text\n        x={viewBox.x + 10}\n        y={30}\n        fill={theme.palette.text.secondary}\n        textAnchor={textAnchor}\n      >\n        Initial value\n      </text>\n    );\n  }\n\n  function CustomTooltip({ active, payload, label }: any) {\n    if (active) {\n      const supply = payload[0].value;\n      const reserve = label;\n      const price = getPriceR({ R: reserve, V0, k });\n      const toolTipData: string[][] = [\n        [\"Supply\", formatter(supply) + unit, \"tokens\"],\n        [\"Collateral\", formatter(reserve) + unit, \"DAI\"],\n        [\"Price\", price.toFixed(2), \"DAI/token\"]\n      ];\n      return (\n        <div className={classes.tooltip}>\n          <table>\n            <tbody>\n              {toolTipData.map(([name, value, _unit]) => (\n                <tr key={name}>\n                  <td>{name}</td>\n                  <td>{value}</td>\n                  <td>{_unit}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      );\n    } else return null;\n  }\n\n  return (\n    <ResponsiveContainer debounce={1}>\n      <AreaChart\n        width={0}\n        height={400}\n        data={data}\n        margin={{\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0\n        }}\n      >\n        <CartesianGrid\n          vertical={false}\n          stroke={theme.palette.text.secondary}\n          strokeOpacity={0.13}\n        />\n        <XAxis\n          interval={24}\n          dataKey={keyHorizontal}\n          tickFormatter={formatter}\n          unit={unit}\n          tick={{ fill: theme.palette.text.secondary }}\n          stroke={theme.palette.text.secondary}\n        />\n        <YAxis\n          interval={\"preserveStartEnd\"}\n          ticks={getLinspaceTicks(data.map(d => d[keyVertical]), 3)}\n          tickFormatter={formatter}\n          unit={unit}\n          tick={{ fill: theme.palette.text.secondary }}\n          domain={[0, f(to)]}\n          stroke={theme.palette.text.secondary}\n        />\n        <Tooltip content={<CustomTooltip />} />\n        <Area\n          isAnimationActive={isAnimationActive}\n          type=\"monotone\"\n          dataKey={keyVertical}\n          stroke={theme.palette.primary.main}\n          fill={theme.palette.primary.main}\n          fillOpacity={0.3}\n          strokeWidth={2}\n        />\n        <ReferenceLine\n          x={R0_round}\n          stroke={theme.palette.primary.main}\n          strokeDasharray=\"9 0\"\n          label={<ReferenceLabel />}\n        />\n        <Legend formatter={renderColorfulLegendText} />\n      </AreaChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport default SupplyVsDemandChart;\n","import React from \"react\";\nimport \"./dotsLoader.css\";\n\nexport default function DotsLoader() {\n  return (\n    <div className=\"spinner\">\n      <div className=\"bounce1\" />\n      <div className=\"bounce2\" />\n      <div className=\"bounce3\" />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextWithPopover from \"./TextWithPopover\";\nimport DotsLoader from \"./DotsLoader\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: theme.spacing(6, 0, 3)\n    },\n    lightBulb: {\n      verticalAlign: \"middle\",\n      marginRight: theme.spacing(1)\n    },\n    leftContainer: {\n      color: theme.palette.text.secondary\n    },\n    centerContainer: {\n      // color: blackColor\n    },\n    listBoxContainer: {\n      \"& > div:not(:last-child)\": {\n        marginBottom: \"12px\",\n        borderBottom: \"1px solid #313d47\"\n      }\n    },\n    listBox: {\n      paddingBottom: \"12px\",\n      \"& > div\": {\n        display: \"flex\",\n        alignItems: \"center\",\n        \"& p\": {\n          marginBottom: 0\n        }\n      },\n      \"& > div:not(:last-child)\": {\n        paddingRight: \"12px\"\n      }\n    },\n    valueFooter: {\n      color: theme.palette.text.secondary,\n      fontSize: \"80%\"\n    }\n  })\n);\n\nexport default function ResultParams({\n  resultFields,\n  simulationDuration\n}: {\n  resultFields: {\n    label: string;\n    description: string;\n    value: number | string;\n    valueFooter?: string;\n  }[];\n  simulationDuration: number;\n}) {\n  /**\n   * When resizing the window the chart animation looks very bad\n   * Keep the animation active only during the initial animation time,\n   * but afterwards, deactivate to prevent the re-size ugly effect\n   */\n  const [isAnimationActive, setIsAnimationActive] = useState(\n    process.env.NODE_ENV !== \"development\"\n  );\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setIsAnimationActive(false);\n    }, simulationDuration);\n    return () => {\n      clearTimeout(timeout);\n    };\n  });\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.listBoxContainer}>\n      {resultFields.map(({ label, description, value, valueFooter }) => (\n        <Grid key={label} container spacing={0} className={classes.listBox}>\n          <Grid item xs={8} className={classes.leftContainer}>\n            <TextWithPopover content={label} popoverText={description} />\n          </Grid>\n\n          <Grid item xs={4} className={classes.centerContainer}>\n            {isAnimationActive ? (\n              <DotsLoader />\n            ) : (\n              <div>\n                <Typography>{value}</Typography>\n                {valueFooter && (\n                  <Typography className={classes.valueFooter}>\n                    {valueFooter}\n                  </Typography>\n                )}\n              </div>\n            )}\n          </Grid>\n        </Grid>\n      ))}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Legend,\n  ReferenceLine,\n  ResponsiveContainer,\n  Tooltip\n} from \"recharts\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { linspace, getUnits } from \"./utils\";\n\nconst keyHorizontal = \"x\";\nconst keyVerticalLeft = \"Price (DAI/token)\";\nconst keyVerticalLeft2 = \"Floor price (DAI/token)\";\nconst keyVerticalRight = \"Total funds raised (DAI)\";\nconst p1LineText = \"Post-Hatch price\";\nconst p0LineText = \"Hatch price\";\n\n// Do to transparency and color merging issues\n// these colors are handpicked to look the closest to the theme colors\nconst yLeftColor = \"#53c388\";\nconst yRightColor = \"#4090d9\";\nconst referenceLineColor = \"#b7c1cb\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    tooltip: {\n      border: \"1px solid #313d47\",\n      backgroundColor: \"#384b59\",\n      padding: theme.spacing(1),\n      color: \"#c7ccd2\"\n    }\n  })\n);\n\nfunction PriceSimulationChart({\n  priceTimeseries,\n  totalFundsRaisedTimeseries,\n  floorpriceTimeseries,\n  simulationDuration,\n  p0,\n  p1\n}: {\n  priceTimeseries: number[];\n  totalFundsRaisedTimeseries: number[];\n  floorpriceTimeseries: number[];\n  simulationDuration: number;\n  p0: number;\n  p1: number;\n}) {\n  // d0      - Initial raise, d0 (DAI)\n  // theta   - fraction allocated to reserve (.)\n  // p0      - Hatch sale Price p0 (DAI / token)\n  // returnF - Return factor (.)\n  // wFee    - friction coefficient (.)\n\n  const data = [];\n  for (let t = 0; t < priceTimeseries.length; t++) {\n    data.push({\n      [keyHorizontal]: t,\n      [keyVerticalLeft]: priceTimeseries[t] || 0,\n      [keyVerticalLeft2]: floorpriceTimeseries[t] || 0,\n      [keyVerticalRight]: totalFundsRaisedTimeseries[t] || 0\n    });\n  }\n\n  /**\n   * When resizing the window the chart animation looks very bad\n   * Keep the animation active only during the initial animation time,\n   * but afterwards, deactivate to prevent the re-size ugly effect\n   */\n  const [isAnimationActive, setIsAnimationActive] = useState(\n    process.env.NODE_ENV !== \"development\"\n  );\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setIsAnimationActive(false);\n    }, simulationDuration + 100);\n    return () => {\n      clearTimeout(timeout);\n    };\n  });\n\n  // Compute chart related math\n\n  const totalFundsMin = totalFundsRaisedTimeseries[0];\n  const totalFundsMax = totalFundsRaisedTimeseries.slice(-1)[0];\n  const totalFundsRange = totalFundsMax - totalFundsMin;\n\n  const daiFormatter = (n: number) => (+n.toFixed(2)).toLocaleString();\n  const { scaling, unit } = getUnits(totalFundsMax);\n  const fundsFormatter = (n: number) => (+n.toPrecision(3)).toLocaleString();\n  const fundsFormatterShort = (n: number) =>\n    (+(n / scaling).toPrecision(3)).toLocaleString();\n\n  // Load styles\n\n  const theme: any = useTheme();\n  const classes = useStyles();\n\n  // Chart components\n\n  function renderColorfulLegendText(value: string) {\n    return <span style={{ color: theme.palette.text.secondary }}>{value}</span>;\n  }\n\n  function ReferenceLabel(props: any) {\n    const { textAnchor, viewBox, text, fill } = props;\n    return (\n      <text\n        x={viewBox.x + 4}\n        y={viewBox.y + 17}\n        fill={referenceLineColor}\n        textAnchor={textAnchor}\n      >\n        {text}\n      </text>\n    );\n  }\n\n  function CustomTooltip({ active, payload, label }: any) {\n    if (active) {\n      const price = payload[0].value;\n      const floor = payload[1].value;\n      const funds = payload[2].value;\n      const weekNum = label;\n      const toolTipData: string[][] = [\n        [\"Price\", daiFormatter(price), \"DAI/tk\"],\n        [\"Floor P.\", daiFormatter(floor), \"DAI/tk\"],\n        [\"Funds R.\", fundsFormatterShort(funds) + unit, \"DAI\"],\n        [\"Week\", weekNum, \"\"]\n      ];\n\n      return (\n        <div className={classes.tooltip}>\n          <table>\n            <tbody>\n              {toolTipData.map(([name, value, unit]) => (\n                <tr key={name}>\n                  <td>{name}</td>\n                  <td>{value}</td>\n                  <td>{unit}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      );\n    } else return null;\n  }\n\n  return (\n    <ResponsiveContainer debounce={1}>\n      <AreaChart\n        width={0}\n        height={400}\n        data={data}\n        margin={{\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0\n        }}\n      >\n        <CartesianGrid\n          vertical={false}\n          stroke={theme.palette.text.secondary}\n          strokeOpacity={0.13}\n        />\n        <XAxis\n          dataKey={keyHorizontal}\n          tick={{ fill: theme.palette.text.secondary }}\n          stroke={theme.palette.text.secondary}\n          ticks={[\n            ...linspace({\n              to: priceTimeseries.length,\n              steps: 4\n            }).map(Math.floor),\n            priceTimeseries.length - 1\n          ]}\n        />\n\n        {/* Price time evolution */}\n        <YAxis\n          yAxisId=\"left\"\n          domain={[0, Math.max(...priceTimeseries, p1 * 1.25)]}\n          tickFormatter={daiFormatter}\n          tick={{ fill: yLeftColor }}\n          stroke={yLeftColor}\n        />\n\n        {/* Capital collected from withdraw fees - AXIS */}\n        <YAxis\n          yAxisId=\"right\"\n          domain={[\n            totalFundsMin.toPrecision(2),\n            +(totalFundsMax + totalFundsRange).toPrecision(2)\n          ]}\n          orientation=\"right\"\n          tickFormatter={fundsFormatter}\n          tick={{ fill: yRightColor }}\n          stroke={yRightColor}\n        />\n\n        <Tooltip content={<CustomTooltip />} />\n\n        <Area\n          isAnimationActive={isAnimationActive}\n          animationDuration={simulationDuration}\n          yAxisId=\"left\"\n          type=\"monotone\"\n          dataKey={keyVerticalLeft}\n          stroke={theme.palette.primary.main}\n          fill={theme.palette.primary.main}\n          fillOpacity={0.3}\n          strokeWidth={2}\n        />\n        <Area\n          isAnimationActive={isAnimationActive}\n          animationDuration={simulationDuration}\n          yAxisId=\"left\"\n          type=\"monotone\"\n          dataKey={keyVerticalLeft2}\n          stroke={\"#adcd2e\"}\n          fill={\"#adcd2e\"}\n          fillOpacity={0.05}\n          strokeWidth={2}\n        />\n\n        <ReferenceLine\n          y={p0}\n          yAxisId=\"left\"\n          stroke={theme.palette.primary.main}\n          label={<ReferenceLabel text={p0LineText} />}\n        />\n        <ReferenceLine\n          y={p1}\n          yAxisId=\"left\"\n          stroke={theme.palette.primary.main}\n          label={<ReferenceLabel text={p1LineText} />}\n        />\n\n        {/* Capital collected from withdraw fees - AREA */}\n        <Area\n          isAnimationActive={isAnimationActive}\n          animationDuration={simulationDuration}\n          yAxisId=\"right\"\n          type=\"monotone\"\n          dataKey={keyVerticalRight}\n          stroke={\"#0085ff\"}\n          fill={theme.palette.secondary.dark}\n          fillOpacity={0.5}\n          strokeWidth={2}\n        />\n\n        {/* <ReferenceLine\n          x={R0}\n          stroke=\"#90a4ae\"\n          strokeDasharray=\"6 3\"\n          label={<ReferenceLabel />}\n        /> */}\n        <Legend formatter={renderColorfulLegendText} />\n      </AreaChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport default PriceSimulationChart;\n","import React, { useState, useEffect, useMemo } from \"react\";\n// Material UI\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\n// Components\nimport Header from \"./Header\";\nimport CurveDesignInputParams from \"./CurveDesignInputParams\";\nimport SimulationInputParams from \"./SimulationInputParams\";\nimport SupplyVsDemandChart from \"./SupplyVsDemandChart\";\nimport ResultParams from \"./ResultParams\";\nimport PriceSimulationChart from \"./PriceSimulationChart\";\nimport HelpText from \"./HelpText\";\n// Text content\nimport {\n  parameterDescriptions,\n  simulationParameterDescriptions,\n  resultParameterDescriptions,\n  supplyVsDemandChartDescription,\n  simulationChartDescription\n} from \"./parametersDescriptions\";\n// Utils\nimport { getLast, getAvg, pause } from \"./utils\";\nimport {\n  getInitialParams,\n  getPriceR,\n  getMinPrice,\n  getS,\n  vest_tokens,\n  getR,\n  getSlippage,\n  getTxDistribution,\n  getDeltaR_priceGrowth,\n  rv_U,\n  getMedian,\n  getSum\n} from \"./math\";\nimport { throttle } from \"lodash\";\n// General styles\nimport \"./app.css\";\n\nconst headerOffset = 10;\nconst simulationDuration = 4000;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    mainContainer: {\n      \"& > div:not(:last-child)\": {\n        paddingBottom: theme.spacing(3)\n      },\n      \"& > div\": {\n        \"& > div\": {\n          paddingTop: \"0 !important\"\n        }\n      },\n      paddingBottom: theme.spacing(9)\n    },\n    simulationContainer: {\n      minHeight: \"442px\"\n    },\n    paper: {\n      width: \"100%\",\n      height: \"100%\",\n      minHeight: 310,\n      backgroundColor: \"#293640\"\n    },\n    box: {\n      padding: theme.spacing(3, 3)\n    },\n    boxButton: {\n      padding: theme.spacing(3, 3)\n    },\n    boxHeader: {\n      padding: theme.spacing(3, 3),\n      height: theme.spacing(headerOffset),\n      display: \"flex\",\n      alignItems: \"center\",\n      borderBottom: \"1px solid #313d47\"\n    },\n    boxBorderBottom: {\n      borderBottom: \"1px solid #313d47\"\n    },\n    initialRaise: {\n      justifyContent: \"space-between\"\n    },\n    boxChart: {\n      width: \"100%\",\n      height: \"100%\",\n      minHeight: 310,\n      maxHeight: 350,\n      padding: theme.spacing(3, 3),\n      // Correct the chart excessive margins\n      paddingRight: \"5px\",\n      paddingLeft: \"5px\"\n    },\n    boxPlaceholder: {\n      padding: theme.spacing(3, 3),\n      display: \"flex\",\n      height: \"100%\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      color: theme.palette.text.secondary,\n      opacity: 0.4\n    },\n    header: {\n      backgroundColor: \"#0b1216\",\n      color: \"#f8f8f8\",\n      textAlign: \"center\",\n      padding: theme.spacing(3, 0, 6 + headerOffset),\n      marginBottom: -theme.spacing(headerOffset)\n    },\n    button: {\n      // background: \"linear-gradient(290deg, #2ad179, #4ab47c)\", // Green gradient\n      background: \"linear-gradient(290deg, #1aa059, #3d9567)\", // Darker Green gradient\n      // background: \"linear-gradient(290deg, #1880e0, #3873d8)\", // blue gradient\n      color: \"white\"\n    },\n    // Descriptions\n    descriptionContainer: {\n      \"& > div:not(:last-child)\": {\n        paddingBottom: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n        borderBottom: \"1px solid #3f5463\"\n      },\n      \"& td\": {\n        verticalAlign: \"top\",\n        padding: theme.spacing(0.5)\n      }\n    },\n    descriptionTitle: {\n      padding: theme.spacing(0.5)\n    },\n    descriptionBody: {\n      color: \"#dbdfe4\"\n    },\n    descriptionPadding: {\n      padding: theme.spacing(0.5)\n    },\n    d0Container: {\n      \"& > div\": {\n        padding: \"0 12px 0 0 !important\",\n        display: \"flex\",\n        alignItems: \"center\"\n      }\n    },\n    d0Number: {\n      padding: \"0 !important\",\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    d0Slidder: {\n      padding: \"0 12px 0 0 !important\",\n      display: \"flex\",\n      alignItems: \"center\"\n    }\n  })\n);\n\nexport default function App() {\n  const [curveParams, setCurveParams] = useState({\n    theta: 0.35, // fraction allocated to reserve (.)\n    p0: 0.1, // Hatch sale price p0 (DAI / token)\n    p1: 0.3, // Return factor (.)\n    wFee: 0.05, // friction coefficient (.)\n    vHalflife: 52, // Vesting half life (weeks)\n    d0: 3e6 // Initial raise, d0 (DAI)\n  });\n\n  const { d0, theta, p0, p1, wFee, vHalflife } = curveParams;\n\n  /**\n   * Throttle the curve update to prevent the expensive chart\n   * to re-render too often\n   */\n  const setCurveParamsThrottle = useMemo(\n    () => throttle(setCurveParams, 250),\n    []\n  );\n\n  // Simulation results\n  const {\n    k, // Invariant power kappa (.)\n    R0, // Initial reserve (DAI)\n    S0, // initial supply of tokens (token)\n    V0 // invariant coef\n  } = getInitialParams({\n    d0,\n    theta,\n    p0,\n    p1\n  });\n\n  const [priceTimeseries, setPriceTimeseries] = useState([0]);\n  const [withdrawFeeTimeseries, setWithdrawFeeTimeseries] = useState([0]);\n  const [floorpriceTimeseries, setFloorpriceTimeseries] = useState([0]);\n  const [totalReserve, setTotalReserve] = useState(R0);\n  const [withdrawCount, setWithdrawCount] = useState(0);\n  const [avgSlippage, setAvgSlippage] = useState(0);\n  const [avgTxSize, setAvgTxSize] = useState(0);\n  // Simulation state variables\n  const [simulationActive, setSimulationActive] = useState(false);\n  const [simulationRunning, setSimulationRunning] = useState(false);\n\n  useEffect(() => {\n    setSimulationActive(false);\n  }, [curveParams]);\n\n  // #### TEST: Immediate simulation\n\n  async function startSimulation() {\n    // If there's a simulation already active, clear it\n    clearSimulation();\n    await pause(0);\n\n    // Start simulation by setting it to active\n    setSimulationActive(true);\n  }\n\n  function clearSimulation() {\n    // Stop simulation\n    setSimulationActive(false);\n    // Clear simulation variables\n    setWithdrawCount(0);\n    setPriceTimeseries([0]);\n    setWithdrawFeeTimeseries([0]);\n    setAvgSlippage(0);\n  }\n\n  useEffect(() => {\n    let canContinueSimulation = true;\n\n    async function simulateRandomDelta() {\n      const R_t: number[] = [R0];\n      const S_t: number[] = [S0];\n      const p_t: number[] = [getPriceR({ R: R0, V0, k })];\n      const wFee_t: number[] = [0];\n      const slippage_t: number[] = [];\n      const avgTxSize_t: number[] = [];\n\n      // hatchers tokens = S0[section added by Z]\n      const H_t: number[] = [S0]; // total hatcher tokens not vested\n      const floorprice_t: number[] = []; // initially the price is the floor as all tokens are hatcher tokens\n\n      // Random walk\n      const numSteps = 52;\n      const u_min = 0.97;\n      const u_max = 1.04;\n      const tx_spread = 10;\n      // vesting(should this be exposed in the app ?)\n      const cliff = 8; // weeks before vesting starts ~2 months\n      // const halflife = 52; // 26 weeks, half life is ~6 months\n      // percentage of the hatch tokens which vest per week(since that is our timescale in the sim)\n\n      // numSteps = 52 take 8ms to run\n      setSimulationRunning(true);\n      for (let t = 0; t < numSteps; t++) {\n        const txsWeek = rv_U(5, 2 * t + 5);\n\n        const R = getLast(R_t);\n        const S = getLast(S_t);\n        const H = getLast(H_t);\n\n        // enforce the effects of the unvested tokens not being burnable\n        let u_lower;\n        if (H > S) {\n          u_lower = 1;\n        } else {\n          // compute the reserve if all that supply is burned\n          const R_ratio = getR({ S: S - H, V0, k }) / R;\n          u_lower = Math.max(1 - R_ratio, u_min);\n        }\n        let priceGrowth = rv_U(u_lower, u_max);\n        if (t > 7 && t < 10) {\n          priceGrowth = rv_U(1.07, 1.2);\n        }\n\n        const deltaR = getDeltaR_priceGrowth({ R, k, priceGrowth });\n        const R_next = R + deltaR;\n\n        const txs = getTxDistribution({\n          sum: deltaR,\n          num: txsWeek,\n          spread: tx_spread\n        });\n        // Compute slippage\n        const slippage_txs = txs.map(txR =>\n          getSlippage({ R, deltaR: txR, V0, k })\n        );\n        const slippage = getMedian(slippage_txs);\n\n        const txsWithdraw = txs.filter(tx => tx < 0);\n        const wFees = -wFee * getSum(txsWithdraw);\n        //  txsWithdraw.reduce((t, c) => t + c, 0);\n\n        // Vest\n        const delta_H = vest_tokens({ week: t, H, halflife: vHalflife, cliff });\n        const H_next = H - delta_H;\n\n        // find floor price\n        const S_next = getS({ R, V0, k });\n        const floorprice_next = getMinPrice({\n          S: S_next,\n          H: S_next - H_next,\n          V0,\n          k\n        });\n\n        const _avgTxSize = getMedian(txsWithdraw);\n\n        R_t.push(R_next);\n        S_t.push(S_next);\n        H_t.push(H_next);\n        p_t.push(getPriceR({ R: R_next, V0, k }));\n        slippage_t.push(slippage);\n        avgTxSize_t.push(_avgTxSize);\n        wFee_t.push(getLast(wFee_t) + wFees);\n\n        floorprice_t.push(floorprice_next);\n        setWithdrawCount(c => c + txsWithdraw.length);\n\n        // Stop the simulation if it's no longer active\n        if (!simulationActive || !canContinueSimulation) break;\n      }\n\n      // floorprice_t is missing one data point\n      floorprice_t[floorprice_t.length] = floorprice_t[floorprice_t.length - 1];\n\n      setPriceTimeseries(p_t);\n      setWithdrawFeeTimeseries(wFee_t);\n      setFloorpriceTimeseries(floorprice_t);\n      setAvgSlippage(getAvg(slippage_t));\n      setAvgTxSize(getAvg(avgTxSize_t.filter(n => !isNaN(n))));\n      setTotalReserve(getLast(R_t));\n\n      setSimulationRunning(false);\n    }\n\n    if (simulationActive) simulateRandomDelta();\n    // Return an \"unsubscribe\" function that halts the run\n    return () => {\n      canContinueSimulation = false;\n    };\n  }, [simulationActive]);\n\n  // End results computed for chart visualization\n  const initialHatchFunds = d0 * theta;\n  const totalFundsRaisedTimeseries = withdrawFeeTimeseries.map(\n    x => x + initialHatchFunds\n  );\n\n  const resultFields = [\n    {\n      label: resultParameterDescriptions.totalReserve.name,\n      description: resultParameterDescriptions.totalReserve.text,\n      value: (+totalReserve.toPrecision(3)).toLocaleString() + \" DAI\"\n    },\n    {\n      label: resultParameterDescriptions.initialHatchFunds.name,\n      description: resultParameterDescriptions.initialHatchFunds.text,\n      value: Math.round(d0 * theta).toLocaleString() + \" DAI\"\n    },\n    {\n      label: resultParameterDescriptions.exitTributes.name,\n      description: resultParameterDescriptions.exitTributes.text,\n      value:\n        (+getLast(withdrawFeeTimeseries).toPrecision(3)).toLocaleString() +\n        \" DAI\",\n      valueFooter: `From ${withdrawCount} exit txs`\n    },\n    {\n      label: resultParameterDescriptions.slippage.name,\n      description: resultParameterDescriptions.slippage.text,\n      value: +(100 * avgSlippage).toFixed(3) + \" %\",\n      valueFooter: `Avg tx size ${Math.round(avgTxSize).toLocaleString()} DAI`\n    }\n  ];\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <header className={classes.header}>\n        <Container fixed>\n          <Header />\n        </Container>\n      </header>\n\n      <Container fixed className={classes.mainContainer}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12} md={6} lg={4}>\n            <Paper className={classes.paper}>\n              <Box className={classes.boxHeader}>\n                <Typography variant=\"h6\">Curve Design</Typography>\n                <HelpText\n                  title={\"Parameters description\"}\n                  table={[\n                    parameterDescriptions.theta,\n                    parameterDescriptions.p0,\n                    parameterDescriptions.p1,\n                    parameterDescriptions.wFee,\n                    parameterDescriptions.vHalflife\n                  ]}\n                />\n              </Box>\n\n              <Box className={`${classes.box} ${classes.boxBorderBottom}`}>\n                <CurveDesignInputParams\n                  curveParams={curveParams}\n                  setCurveParams={setCurveParamsThrottle}\n                />\n              </Box>\n            </Paper>\n          </Grid>\n\n          <Grid item xs={12} sm={12} md={6} lg={8}>\n            <Paper className={classes.paper}>\n              <Box className={classes.boxHeader}>\n                <Typography variant=\"h6\">Preview</Typography>\n                <HelpText body={supplyVsDemandChartDescription} />\n              </Box>\n\n              <Box className={classes.boxChart}>\n                <SupplyVsDemandChart theta={theta} d0={d0} p0={p0} p1={p1} />\n              </Box>\n            </Paper>\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Paper>\n              <Box className={`${classes.box} ${classes.boxBorderBottom}`}>\n                <SimulationInputParams\n                  curveParams={curveParams}\n                  setCurveParams={setCurveParamsThrottle}\n                />\n              </Box>\n\n              <Box className={classes.boxHeader}>\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                >\n                  <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    onClick={startSimulation}\n                    disabled={simulationRunning}\n                  >\n                    Run simulation\n                  </Button>\n                </Grid>\n              </Box>\n            </Paper>\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3} className={classes.simulationContainer}>\n          {simulationActive ? (\n            <>\n              <Grid item xs={12} sm={12} md={6} lg={8}>\n                <Paper className={classes.paper}>\n                  <Box className={classes.boxHeader}>\n                    <Typography variant=\"h6\">Simulation</Typography>\n                    <HelpText\n                      body={simulationChartDescription}\n                      table={Object.values(simulationParameterDescriptions)}\n                    />\n                  </Box>\n\n                  <Box className={classes.boxChart}>\n                    <PriceSimulationChart\n                      priceTimeseries={priceTimeseries}\n                      floorpriceTimeseries={floorpriceTimeseries}\n                      totalFundsRaisedTimeseries={totalFundsRaisedTimeseries}\n                      simulationDuration={simulationDuration}\n                      p0={p0}\n                      p1={p1}\n                    />\n                  </Box>\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} sm={12} md={6} lg={4}>\n                <Paper className={classes.paper}>\n                  <Box className={classes.boxHeader}>\n                    <Typography variant=\"h6\">Results</Typography>\n                    <HelpText\n                      title={\"Result parameters description\"}\n                      table={Object.values(resultParameterDescriptions)}\n                    />\n                  </Box>\n\n                  <Box className={classes.box}>\n                    <ResultParams\n                      resultFields={resultFields}\n                      simulationDuration={simulationDuration}\n                    />\n                  </Box>\n                </Paper>\n              </Grid>\n            </>\n          ) : (\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Box className={classes.boxPlaceholder}>\n                  <Typography variant=\"h6\">\n                    Run a simulation to see results\n                  </Typography>\n                </Box>\n              </Paper>\n            </Grid>\n          )}\n        </Grid>\n      </Container>\n    </>\n  );\n}\n","import red from \"@material-ui/core/colors/red\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: {\n      main: \"#2ecd79\"\n    },\n    secondary: {\n      main: \"#116be0\",\n      light: \"#0f8bff\",\n      dark: \"#116be0\"\n    },\n    error: {\n      main: red.A400\n    },\n    background: {\n      default: \"#fff\",\n      paper: \"#293640\"\n    },\n    text: {\n      primary: \"#fff\",\n      secondary: \"#9aa3ad\"\n    }\n  },\n  typography: {\n    h6: {\n      fontWeight: 400\n    }\n  }\n});\n\nconsole.log(theme);\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}